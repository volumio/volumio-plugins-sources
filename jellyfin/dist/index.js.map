{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport libQ from 'kew';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport vconf from 'v-conf';\n\nimport jellyfin from './lib/JellyfinContext';\nimport ServerPoller from './lib/connection/ServerPoller';\nimport { Jellyfin as JellyfinSdk } from '@jellyfin/sdk';\nimport pluginInfo from '../package.json';\nimport BrowseController from './lib/controller/browse';\nimport ConnectionManager, { JellyfinSdkInitInfo } from './lib/connection/ConnectionManager';\nimport SearchController, { SearchQuery } from './lib/controller/search/SearchController';\nimport PlayController from './lib/controller/play/PlayController';\nimport { ExplodedTrackInfo } from './lib/controller/browse/view-handlers/Explodable';\nimport { jsPromiseToKew, kewToJSPromise } from './lib/util';\nimport ServerHelper from './lib/util/ServerHelper';\nimport { SongView } from './lib/controller/browse/view-handlers/SongViewHandler';\nimport ViewHelper from './lib/controller/browse/view-handlers/ViewHelper';\nimport { AlbumView } from './lib/controller/browse/view-handlers/AlbumViewHandler';\nimport { RenderedPage } from './lib/controller/browse/view-handlers/ViewHandler';\nimport SongHelper from './lib/util/SongHelper';\n\ninterface GotoParams extends ExplodedTrackInfo {\n  type: 'album' | 'artist';\n}\n\ntype SetSongFavoriteResponse = {\n  service: 'jellyfin',\n  uri: string,\n  favourite: boolean\n} | { success: false } | undefined;\n\nclass ControllerJellyfin {\n  #context: any;\n  #config: any;\n  #commandRouter: any;\n\n  #serverPoller: ServerPoller | null;\n  #connectionManager: ConnectionManager | null;\n  #browseController: BrowseController | null;\n  #searchController: SearchController | null;\n  #playController: PlayController | null;\n\n  constructor(context: any) {\n    this.#context = context;\n    this.#commandRouter = context.coreCommand;\n  }\n\n  getUIConfig() {\n    const defer = libQ.defer();\n\n    const lang_code = this.#commandRouter.sharedVars.get('language_code');\n\n    const configPrepTasks = [\n      this.#commandRouter.i18nJson(`${__dirname}/i18n/strings_${lang_code}.json`,\n        `${__dirname}/i18n/strings_en.json`,\n        `${__dirname}/UIConfig.json`)\n    ];\n\n    libQ.all(configPrepTasks).then((configParams: [any, string]) => {\n      const [ uiconf ] = configParams;\n      const removeServerUIConf = uiconf.sections[1];\n      const browseSettingsUIConf = uiconf.sections[2];\n      const playAddUIConf = uiconf.sections[3];\n      const searchSettingsUIConf = uiconf.sections[4];\n      const myMediaLibraryUIConf = uiconf.sections[5];\n\n      // Remove Server section\n      const servers = ServerHelper.getServersFromConfig();\n      servers.forEach((server, index) => {\n        removeServerUIConf.content[0].options.push({\n          value: index,\n          label: `${server.username}@${server.url}`\n        });\n      });\n      if (servers.length > 0) {\n        removeServerUIConf.content[0].value = removeServerUIConf.content[0].options[0];\n      }\n\n      // Browse Settings section\n      const itemsPerPage = jellyfin.getConfigValue('itemsPerPage', 47);\n      const showAllAlbumTracks = jellyfin.getConfigValue('showAllAlbumTracks', true);\n      const showAllPlaylistTracks = jellyfin.getConfigValue('showAllPlaylistTracks', true);\n      const rememberFilters = jellyfin.getConfigValue('rememberFilters', true);\n      const markFavoriteTarget = jellyfin.getConfigValue('markFavoriteTarget', 'all');\n      const markFavoriteTargetOptions = browseSettingsUIConf.content[4].options;\n      browseSettingsUIConf.content[0].value = itemsPerPage;\n      browseSettingsUIConf.content[1].value = showAllAlbumTracks;\n      browseSettingsUIConf.content[2].value = showAllPlaylistTracks;\n      browseSettingsUIConf.content[3].value = rememberFilters;\n      browseSettingsUIConf.content[4].value = markFavoriteTargetOptions.find((option: any) => option.value === markFavoriteTarget);\n\n      // Play / Add to Queue section\n      const maxTracks = jellyfin.getConfigValue('maxTracks', 100);\n      const noMaxTracksSingleAlbum = jellyfin.getConfigValue('noMaxTracksSingleAlbum', true);\n      const noMaxTracksSinglePlaylist = jellyfin.getConfigValue('noMaxTracksSinglePlaylist', true);\n      const gaplessPlayback = jellyfin.getConfigValue('gaplessPlayback', true);\n      playAddUIConf.content[0].value = maxTracks;\n      playAddUIConf.content[1].value = noMaxTracksSingleAlbum;\n      playAddUIConf.content[2].value = noMaxTracksSinglePlaylist;\n      playAddUIConf.content[3].value = gaplessPlayback;\n\n      // Search Settings section\n      const searchAlbums = jellyfin.getConfigValue('searchAlbums', true);\n      const searchAlbumsResultCount = jellyfin.getConfigValue('searchAlbumsResultCount', 11);\n      const searchArtists = jellyfin.getConfigValue('searchArtists', true);\n      const searchArtistsResultCount = jellyfin.getConfigValue('searchArtistsResultCount', 11);\n      const searchSongs = jellyfin.getConfigValue('searchSongs', true);\n      const searchSongsResultCount = jellyfin.getConfigValue('searchSongsResultCount', 11);\n      searchSettingsUIConf.content[0].value = searchAlbums;\n      searchSettingsUIConf.content[1].value = searchAlbumsResultCount;\n      searchSettingsUIConf.content[2].value = searchArtists;\n      searchSettingsUIConf.content[3].value = searchArtistsResultCount;\n      searchSettingsUIConf.content[4].value = searchSongs;\n      searchSettingsUIConf.content[5].value = searchSongsResultCount;\n\n      // My Media / Library\n      const showLatestMusicSection = jellyfin.getConfigValue('showLatestMusicSection', true);\n      const latestMusicSectionItems = jellyfin.getConfigValue('latestMusicSectionItems', 11);\n      const showRecentlyPlayedSection = jellyfin.getConfigValue('showRecentlyPlayedSection', true);\n      const recentlyPlayedSectionItems = jellyfin.getConfigValue('recentlyPlayedSectionItems', 5);\n      const showFrequentlyPlayedSection = jellyfin.getConfigValue('showFrequentlyPlayedSection', true);\n      const frequentlyPlayedSectionItems = jellyfin.getConfigValue('frequentlyPlayedSectionItems', 5);\n      const showFavoriteArtistsSection = jellyfin.getConfigValue('showFavoriteArtistsSection', true);\n      const favoriteArtistsSectionItems = jellyfin.getConfigValue('favoriteArtistsSectionItems', 5);\n      const showFavoriteAlbumsSection = jellyfin.getConfigValue('showFavoriteAlbumsSection', true);\n      const favoriteAlbumsSectionItems = jellyfin.getConfigValue('favoriteAlbumsSectionItems', 5);\n      const showFavoriteSongsSection = jellyfin.getConfigValue('showFavoriteSongsSection', true);\n      const favoriteSongsSectionItems = jellyfin.getConfigValue('favoriteSongsSectionItems', 5);\n      const collectionInSectionItems = jellyfin.getConfigValue('collectionInSectionItems', 11);\n      myMediaLibraryUIConf.content[0].value = showLatestMusicSection;\n      myMediaLibraryUIConf.content[1].value = latestMusicSectionItems;\n      myMediaLibraryUIConf.content[2].value = showRecentlyPlayedSection;\n      myMediaLibraryUIConf.content[3].value = recentlyPlayedSectionItems;\n      myMediaLibraryUIConf.content[4].value = showFrequentlyPlayedSection;\n      myMediaLibraryUIConf.content[5].value = frequentlyPlayedSectionItems;\n      myMediaLibraryUIConf.content[6].value = showFavoriteArtistsSection;\n      myMediaLibraryUIConf.content[7].value = favoriteArtistsSectionItems;\n      myMediaLibraryUIConf.content[8].value = showFavoriteAlbumsSection;\n      myMediaLibraryUIConf.content[9].value = favoriteAlbumsSectionItems;\n      myMediaLibraryUIConf.content[10].value = showFavoriteSongsSection;\n      myMediaLibraryUIConf.content[11].value = favoriteSongsSectionItems;\n      myMediaLibraryUIConf.content[12].value = collectionInSectionItems;\n\n      defer.resolve(uiconf);\n    })\n      .fail((error: any) => {\n        jellyfin.getLogger().error(`[jellyfin] getUIConfig(): Cannot populate Jellyfin configuration - ${error}`);\n        defer.reject(new Error());\n      });\n\n    return defer.promise;\n  }\n\n  refreshUIConfig() {\n    this.#commandRouter.getUIConfigOnPlugin('music_service', 'jellyfin', {}).then((config: any) => {\n      this.#commandRouter.broadcastMessage('pushUiConfig', config);\n    });\n  }\n\n  configAddServer(data: any) {\n    const host = data['host']?.trim() || '';\n    if (host === '') {\n      jellyfin.toast('error', jellyfin.getI18n('JELLYFIN_SPECIFY_HOST'));\n      return;\n    }\n\n    let url;\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      url = (new URL(host)).toString();\n    }\n    catch (error) {\n      jellyfin.toast('error', jellyfin.getI18n('JELLYFIN_INVALID_HOST'));\n      return;\n    }\n\n    const username = data['username']?.trim() || '';\n    const password = data['password'] || '';\n\n    if (username === '') {\n      jellyfin.toast('error', jellyfin.getI18n('JELLYFIN_SPECIFY_USERNAME'));\n      return;\n    }\n\n    if (ServerHelper.hasServerConfig(username, host)) {\n      jellyfin.toast('error', jellyfin.getI18n('JELLYFIN_SERVER_CONF_EXISTS', username, host));\n      return;\n    }\n\n    const servers = ServerHelper.getServersFromConfig();\n    servers.push({\n      url: host,\n      username: username,\n      password: password\n    });\n    jellyfin.setConfigValue('servers', servers, true);\n    jellyfin.toast('success', jellyfin.getI18n('JELLYFIN_SERVER_ADDED'));\n\n    this.#serverPoller?.addTarget(host);\n    this.refreshUIConfig();\n  }\n\n  async configRemoveServer(data: any) {\n    const index = data['server_entry'].value;\n    if (index !== '') {\n      const servers = ServerHelper.getServersFromConfig();\n      const removed = servers.splice(index, 1)[0];\n      jellyfin.setConfigValue('servers', servers, true);\n      jellyfin.toast('success', jellyfin.getI18n('JELLYFIN_SERVER_REMOVED'));\n\n      const removedServer = this.#serverPoller?.findOnlineServer(removed.url);\n      if (removedServer) {\n        const connection = this.#connectionManager?.findConnection(removedServer, removed.username, true);\n        if (connection) {\n          await this.#connectionManager?.logout(connection);\n        }\n\n        const hasOtherServerWithSameUrl = !!servers.find((server) =>\n          removedServer.connectionUrl === ServerHelper.getConnectionUrl(server.url));\n\n        if (!hasOtherServerWithSameUrl) {\n          this.#serverPoller?.removeTarget(removedServer.url);\n        }\n      }\n\n      this.refreshUIConfig();\n    }\n  }\n\n  configSaveBrowseSettings(data: any) {\n    const showKeys = [\n      'showAllAlbumTracks',\n      'showAllPlaylistTracks',\n      'rememberFilters'\n    ];\n    showKeys.forEach((key) => {\n      jellyfin.setConfigValue(key, data[key]);\n    });\n\n    jellyfin.setConfigValue('markFavoriteTarget', data['markFavoriteTarget'].value);\n\n    const itemsPerPage = parseInt(data.itemsPerPage, 10);\n    if (itemsPerPage) {\n      jellyfin.setConfigValue('itemsPerPage', itemsPerPage);\n      jellyfin.toast('success', jellyfin.getI18n('JELLYFIN_SETTINGS_SAVED'));\n    }\n    else {\n      jellyfin.toast('error', jellyfin.getI18n('JELLYFIN_SETTINGS_ERR_ITEMS_PER_PAGE'));\n    }\n  }\n\n  configSavePlayAddSettings(data: any) {\n    const noMaxTrackKeys = [\n      'noMaxTracksSingleAlbum',\n      'noMaxTracksSinglePlaylist',\n      'gaplessPlayback'\n    ];\n    noMaxTrackKeys.forEach((key) => {\n      jellyfin.setConfigValue(key, data[key]);\n    });\n    const maxTracks = parseInt(data.maxTracks, 10);\n    if (maxTracks) {\n      jellyfin.setConfigValue('maxTracks', maxTracks);\n      jellyfin.toast('success', jellyfin.getI18n('JELLYFIN_SETTINGS_SAVED'));\n    }\n    else {\n      jellyfin.toast('error', jellyfin.getI18n('JELLYFIN_SETTINGS_ERR_MAX_TRACK'));\n    }\n  }\n\n  configSaveSearchSettings(data: any) {\n    const searchKeys = [\n      'searchAlbums',\n      'searchArtists',\n      'searchSongs'\n    ];\n    searchKeys.forEach((key) => {\n      jellyfin.setConfigValue(key, data[key]);\n    });\n\n    const resultCountKeys = [\n      'searchAlbumsResultCount',\n      'searchArtistsResultCount',\n      'searchSongsResultCount'\n    ];\n    let hasInvalidResultCountValue = false;\n    resultCountKeys.forEach((key) => {\n      const value = parseInt(data[key], 10);\n      if (value) {\n        jellyfin.setConfigValue(key, value);\n      }\n      else {\n        hasInvalidResultCountValue = true;\n      }\n    });\n\n    if (hasInvalidResultCountValue) {\n      jellyfin.toast('error', jellyfin.getI18n('JELLYFIN_SETTINGS_ERR_RESULT_COUNT'));\n    }\n    else {\n      jellyfin.toast('success', jellyfin.getI18n('JELLYFIN_SETTINGS_SAVED'));\n    }\n  }\n\n  configSaveMyMediaLibrarySettings(data: any) {\n    const showKeys = [\n      'showLatestMusicSection',\n      'showRecentlyPlayedSection',\n      'showFrequentlyPlayedSection',\n      'showFavoriteArtistsSection',\n      'showFavoriteAlbumsSection',\n      'showFavoriteSongsSection'\n    ];\n    showKeys.forEach((key) => {\n      jellyfin.setConfigValue(key, data[key]);\n    });\n\n    const itemsKeys = [\n      'latestMusicSectionItems',\n      'recentlyPlayedSectionItems',\n      'frequentlyPlayedSectionItems',\n      'favoriteArtistsSectionItems',\n      'favoriteAlbumsSectionItems',\n      'favoriteSongsSectionItems',\n      'collectionInSectionItems'\n    ];\n    let hasInvalidItemsValue = false;\n    itemsKeys.forEach((key) => {\n      const value = parseInt(data[key], 10);\n      if (value) {\n        jellyfin.setConfigValue(key, value);\n      }\n      else {\n        hasInvalidItemsValue = true;\n      }\n    });\n\n    if (hasInvalidItemsValue) {\n      jellyfin.toast('error', jellyfin.getI18n('JELLYFIN_SETTINGS_ERR_NUM_ITEMS'));\n    }\n    else {\n      jellyfin.toast('success', jellyfin.getI18n('JELLYFIN_SETTINGS_SAVED'));\n    }\n  }\n\n  onVolumioStart() {\n    const configFile = this.#commandRouter.pluginManager.getConfigurationFile(this.#context, 'config.json');\n    this.#config = new vconf();\n    this.#config.loadFile(configFile);\n    return libQ.resolve();\n  }\n\n  onStart() {\n    jellyfin.init(this.#context, this.#config);\n\n    // Initialize Jellyfin SDK\n    const deviceInfo = jellyfin.getDeviceInfo();\n    const sdkInitInfo: JellyfinSdkInitInfo = {\n      clientInfo: {\n        name: 'Jellyfin plugin for Volumio',\n        version: pluginInfo.version\n      },\n      deviceInfo: {\n        name: deviceInfo.name,\n        id: deviceInfo.id\n      }\n    };\n    const sdk = new JellyfinSdk(sdkInitInfo);\n\n    this.#serverPoller = new ServerPoller(sdk);\n    const pollListener = () => {\n      jellyfin.set('onlineServers', this.#serverPoller?.getOnlineServers());\n    };\n    this.#serverPoller.on('serverOnline', pollListener.bind(this));\n    this.#serverPoller.on('serverLost', pollListener.bind(this));\n    const servers = ServerHelper.getServersFromConfig();\n    this.#serverPoller.addTarget(servers.reduce<string[]>((urls, s) => {\n      urls.push(s.url);\n      return urls;\n    }, []));\n\n    this.#connectionManager = new ConnectionManager(sdkInitInfo);\n\n    this.#browseController = new BrowseController(this.#connectionManager);\n    this.#searchController = new SearchController(this.#connectionManager);\n    this.#playController = new PlayController(this.#connectionManager);\n\n    this.#addToBrowseSources();\n\n    jellyfin.getLogger().info('[jellyfin] Initialized plugin with device info: ', deviceInfo);\n\n    return libQ.resolve();\n  }\n\n  onStop() {\n    const defer = libQ.defer();\n\n    this.#serverPoller?.removeAllListeners();\n    this.#serverPoller?.clearTargets();\n    this.#serverPoller = null;\n\n    this.#commandRouter.volumioRemoveToBrowseSources('Jellyfin');\n\n    this.#browseController = null;\n    this.#searchController = null;\n    this.#playController?.dispose();\n    this.#playController = null;\n\n    if (this.#connectionManager) {\n      this.#connectionManager?.logoutAll().then(() => {\n        jellyfin.reset();\n        defer.resolve();\n      });\n    }\n    else {\n      defer.resolve();\n    }\n\n    return defer.promise;\n  }\n\n  getConfigurationFiles() {\n    return [ 'config.json' ];\n  }\n\n  #addToBrowseSources() {\n    const data = {\n      name: 'Jellyfin',\n      uri: 'jellyfin',\n      plugin_type: 'music_service',\n      plugin_name: 'jellyfin',\n      albumart: '/albumart?sourceicon=music_service/jellyfin/dist/assets/images/jellyfin-mono.png'\n    };\n    this.#commandRouter.volumioAddToBrowseSources(data);\n  }\n\n  handleBrowseUri(uri: string) {\n    if (this.#browseController) {\n      return jsPromiseToKew(this.#browseController.browseUri(uri));\n    }\n    return libQ.reject('Jellyfin plugin is not started');\n  }\n\n  explodeUri(uri: string) {\n    if (this.#browseController) {\n      return jsPromiseToKew(this.#browseController.explodeUri(uri));\n    }\n    return libQ.reject('Jellyfin plugin is not started');\n  }\n\n  clearAddPlayTrack(track: any) {\n    return this.#playController?.clearAddPlayTrack(track);\n  }\n\n  stop() {\n    return this.#playController?.stop();\n  }\n\n  pause() {\n    return this.#playController?.pause();\n  }\n\n  resume() {\n    return this.#playController?.resume();\n  }\n\n  seek(position: number) {\n    return this.#playController?.seek(position);\n  }\n\n  next() {\n    return this.#playController?.next();\n  }\n\n  previous() {\n    return this.#playController?.previous();\n  }\n\n  prefetch(track: any) {\n    if (!this.#playController) {\n      return libQ.reject('Jellyfin plugin is not started');\n    }\n    return jsPromiseToKew(this.#playController.prefetch(track));\n  }\n\n  search(query: SearchQuery) {\n    if (this.#searchController) {\n      return jsPromiseToKew(this.#searchController.search(query));\n    }\n    return libQ.reject('Jellyfin plugin is not started');\n  }\n\n  goto(data: GotoParams) {\n    return jsPromiseToKew((async (): Promise<RenderedPage> => {\n      if (!this.#playController || !this.#browseController) {\n        throw Error('Jellyfin plugin is not started');\n      }\n\n      try {\n        const { song, connection } = await this.#playController.getSongFromTrack(data);\n        if (data.type === 'album') {\n          if (song.album?.id) {\n            const songView: SongView = {\n              name: 'songs',\n              albumId: song.album.id\n            };\n            return this.#browseController.browseUri(`jellyfin/${connection.id}/${ViewHelper.constructUriSegmentFromView(songView)}`);\n          }\n          throw Error('Song is missing album info');\n        }\n        else if (data.type === 'artist') {\n          if (song.artists?.[0]?.id) {\n            const albumView: AlbumView = {\n              name: 'albums',\n              artistId: song.artists[0].id\n            };\n            return this.#browseController.browseUri(`jellyfin/${connection.id}/${ViewHelper.constructUriSegmentFromView(albumView)}`);\n          }\n          throw Error('Song is missing artist info');\n        }\n        else {\n          throw Error(`Invalid type '${data.type}'`);\n        }\n      }\n      catch (error: any) {\n        throw Error(`Failed to fetch requested info: ${error.message}`);\n      }\n    })());\n  }\n\n  addToFavourites(data: { uri: string, service: string }) {\n    return this.#setSongFavorite(data.uri, true);\n  }\n\n  removeFromFavourites(data: {uri: string, service: string}) {\n    return this.#setSongFavorite(data.uri, false);\n  }\n\n  #setSongFavorite(uri: string, favorite: boolean) {\n    return jsPromiseToKew((async (): Promise<SetSongFavoriteResponse> => {\n      if (!this.#connectionManager) {\n        throw Error('Jellyfin plugin is not started');\n      }\n      // Unlike Jellyfin, you can only 'heart' songs in Volumio.\n      // Note that adding items through 'Add to Playlist -> Favorites' is not the same as clicking the 'heart' icon - it goes through\n      // Volumio's `playlistManager.addToPlaylist()` instead, and that method does not support custom plugin implementations.\n      try {\n        const setFavoriteResult = await SongHelper.setFavoriteByUri(uri, favorite, this.#connectionManager);\n        if (setFavoriteResult.favorite) {\n          jellyfin.getLogger().info(`[jellyfin] Marked favorite on server: ${setFavoriteResult.canonicalUri}`);\n        }\n        else {\n          jellyfin.getLogger().info(`[jellyfin] Unmarked favorite on server: ${setFavoriteResult.canonicalUri}`);\n        }\n\n        const canonicalUri = setFavoriteResult.canonicalUri;\n\n        // If removing from favorites (which, btw, you can only do in Favourites or player view when song is playing), Volumio will also\n        // Call its own implementation. But if adding to favorites, then we need to do it ourselves (subject to `markFavoriteTarget` setting).\n        if (favorite && jellyfin.getConfigValue('markFavoriteTarget', 'all') === 'all') {\n          // Add to Volumio 'Favorites' playlist\n          const playlistManager = jellyfin.getPlaylistManager();\n          // Do better than Volumio's implementation by checking if song already added\n          const favouritesPage = await kewToJSPromise(playlistManager.listFavourites()) as RenderedPage;\n          const alreadyAdded = favouritesPage.navigation?.lists?.[0]?.items.some((item) => item.uri === canonicalUri);\n          if (!alreadyAdded) {\n            jellyfin.getLogger().info(`[jellyfin] Adding song to Volumio favorites: ${canonicalUri}`);\n            await kewToJSPromise(playlistManager.commonAddToPlaylist(\n              playlistManager.favouritesPlaylistFolder, 'favourites', 'jellyfin', canonicalUri));\n          }\n          else {\n            jellyfin.getLogger().info(`[jellyfin] Volumio favorites already contains entry with song URI: ${canonicalUri}`);\n          }\n        }\n\n        /**\n         * ONLY return `{...favourite: boolean}` if current playing track points to the same (un)favorited song, otherwise\n         * Volumio UI will blindly update the heart icon in the player view even if it is playing a different track*.\n         * * This only works when `markFavoriteTarget` is `serverOnly' and a song is being favorited.  See:\n         * 1. `checkFavourites()` in `playlistManager.commonAddToPlaylist()`; and\n         * 2. `playlistManager.removeFromFavourites()`\n         */\n        if (jellyfin.getStateMachine().getState().uri === canonicalUri) {\n          // Return full response in the hope that one day Volumio UI will actually compare the uri with the one currently played\n          // Before refreshing the heart icon in player view.\n          return {\n            service: 'jellyfin',\n            uri: canonicalUri || '',\n            favourite: setFavoriteResult.favorite\n          };\n        }\n\n        return undefined;\n      }\n      catch (error: any) {\n        if (favorite) {\n          jellyfin.getLogger().error('Failed to add song to favorites: ', error);\n          jellyfin.toast('error', `Failed to add song to favorites: ${error.message}`);\n        }\n        else {\n          jellyfin.getLogger().error('Failed to remove song from favorites: ', error);\n          jellyfin.toast('error', `Failed to remove song from favorites: ${error.message}`);\n        }\n        return { success: false };\n      }\n    })());\n  }\n}\n\nexport = ControllerJellyfin;\n"]}