{"version":3,"file":"UserViewParser.js","sourceRoot":"","sources":["../../../../src/lib/model/parser/UserViewParser.ts"],"names":[],"mappings":";;;;;AACA,sEAAyE;AAEzE,6CAA4C;AAC5C,sDAAiE;AACjE,8DAAsC;AAEtC,MAAqB,cAAe,SAAQ,oBAAoB;IAE9D,KAAK,CAAC,QAAQ,CAAC,IAAiB,EAAE,GAAQ;QACxC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC;SACb;QAED,MAAM,MAAM,GAAa;YACvB,GAAG,IAAI;YACP,IAAI,EAAE,qBAAU,CAAC,QAAQ;SAC1B,CAAC;QAEF,IAAI,IAAI,CAAC,IAAI,KAAK,qBAAY,CAAC,gBAAgB,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS,EAAE;YACpF,MAAM,CAAC,YAAY,GAAG,uBAAY,CAAC,WAAW,CAAC;SAChD;aACI,IAAI,IAAI,CAAC,IAAI,KAAK,qBAAY,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,KAAK,WAAW,EAAE;YACnF,MAAM,CAAC,YAAY,GAAG,uBAAY,CAAC,SAAS,CAAC;SAC9C;aACI,IAAI,IAAI,CAAC,IAAI,KAAK,qBAAY,CAAC,gBAAgB,IAAI,IAAI,CAAC,cAAc,KAAK,OAAO,EAAE;YACvF,MAAM,CAAC,YAAY,GAAG,uBAAY,CAAC,OAAO,CAAC;SAC5C;aACI,IAAI,IAAI,CAAC,IAAI,KAAK,qBAAY,CAAC,QAAQ,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS,EAAE;YACjF,MAAM,CAAC,YAAY,GAAG,uBAAY,CAAC,OAAO,CAAC;SAC5C;aACI;YACH,OAAO,IAAI,CAAC;SACb;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AA/BD,iCA+BC","sourcesContent":["import { Api } from '@jellyfin/sdk';\nimport { BaseItemKind } from '@jellyfin/sdk/lib/generated-client/models';\nimport { BaseItemDto } from '@jellyfin/sdk/lib/generated-client/models/base-item-dto';\nimport { EntityType } from '../../entities';\nimport UserView, { UserViewType } from '../../entities/UserView';\nimport BaseParser from './BaseParser';\n\nexport default class UserViewParser extends BaseParser<UserView> {\n\n  async parseDto(data: BaseItemDto, api: Api): Promise<UserView | null> {\n    const base = await super.parseDto(data, api);\n    if (!base) {\n      return null;\n    }\n\n    const result: UserView = {\n      ...base,\n      type: EntityType.UserView\n    };\n\n    if (data.Type === BaseItemKind.CollectionFolder && data.CollectionType === 'boxsets') {\n      result.userViewType = UserViewType.Collections;\n    }\n    else if (data.Type === BaseItemKind.UserView && data.CollectionType === 'playlists') {\n      result.userViewType = UserViewType.Playlists;\n    }\n    else if (data.Type === BaseItemKind.CollectionFolder && data.CollectionType === 'music') {\n      result.userViewType = UserViewType.Library;\n    }\n    else if (data.Type === BaseItemKind.UserView && data.CollectionType === 'folders') {\n      result.userViewType = UserViewType.Folders;\n    }\n    else {\n      return null;\n    }\n\n    return result;\n  }\n}\n"]}