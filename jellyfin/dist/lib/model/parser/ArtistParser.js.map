{"version":3,"file":"ArtistParser.js","sourceRoot":"","sources":["../../../../src/lib/model/parser/ArtistParser.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAIA,8DAAsC;AAEtC,MAAqB,YAAa,SAAQ,oBAAkB;IAI1D,YAAY,IAAgD;QAC1D,KAAK,EAAE,CAAC;QAHV,qCAAkD;QAIhD,uBAAA,IAAI,sBAAS,IAAI,MAAA,CAAC;IACpB,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,IAAiB,EAAE,GAAQ;QACxC,MAAM,IAAI,GAAG,MAAM,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC;SACb;QAED,OAAO;YACL,GAAG,IAAI;YACP,IAAI,EAAE,uBAAA,IAAI,0BAAM;YAChB,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAC7B,CAAC;IACJ,CAAC;CACF;AArBD,+BAqBC","sourcesContent":["import { Api } from '@jellyfin/sdk';\nimport { BaseItemDto } from '@jellyfin/sdk/lib/generated-client/models/base-item-dto';\nimport { EntityType } from '../../entities';\nimport Artist from '../../entities/Artist';\nimport BaseParser from './BaseParser';\n\nexport default class ArtistParser extends BaseParser<Artist> {\n\n  #type: EntityType.Artist | EntityType.AlbumArtist;\n\n  constructor(type: EntityType.Artist | EntityType.AlbumArtist) {\n    super();\n    this.#type = type;\n  }\n\n  async parseDto(data: BaseItemDto, api: Api): Promise<Artist | null> {\n    const base = await super.parseDto(data, api);\n    if (!base) {\n      return null;\n    }\n\n    return {\n      ...base,\n      type: this.#type,\n      genres: this.getGenres(data)\n    };\n  }\n}\n"]}