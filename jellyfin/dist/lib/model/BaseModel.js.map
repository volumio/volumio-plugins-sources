{"version":3,"file":"BaseModel.js","sourceRoot":"","sources":["../../../src/lib/model/BaseModel.ts"],"names":[],"mappings":"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","sourcesContent":["import { Api } from '@jellyfin/sdk';\nimport { ItemsApiGetItemsByUserIdRequest } from '@jellyfin/sdk/lib/generated-client/api/items-api';\nimport { getItemsApi } from '@jellyfin/sdk/lib/utils/api/items-api';\nimport { getUserLibraryApi } from '@jellyfin/sdk/lib/utils/api/user-library-api';\nimport { getFilterApi } from '@jellyfin/sdk/lib/utils/api/filter-api';\nimport { SortOrder } from '@jellyfin/sdk/lib/generated-client/models/sort-order';\nimport { FilterApiGetQueryFiltersLegacyRequest } from '@jellyfin/sdk/lib/generated-client/api/filter-api';\nimport { UserLibraryApiGetItemRequest } from '@jellyfin/sdk/lib/generated-client/api/user-library-api';\nimport { ImageType } from '@jellyfin/sdk/lib/generated-client/models/image-type';\nimport Parser from './parser/Parser';\nimport { BaseItemDto, BaseItemKind, ItemFields, ItemFilter } from '@jellyfin/sdk/lib/generated-client/models';\nimport ServerConnection from '../connection/ServerConnection';\nimport { EntityType } from '../entities';\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\nexport interface GetItemsResult<T> {\n  items: T[],\n  startIndex: number;\n  total: number;\n  omitted: number;\n  nextStartIndex?: number;\n}\n\nexport interface GetFiltersResult {\n  years: number[] | null;\n}\n\nexport type GetItemType = EntityType.Playlist | EntityType.Album |\n    EntityType.Artist | EntityType.Genre | EntityType.Song;\n\nexport interface GetItemsParams {\n  parentId?: string;\n  startIndex?: number;\n  limit?: number; // Negative value: no limit\n  sortBy?: string[] | string | null; // `null`: do not set sortBy (use Jellyfin default)\n  sortOrder?: SortOrder[] | string | null; // `null`: do not set sortOrder (use Jellyfin default)\n  recursive?: boolean;\n  filters?: ItemFilter[] | string;\n  nameStartsWith?: string;\n  itemTypes?: GetItemType[] | string;\n  excludeItemTypes?: GetItemType[] | string;\n  excludeItemIds?: string[] | string;\n  fields?: ItemFields[] | string;\n  genreIds?: string[] | string;\n  artistIds?: string[] | string;\n  albumArtistIds?: string[] | string;\n  contributingArtistIds?: string[] | string;\n  years?: number[] | string;\n  search?: string;\n}\n\nexport interface GetItemParams {\n  itemId: string;\n}\n\nexport interface GetFiltersParams {\n  parentId: string;\n  itemTypes?: (EntityType.Album | EntityType.Song)[];\n}\n\ntype GetApiMethod<A> = {\n  getApi: (api: Api) => A,\n  getItems: keyof A\n};\n\nexport default class BaseModel {\n\n  #connection: ServerConnection;\n\n  constructor(connection: ServerConnection) {\n    this.#connection = connection;\n  }\n\n  async getItemsFromAPI<T, A = unknown>(params: GetItemsParams, parser: Parser<T>, getApiMethod?: GetApiMethod<A>): Promise<GetItemsResult<T>> {\n    const apiParams = this.#toApiGetItemsParams(params);\n    let response;\n    if (getApiMethod) {\n      const itemsApi = getApiMethod.getApi(this.#connection.api);\n      response = await (itemsApi[getApiMethod.getItems] as any)(apiParams);\n    }\n    else {\n      const itemsApi = getItemsApi(this.#connection.api);\n      response = await itemsApi.getItemsByUserId(apiParams);\n    }\n\n    const responseItems = response.data?.Items || [];\n    const filtered = await this.parseItemDtos(responseItems, parser);\n    const itemsResult: GetItemsResult<T> = {\n      items: filtered,\n      startIndex: params.startIndex || 0, // Don't use StartIndex from response (possibly always 0)\n      total: response.data.TotalRecordCount || 0,\n      omitted: responseItems.length - filtered.length\n    };\n\n    const nextStartIndex = itemsResult.startIndex + responseItems.length;\n    if (itemsResult.total > nextStartIndex) {\n      itemsResult.nextStartIndex = nextStartIndex;\n    }\n\n    return itemsResult;\n  }\n\n  protected async parseItemDtos<T>(items: BaseItemDto[], parser: Parser<T>, filterNull?: true): Promise<T[]>;\n  protected async parseItemDtos<T>(items: BaseItemDto[], parser: Parser<T>, filterNull: false): Promise<(T | null)[]>;\n  protected async parseItemDtos<T>(items: BaseItemDto[], parser: Parser<T>, filterNull = true): Promise<(T | null)[]> {\n    const parsePromises = items.map<Promise<T | null>>((data: any) => parser.parseDto(data, this.#connection.api));\n    const parsedItems = await Promise.all<T | null>(parsePromises);\n    return filterNull ? parsedItems.filter((item) => item !== null) : parsedItems;\n  }\n\n  async getItemFromApi<T>(params: GetItemParams, parser: Parser<T>): Promise<T | null> {\n    const apiParams = this.#toApiGetItemParams(params);\n    const userLibraryApi = getUserLibraryApi(this.#connection.api);\n    const response = await userLibraryApi.getItem(apiParams);\n    return parser.parseDto(response.data, this.#connection.api);\n  }\n\n  #toApiGetItemsParams(params: GetItemsParams): ItemsApiGetItemsByUserIdRequest {\n    if (!this.#connection.auth?.User?.Id) {\n      throw Error('No auth');\n    }\n    const result: Mutable<ItemsApiGetItemsByUserIdRequest> = {\n      userId: this.#connection.auth.User.Id,\n      enableImageTypes: [ ImageType.Primary ],\n      imageTypeLimit: 1,\n      recursive: true\n    };\n\n    if (params.parentId) {\n      result.parentId = params.parentId;\n    }\n\n    result.startIndex = params.startIndex || 0;\n\n    if (params.limit === undefined || params.limit >= 0) {\n      result.limit = params.limit || 47;\n    }\n    //Limit: jellyfin.getConfigValue<number>('itemsPerPage', 47),\n\n    if (params.sortBy !== null) {\n      result.sortBy = this.#ensureTypedArray(params.sortBy);\n      if (result.sortBy.length === 0) {\n        result.sortBy.push('SortName');\n      }\n    }\n\n    if (params.sortOrder !== null) {\n      result.sortOrder = this.#ensureTypedArray(params.sortOrder);\n      if (result.sortOrder.length === 0) {\n        result.sortOrder.push(SortOrder.Ascending);\n      }\n    }\n\n    if (params.recursive !== undefined) {\n      result.recursive = params.recursive;\n    }\n\n    const itemFields = this.#ensureTypedArray(params.fields);\n    if (itemFields.length > 0) {\n      result.fields = itemFields;\n    }\n\n    const itemFilters = this.#ensureTypedArray(params.filters);\n    if (itemFilters.length > 0) {\n      result.filters = itemFilters;\n    }\n\n    if (params.nameStartsWith) {\n      result.nameStartsWith = params.nameStartsWith;\n    }\n\n    const itemTypes = this.#ensureTypedArray(params.itemTypes);\n    if (itemTypes.length > 0) {\n      result.includeItemTypes = itemTypes.map((t) => {\n        switch (t) {\n          case EntityType.Album:\n            return BaseItemKind.MusicAlbum;\n\n          case EntityType.Artist:\n            return BaseItemKind.MusicArtist;\n\n          case EntityType.Genre:\n            return BaseItemKind.MusicGenre;\n\n          case EntityType.Playlist:\n            return BaseItemKind.Playlist;\n\n          case EntityType.Song:\n          default:\n            return BaseItemKind.Audio;\n        }\n      });\n    }\n\n    const excludeItemTypes = this.#ensureTypedArray(params.excludeItemTypes);\n    if (excludeItemTypes.length > 0) {\n      result.excludeItemTypes = excludeItemTypes.map((t) => {\n        switch (t) {\n          case EntityType.Album:\n            return BaseItemKind.MusicAlbum;\n\n          case EntityType.Artist:\n            return BaseItemKind.MusicArtist;\n\n          case EntityType.Genre:\n            return BaseItemKind.MusicGenre;\n\n          case EntityType.Playlist:\n            return BaseItemKind.Playlist;\n\n          case EntityType.Song:\n          default:\n            return BaseItemKind.Audio;\n        }\n      });\n    }\n\n    const excludeItemIds = this.#ensureTypedArray(params.excludeItemIds);\n    if (excludeItemIds.length > 0) {\n      result.excludeItemIds = excludeItemIds;\n    }\n\n    const genreIds = this.#ensureTypedArray(params.genreIds);\n    if (genreIds.length > 0) {\n      result.genreIds = genreIds;\n    }\n\n    const artistIds = this.#ensureTypedArray(params.artistIds);\n    if (artistIds.length > 0) {\n      result.artistIds = artistIds;\n    }\n\n    const albumArtistIds = this.#ensureTypedArray(params.albumArtistIds);\n    if (albumArtistIds.length > 0) {\n      result.albumArtistIds = albumArtistIds;\n    }\n\n    const contributingArtistIds = this.#ensureTypedArray(params.contributingArtistIds);\n    if (contributingArtistIds.length > 0) {\n      result.contributingArtistIds = contributingArtistIds;\n    }\n\n    if (params.years) {\n      if (Array.isArray(params.years)) {\n        result.years = params.years;\n      }\n      else if (typeof params.years === 'string') {\n        result.years = params.years.split(',').map((yearStr) => parseInt(yearStr, 10));\n      }\n    }\n\n    if (params.search) {\n      result.searchTerm = params.search;\n    }\n\n    return result;\n  }\n\n  #toApiGetItemParams(params: GetItemParams): UserLibraryApiGetItemRequest {\n    if (!this.#connection.auth?.User?.Id) {\n      throw Error('No auth');\n    }\n    return {\n      userId: this.#connection.auth?.User?.Id,\n      itemId: params.itemId\n    };\n  }\n\n  async getFiltersFromApi(params: GetFiltersParams): Promise<GetFiltersResult> {\n    const apiParams = this.#toApiGetFiltersParams(params);\n    const filtersApi = getFilterApi(this.#connection.api);\n    const response = await filtersApi.getQueryFiltersLegacy(apiParams);\n    const data = response.data;\n    return {\n      years: data.Years || null\n    };\n  }\n\n  #toApiGetFiltersParams(params: GetFiltersParams): FilterApiGetQueryFiltersLegacyRequest {\n    if (!this.#connection.auth?.User?.Id) {\n      throw Error('No auth');\n    }\n    const result: Mutable<FilterApiGetQueryFiltersLegacyRequest> = {\n      userId: this.#connection.auth.User.Id,\n      parentId: params.parentId\n    };\n    if (params.itemTypes) {\n      result.includeItemTypes = params.itemTypes.map((t) => {\n        switch (t) {\n          case EntityType.Album:\n            return BaseItemKind.MusicAlbum;\n\n          case EntityType.Song:\n          default: // Song\n            return BaseItemKind.Audio;\n        }\n      });\n    }\n    return result;\n  }\n\n  async markFavorite(itemId: string): Promise<boolean> {\n    if (!this.connection.auth?.User?.Id) {\n      throw Error('No auth');\n    }\n    const userLibraryApi = getUserLibraryApi(this.connection.api);\n    const markFavoriteResponse = await userLibraryApi.markFavoriteItem({\n      itemId,\n      userId: this.connection.auth.User.Id\n    });\n    return !!markFavoriteResponse.data.IsFavorite;\n  }\n\n  async unmarkFavorite(itemId: string): Promise<boolean> {\n    if (!this.connection.auth?.User?.Id) {\n      throw Error('No auth');\n    }\n    const userLibraryApi = getUserLibraryApi(this.connection.api);\n    const unmarkFavoriteResponse = await userLibraryApi.unmarkFavoriteItem({\n      itemId,\n      userId: this.connection.auth.User.Id\n    });\n    return !!unmarkFavoriteResponse.data.IsFavorite;\n  }\n\n  #ensureTypedArray<T>(value?: string | string[] | T[]): T[] {\n    if (!value) {\n      return [];\n    }\n    if (typeof value === 'string') {\n      return value.split(',') as T[];\n    }\n    return value as T[];\n  }\n\n  get connection(): ServerConnection {\n    return this.#connection;\n  }\n}\n"]}