{"version":3,"file":"PlaylistModel.js","sourceRoot":"","sources":["../../../src/lib/model/PlaylistModel.ts"],"names":[],"mappings":";;;;;AAAA,0CAAyC;AAGzC,4DAAmD;AACnD,6EAAqD;AAErD,MAAqB,aAAc,SAAQ,mBAAS;IAElD,KAAK,CAAC,YAAY,CAAC,MAAsB;QACvC,MAAM,MAAM,GAAG,IAAI,wBAAc,EAAE,CAAC;QACpC,OAAO,IAAI,CAAC,eAAe,CAAW,EAAE,GAAG,MAAM,EAAE,SAAS,EAAE,qBAAU,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;IAC/F,CAAC;IAED,WAAW,CAAC,EAAU;QACpB,MAAM,MAAM,GAAG,IAAI,wBAAc,EAAE,CAAC;QACpC,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;IACrD,CAAC;CACF;AAXD,gCAWC","sourcesContent":["import { EntityType } from '../entities';\nimport Playlist from '../entities/Playlist';\nimport { GetItemsParams, GetItemsResult } from './BaseModel';\nimport { default as BaseModel } from './BaseModel';\nimport PlaylistParser from './parser/PlaylistParser';\n\nexport default class PlaylistModel extends BaseModel {\n\n  async getPlaylists(params: GetItemsParams): Promise<GetItemsResult<Playlist>> {\n    const parser = new PlaylistParser();\n    return this.getItemsFromAPI<Playlist>({ ...params, itemTypes: EntityType.Playlist }, parser);\n  }\n\n  getPlaylist(id: string) {\n    const parser = new PlaylistParser();\n    return this.getItemFromApi({ itemId: id }, parser);\n  }\n}\n"]}