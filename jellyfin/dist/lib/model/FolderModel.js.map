{"version":3,"file":"FolderModel.js","sourceRoot":"","sources":["../../../src/lib/model/FolderModel.ts"],"names":[],"mappings":";;;;;AAAA,4DAAwE;AACxE,uFAAsF;AACtF,yEAAiD;AAEjD,MAAqB,WAAY,SAAQ,mBAAS;IAEhD,iBAAiB,CAAC,MAAsB;QACtC,MAAM,MAAM,GAAG,IAAI,6BAAmB,EAAE,CAAC;QACzC,OAAO,IAAI,CAAC,eAAe,CAAoB,EAAE,GAAG,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC;IAC1F,CAAC;IAED,SAAS,CAAC,EAAU;QAClB,MAAM,MAAM,GAAG,IAAI,sBAAY,EAAE,CAAC;QAClC,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;IACrD,CAAC;CACF;AAXD,8BAWC","sourcesContent":["import BaseModel, { GetItemsParams, GetItemsResult } from './BaseModel';\nimport FolderContentParser, { FolderContentType } from './parser/FolderContentParser';\nimport FolderParser from './parser/FolderParser';\n\nexport default class FolderModel extends BaseModel {\n\n  getFolderContents(params: GetItemsParams): Promise<GetItemsResult<FolderContentType>> {\n    const parser = new FolderContentParser();\n    return this.getItemsFromAPI<FolderContentType>({ ...params, recursive: false }, parser);\n  }\n\n  getFolder(id: string) {\n    const parser = new FolderParser();\n    return this.getItemFromApi({ itemId: id }, parser);\n  }\n}\n"]}