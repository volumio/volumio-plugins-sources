{"version":3,"file":"ArtistModel.js","sourceRoot":"","sources":["../../../src/lib/model/ArtistModel.ts"],"names":[],"mappings":";;;;;AACA,yEAAwE;AACxE,0CAAyC;AAGzC,4DAAmD;AACnD,yEAAiD;AAEjD,MAAqB,WAAY,SAAQ,mBAAS;IAEhD,KAAK,CAAC,UAAU,CAAC,MAAsB;QACrC,MAAM,MAAM,GAAG,IAAI,sBAAY,CAAC,qBAAU,CAAC,MAAM,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,eAAe,CAAqB,MAAM,EAAE,MAAM,EAAE;YAC9D,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAA,2BAAa,EAAC,GAAG,CAAC;YACnC,QAAQ,EAAE,YAAY;SACvB,CAAC,CAAC;IACL,CAAC;IAED,SAAS,CAAC,EAAU;QAClB,MAAM,MAAM,GAAG,IAAI,sBAAY,CAAC,qBAAU,CAAC,MAAM,CAAC,CAAC;QACnD,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;IACrD,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,MAAsB;QAC1C,MAAM,MAAM,GAAG,IAAI,sBAAY,CAAC,qBAAU,CAAC,WAAW,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,eAAe,CAAqB,MAAM,EAAE,MAAM,EAAE;YAC9D,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAA,2BAAa,EAAC,GAAG,CAAC;YACnC,QAAQ,EAAE,iBAAiB;SAC5B,CAAC,CAAC;IACL,CAAC;IAED,cAAc,CAAC,EAAU;QACvB,MAAM,MAAM,GAAG,IAAI,sBAAY,CAAC,qBAAU,CAAC,WAAW,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,cAAc,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;IACrD,CAAC;CACF;AA3BD,8BA2BC","sourcesContent":["import { ArtistsApi } from '@jellyfin/sdk/lib/generated-client/api/artists-api';\nimport { getArtistsApi } from '@jellyfin/sdk/lib/utils/api/artists-api';\nimport { EntityType } from '../entities';\nimport Artist from '../entities/Artist';\nimport { GetItemsParams, GetItemsResult } from './BaseModel';\nimport { default as BaseModel } from './BaseModel';\nimport ArtistParser from './parser/ArtistParser';\n\nexport default class ArtistModel extends BaseModel {\n\n  async getArtists(params: GetItemsParams): Promise<GetItemsResult<Artist>> {\n    const parser = new ArtistParser(EntityType.Artist);\n    return this.getItemsFromAPI<Artist, ArtistsApi>(params, parser, {\n      getApi: (api) => getArtistsApi(api),\n      getItems: 'getArtists'\n    });\n  }\n\n  getArtist(id: string) {\n    const parser = new ArtistParser(EntityType.Artist);\n    return this.getItemFromApi({ itemId: id }, parser);\n  }\n\n  async getAlbumArtists(params: GetItemsParams): Promise<GetItemsResult<Artist>> {\n    const parser = new ArtistParser(EntityType.AlbumArtist);\n    return this.getItemsFromAPI<Artist, ArtistsApi>(params, parser, {\n      getApi: (api) => getArtistsApi(api),\n      getItems: 'getAlbumArtists'\n    });\n  }\n\n  getAlbumArtist(id: string) {\n    const parser = new ArtistParser(EntityType.AlbumArtist);\n    return this.getItemFromApi({ itemId: id }, parser);\n  }\n}\n"]}