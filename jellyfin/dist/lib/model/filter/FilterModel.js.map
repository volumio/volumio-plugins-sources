{"version":3,"file":"FilterModel.js","sourceRoot":"","sources":["../../../../src/lib/model/filter/FilterModel.ts"],"names":[],"mappings":";;;AAAA,IAAY,UAMX;AAND,WAAY,UAAU;IACpB,uBAAS,CAAA;IACT,6BAAe,CAAA;IACf,2BAAa,CAAA;IACb,+BAAiB,CAAA;IACjB,2BAAa,CAAA;AACf,CAAC,EANW,UAAU,GAAV,kBAAU,KAAV,kBAAU,QAMrB","sourcesContent":["export enum FilterType {\n  AZ = 'AZ',\n  Genre = 'Genre',\n  Year = 'Year',\n  Filter = 'Filter',\n  Sort = 'Sort'\n}\n\nexport interface Filter {\n  type: FilterType,\n  title?: string,\n  placeholder: string,\n  field?: string,\n  icon?: string,\n  resettable?: boolean,\n  options?: FilterOption[],\n  subfilters?: Subfilter[]\n}\n\nexport type Subfilter = Omit<Filter, 'type'>;\n\nexport interface FilterOption {\n  name: string,\n  value: any,\n  selected?: boolean\n}\n\nexport type FilterSelection = Record<string, FilterOption['value']>;\n\ninterface FilterModel {\n  getFilter(config?: any): Promise<Filter>;\n  getDefaultSelection(params: any): Promise<FilterSelection>;\n}\n\nexport default FilterModel;\n"]}