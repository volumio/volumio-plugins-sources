{"version":3,"file":"AZFilterModel.js","sourceRoot":"","sources":["../../../../src/lib/model/filter/AZFilterModel.ts"],"names":[],"mappings":";;;;;AAAA,4EAA6C;AAC7C,6DAAqC;AACrC,+CAAgE;AAEhE,MAAM,EAAE,GAAG,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;AAQhJ,MAAqB,aAAc,SAAQ,mBAAS;IAElD,KAAK,CAAC,SAAS,CAAC,MAA4B;QAC1C,MAAM,OAAO,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC7B,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE,CAAC,KAAK,MAAM,EAAE,gBAAgB,EAAE,cAAc;SACzD,CAAC,CAAC,CAAC;QAEJ,OAAO;YACL,IAAI,EAAE,wBAAU,CAAC,EAAE;YACnB,KAAK,EAAE,yBAAQ,CAAC,OAAO,CAAC,0BAA0B,CAAC;YACnD,WAAW,EAAE,yBAAQ,CAAC,OAAO,CAAC,gCAAgC,CAAC;YAC/D,KAAK,EAAE,gBAAgB;YACvB,IAAI,EAAE,YAAY;YAClB,UAAU,EAAE,IAAI;YAChB,OAAO;SACR,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,mBAAmB;QACvB,OAAO;YACL,cAAc,EAAE,SAAS;SAC1B,CAAC;IACJ,CAAC;CACF;AAzBD,gCAyBC","sourcesContent":["import jellyfin from '../../JellyfinContext';\nimport BaseModel from '../BaseModel';\nimport FilterModel, { Filter, FilterType } from './FilterModel';\n\nconst AZ = [ 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' ];\n\nexport interface AZFilterModelConfig {\n  initialSelection?: {\n    nameStartsWith?: string\n  };\n}\n\nexport default class AZFilterModel extends BaseModel implements FilterModel {\n\n  async getFilter(config?: AZFilterModelConfig): Promise<Filter> {\n    const options = AZ.map((c) => ({\n      name: c,\n      value: c,\n      selected: c === config?.initialSelection?.nameStartsWith\n    }));\n\n    return {\n      type: FilterType.AZ,\n      title: jellyfin.getI18n('JELLYFIN_FILTER_AZ_TITLE'),\n      placeholder: jellyfin.getI18n('JELLYFIN_FILTER_AZ_PLACEHOLDER'),\n      field: 'nameStartsWith',\n      icon: 'fa fa-font',\n      resettable: true,\n      options\n    };\n  }\n\n  async getDefaultSelection(): Promise<Record<string, any>> {\n    return {\n      nameStartsWith: undefined\n    };\n  }\n}\n"]}