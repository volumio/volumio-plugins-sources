{"version":3,"file":"SortFilterModel.js","sourceRoot":"","sources":["../../../../src/lib/model/filter/SortFilterModel.ts"],"names":[],"mappings":"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","sourcesContent":["import { SortOrder } from '@jellyfin/sdk/lib/generated-client/models';\nimport { EntityType } from '../../entities';\nimport jellyfin from '../../JellyfinContext';\nimport BaseModel from '../BaseModel';\nimport FilterModel, { Filter, FilterType, Subfilter } from './FilterModel';\n\nexport type SortFilterItemType = EntityType.Album | EntityType.Song | EntityType.Folder;\n\nexport interface SortFilterModelConfig {\n  itemType: SortFilterItemType;\n  initialSelection?: {\n    sortBy?: string,\n    sortOrder?: SortOrder\n  };\n}\n\nexport interface SortFilterSelection {\n  sortBy: string,\n  sortOrder: SortOrder\n}\n\ninterface SortBySetEntry {\n  i18nKey: string;\n  value: string;\n  default?: boolean;\n}\n\ninterface SortOrderSetEntry {\n  i18nKey: string;\n  value: SortOrder.Ascending | SortOrder.Descending\n}\n\nconst SORT_BY_SETS: Record<SortFilterItemType, SortBySetEntry[]> = {\n  [EntityType.Album]: [\n    { i18nKey: 'JELLYFIN_NAME', value: 'SortName' },\n    { i18nKey: 'JELLYFIN_ALBUM_ARTIST', value: 'AlbumArtist,SortName' },\n    { i18nKey: 'JELLYFIN_COMMUNITY_RATING', value: 'CommunityRating,SortName' },\n    { i18nKey: 'JELLYFIN_CRITIC_RATING', value: 'CriticRating,SortName' },\n    { i18nKey: 'JELLYFIN_DATE_ADDED', value: 'DateCreated,SortName' },\n    { i18nKey: 'JELLYFIN_RELEASE_DATE', value: 'ProductionYear,PremiereDate,SortName' },\n    { i18nKey: 'JELLYFIN_RANDOM', value: 'Random,SortName' }\n  ],\n  [EntityType.Song]: [\n    { i18nKey: 'JELLYFIN_TRACK_NAME', value: 'Name' },\n    { i18nKey: 'JELLYFIN_ALBUM', value: 'Album,SortName' },\n    { i18nKey: 'JELLYFIN_ALBUM_ARTIST', value: 'AlbumArtist,Album,SortName' },\n    { i18nKey: 'JELLYFIN_ARTIST', value: 'Artist,Album,SortName' },\n    { i18nKey: 'JELLYFIN_DATE_ADDED', value: 'DateCreated,SortName' },\n    { i18nKey: 'JELLYFIN_DATE_PLAYED', value: 'DatePlayed,SortName' },\n    { i18nKey: 'JELLYFIN_PLAY_COUNT', value: 'PlayCount,SortName' },\n    { i18nKey: 'JELLYFIN_RELEASE_DATE', value: 'PremiereDate,AlbumArtist,Album,SortName' },\n    { i18nKey: 'JELLYFIN_RUNTIME', value: 'Runtime,AlbumArtist,Album,SortName' },\n    { i18nKey: 'JELLYFIN_RANDOM', value: 'Random,SortName' }\n  ],\n  [EntityType.Folder]: [\n    { i18nKey: 'JELLYFIN_NAME', value: 'SortName' },\n    { i18nKey: 'JELLYFIN_COMMUNITY_RATING', value: 'CommunityRating,SortName' },\n    { i18nKey: 'JELLYFIN_CRITIC_RATING', value: 'CriticRating,SortName' },\n    { i18nKey: 'JELLYFIN_DATE_ADDED', value: 'DateCreated,SortName' },\n    { i18nKey: 'JELLYFIN_DATE_PLAYED', value: 'DatePlayed,SortName' },\n    { i18nKey: 'JELLYFIN_FOLDERS', value: 'IsFolder,SortName', default: true },\n    { i18nKey: 'JELLYFIN_PLAY_COUNT', value: 'PlayCount,SortName' },\n    { i18nKey: 'JELLYFIN_RELEASE_DATE', value: 'ProductionYear,PremiereDate,SortName' },\n    { i18nKey: 'JELLYFIN_RUNTIME', value: 'Runtime,SortName' }\n  ]\n};\n\nconst SORT_ORDERS: SortOrderSetEntry[] = [\n  { i18nKey: 'JELLYFIN_ASCENDING', value: SortOrder.Ascending },\n  { i18nKey: 'JELLYFIN_DESCENDING', value: SortOrder.Descending }\n];\n\nexport default class SortFilterModel extends BaseModel implements FilterModel {\n\n  async getFilter(config?: SortFilterModelConfig): Promise<Filter> {\n    if (!config) {\n      throw Error('Missing config');\n    }\n\n    const sortByFilter = await this.#getSortByFilter(config);\n    const sortOrderFilter = this.#getSortOrderFilter(config);\n\n    return {\n      type: FilterType.Sort,\n      subfilters: [\n        sortByFilter,\n        sortOrderFilter\n      ],\n      icon: 'fa fa-sort',\n      placeholder: ''\n    };\n  }\n\n  async #getSortByFilter(config: SortFilterModelConfig): Promise<Subfilter> {\n    const defaultSortBy = (await this.getDefaultSelection(config.itemType)).sortBy;\n    const selectedSortByValue = config.initialSelection?.sortBy || defaultSortBy;\n\n    const options = SORT_BY_SETS[config.itemType].map((sortBy) => ({\n      name: jellyfin.getI18n(sortBy.i18nKey),\n      value: sortBy.value,\n      selected: selectedSortByValue == sortBy.value\n    }));\n\n    return {\n      title: jellyfin.getI18n('JELLYFIN_FILTER_SORT_BY_TITLE'),\n      field: 'sortBy',\n      icon: 'fa fa-sort',\n      resettable: false,\n      placeholder: '',\n      options\n    };\n  }\n\n  #getSortOrderFilter(config: SortFilterModelConfig): Subfilter {\n    const selectedSortOrderValue = config.initialSelection?.sortOrder || SORT_ORDERS[0].value;\n\n    const options = SORT_ORDERS.map((sortOrder) => ({\n      name: jellyfin.getI18n(sortOrder.i18nKey),\n      value: sortOrder.value,\n      selected: selectedSortOrderValue == sortOrder.value\n    }));\n\n    return {\n      title: jellyfin.getI18n('JELLYFIN_FILTER_SORT_ORDER_TITLE'),\n      field: 'sortOrder',\n      icon: 'fa fa-sort',\n      resettable: false,\n      placeholder: '',\n      options\n    };\n  }\n\n  async getDefaultSelection(targetType: SortFilterItemType): Promise<SortFilterSelection> {\n    const defaultSortByIndex = Math.max(SORT_BY_SETS[targetType].findIndex((s) => s.default), 0);\n    return {\n      sortBy: SORT_BY_SETS[targetType][defaultSortByIndex].value,\n      sortOrder: SORT_ORDERS[0].value\n    };\n  }\n}\n"]}