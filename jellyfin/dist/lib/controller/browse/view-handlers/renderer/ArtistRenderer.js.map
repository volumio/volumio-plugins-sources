{"version":3,"file":"ArtistRenderer.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderer/ArtistRenderer.ts"],"names":[],"mappings":";;;;;AACA,kEAAgF;AAChF,kFAAmD;AACnD,mDAAkD;AAElD,+DAAuC;AAEvC,MAAqB,cAAe,SAAQ,sBAAoB;IAE9D,gBAAgB,CAAC,IAAY,EAAE,OAA+B;QAC5D,MAAM,SAAS,GAAc;YAC3B,IAAI,EAAE,QAAQ;SACf,CAAC;QAEF,MAAM,QAAQ,GAAG,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QACtE,IAAI,QAAQ,EAAE;YACZ,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC/B;QAED,IAAI,IAAI,CAAC,IAAI,KAAK,qBAAU,CAAC,MAAM,EAAE;YACnC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC;SAC9B;aACI;YACH,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,EAAE,CAAC;SACnC;QAED,OAAO;YACL,OAAO,EAAE,UAAU;YACnB,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,IAAI,CAAC,IAAI;YAChB,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YAChC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,oBAAU,CAAC,2BAA2B,CAAC,SAAS,CAAC,EAAE;SACxE,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,IAAY;QACzB,MAAM,MAAM,GAAG,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAoB,CAAC;QAClE,MAAM,CAAC,MAAM,GAAG,yBAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;QACpD,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACxD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAlCD,iCAkCC","sourcesContent":["import Artist from '../../../../entities/Artist';\nimport BaseRenderer, { RenderedHeader, RenderedListItem } from './BaseRenderer';\nimport jellyfin from '../../../../JellyfinContext';\nimport { EntityType } from '../../../../entities';\nimport { AlbumView } from '../AlbumViewHandler';\nimport ViewHelper from '../ViewHelper';\n\nexport default class ArtistRenderer extends BaseRenderer<Artist> {\n\n  renderToListItem(data: Artist, options?: { noParent: boolean }): RenderedListItem | null {\n    const albumView: AlbumView = {\n      name: 'albums'\n    };\n\n    const parentId = options?.noParent ? null : this.currentView.parentId;\n    if (parentId) {\n      albumView.parentId = parentId;\n    }\n\n    if (data.type === EntityType.Artist) {\n      albumView.artistId = data.id;\n    }\n    else {\n      albumView.albumArtistId = data.id;\n    }\n\n    return {\n      service: 'jellyfin',\n      type: 'folder',\n      title: data.name,\n      albumart: this.getAlbumArt(data),\n      uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(albumView)}`\n    };\n  }\n\n  renderToHeader(data: Artist): RenderedHeader | null {\n    const header = super.renderToHeader(data) || {} as RenderedHeader;\n    header.artist = jellyfin.getI18n('JELLYFIN_ARTIST');\n    header.year = this.getStringFromIdNamePair(data.genres);\n    return header;\n  }\n}\n"]}