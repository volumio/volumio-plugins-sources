{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderer/index.ts"],"names":[],"mappings":";;;;;AAAA,mDAAkD;AAIlD,oEAA4C;AAC5C,sEAA8C;AAC9C,8EAAsD;AACtD,sEAA8C;AAC9C,oEAA4C;AAC5C,0EAAkD;AAClD,sEAA8C;AAC9C,kEAA0C;AAC1C,0EAAkD;AAOlD,MAAM,oBAAoB,GAA+B;IACvD,CAAC,qBAAU,CAAC,KAAK,CAAC,EAAE,uBAAa;IACjC,CAAC,qBAAU,CAAC,MAAM,CAAC,EAAE,wBAAc;IACnC,CAAC,qBAAU,CAAC,WAAW,CAAC,EAAE,wBAAc;IACxC,CAAC,qBAAU,CAAC,UAAU,CAAC,EAAE,4BAAkB;IAC3C,CAAC,qBAAU,CAAC,MAAM,CAAC,EAAE,wBAAc;IACnC,CAAC,qBAAU,CAAC,gBAAgB,CAAC,EAAE,wBAAc;IAC7C,CAAC,qBAAU,CAAC,KAAK,CAAC,EAAE,uBAAa;IACjC,CAAC,qBAAU,CAAC,QAAQ,CAAC,EAAE,0BAAgB;IACvC,CAAC,qBAAU,CAAC,MAAM,CAAC,EAAE,wBAAc;IACnC,CAAC,qBAAU,CAAC,IAAI,CAAC,EAAE,sBAAY;IAC/B,CAAC,qBAAU,CAAC,QAAQ,CAAC,EAAE,0BAAgB;CACxC,CAAC;AAEF,MAAqB,QAAQ;IAU3B,MAAM,CAAC,WAAW,CAAC,IAAS,EAAE,GAAW,EAAE,WAAiB,EAAE,aAAqB,EAAE,eAAgC;QACnH,MAAM,EAAE,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAC;QACtC,IAAI,EAAE,EAAE;YACN,OAAO,IAAI,EAAE,CAAC,GAAG,EAAE,WAAW,EAAE,aAAa,EAAE,eAAe,CAAC,CAAC;SACjE;QACD,MAAM,KAAK,CAAC,+BAA+B,qBAAU,EAAE,CAAC,CAAC;IAC3D,CAAC;CACF;AAjBD,2BAiBC","sourcesContent":["import { EntityType } from '../../../../entities';\nimport AlbumArtHandler from '../../../../util/AlbumArtHandler';\nimport { ValueOf } from '../../../../util/Type';\nimport View from '../View';\nimport AlbumRenderer from './AlbumRenderer';\nimport ArtistRenderer from './ArtistRenderer';\nimport CollectionRenderer from './CollectionRenderer';\nimport FolderRenderer from './FolderRenderer';\nimport GenreRenderer from './GenreRenderer';\nimport PlaylistRenderer from './PlaylistRenderer';\nimport ServerRenderer from './ServerRenderer';\nimport SongRenderer from './SongRenderer';\nimport UserViewRenderer from './UserViewRenderer';\n\ntype RendererClass = typeof AlbumRenderer | typeof ArtistRenderer |\n    typeof CollectionRenderer | typeof FolderRenderer | typeof GenreRenderer|\n    typeof PlaylistRenderer | typeof ServerRenderer | typeof SongRenderer |\n    typeof UserViewRenderer;\n\nconst ENTITY_TYPE_TO_CLASS: Record<any, RendererClass> = {\n  [EntityType.Album]: AlbumRenderer,\n  [EntityType.Artist]: ArtistRenderer,\n  [EntityType.AlbumArtist]: ArtistRenderer,\n  [EntityType.Collection]: CollectionRenderer,\n  [EntityType.Folder]: FolderRenderer,\n  [EntityType.CollectionFolder]: FolderRenderer,\n  [EntityType.Genre]: GenreRenderer,\n  [EntityType.Playlist]: PlaylistRenderer,\n  [EntityType.Server]: ServerRenderer,\n  [EntityType.Song]: SongRenderer,\n  [EntityType.UserView]: UserViewRenderer\n};\n\nexport default class Renderer {\n  static getInstance(type: EntityType.Album, uri: string, currentView: View, previousViews: View[], albumArtHandler: AlbumArtHandler): AlbumRenderer;\n  static getInstance(type: EntityType.Artist, uri: string, currentView: View, previousViews: View[], albumArtHandler: AlbumArtHandler): ArtistRenderer;\n  static getInstance(type: EntityType.Collection, uri: string, currentView: View, previousViews: View[], albumArtHandler: AlbumArtHandler): CollectionRenderer;\n  static getInstance(type: EntityType.Folder, uri: string, currentView: View, previousViews: View[], albumArtHandler: AlbumArtHandler): FolderRenderer;\n  static getInstance(type: EntityType.Genre, uri: string, currentView: View, previousViews: View[], albumArtHandler: AlbumArtHandler): GenreRenderer;\n  static getInstance(type: EntityType.Playlist, uri: string, currentView: View, previousViews: View[], albumArtHandler: AlbumArtHandler): PlaylistRenderer;\n  static getInstance(type: EntityType.Server, uri: string, currentView: View, previousViews: View[], albumArtHandler: AlbumArtHandler): ServerRenderer;\n  static getInstance(type: EntityType.Song, uri: string, currentView: View, previousViews: View[], albumArtHandler: AlbumArtHandler): SongRenderer;\n  static getInstance(type: EntityType.UserView, uri: string, currentView: View, previousViews: View[], albumArtHandler: AlbumArtHandler): UserViewRenderer;\n  static getInstance(type: any, uri: string, currentView: View, previousViews: View[], albumArtHandler: AlbumArtHandler): ValueOf<RendererClass> {\n    const cl = ENTITY_TYPE_TO_CLASS[type];\n    if (cl) {\n      return new cl(uri, currentView, previousViews, albumArtHandler);\n    }\n    throw Error(`Renderer not found for type ${EntityType}`);\n  }\n}\n"]}