{"version":3,"file":"UserViewRenderer.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderer/UserViewRenderer.ts"],"names":[],"mappings":";;;;;AAAA,4DAAuE;AAKvE,+DAAuC;AACvC,kEAAgE;AAEhE,MAAqB,gBAAiB,SAAQ,sBAAsB;IAElE,gBAAgB,CAAC,IAAc;QAC7B,IAAI,UAAqE,CAAC;QAC1E,IAAI,IAA8B,CAAC;QAEnC,QAAQ,IAAI,CAAC,YAAY,EAAE;YACzB,KAAK,uBAAY,CAAC,WAAW;gBAC3B,UAAU,GAAG;oBACX,IAAI,EAAE,aAAa;oBACnB,QAAQ,EAAE,IAAI,CAAC,EAAE;iBAClB,CAAC;gBACF,IAAI,GAAG,oBAAoB,CAAC;gBAC5B,MAAM;YAER,KAAK,uBAAY,CAAC,SAAS;gBACzB,UAAU,GAAG;oBACX,IAAI,EAAE,WAAW;iBAClB,CAAC;gBACF,IAAI,GAAG,oBAAoB,CAAC;gBAC5B,MAAM;YAER,KAAK,uBAAY,CAAC,OAAO;gBACvB,UAAU,GAAG;oBACX,IAAI,EAAE,SAAS;oBACf,QAAQ,EAAE,IAAI,CAAC,EAAE;iBAClB,CAAC;gBACF,IAAI,GAAG,QAAQ,CAAC;gBAChB,MAAM;YAER,KAAK,uBAAY,CAAC,OAAO;gBACvB,UAAU,GAAG;oBACX,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,IAAI,CAAC,EAAE;iBAClB,CAAC;gBACF,IAAI,GAAG,oBAAoB,CAAC;gBAC5B,MAAM;YAER;gBACE,OAAO,IAAI,CAAC;SACf;QAED,OAAO;YACL,OAAO,EAAE,UAAU;YACnB,IAAI;YACJ,KAAK,EAAE,IAAI,CAAC,IAAI;YAChB,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,oBAAU,CAAC,2BAA2B,CAAC,UAAU,CAAC,EAAE;YACxE,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;SACjC,CAAC;IACJ,CAAC;CACF;AAlDD,mCAkDC","sourcesContent":["import UserView, { UserViewType } from '../../../../entities/UserView';\nimport { CollectionsView } from '../CollectionsViewHandler';\nimport { FolderView } from '../FolderViewHandler';\nimport { LibraryView } from '../LibraryViewHandler';\nimport { PlaylistView } from '../PlaylistViewHandler';\nimport ViewHelper from '../ViewHelper';\nimport BaseRenderer, { RenderedListItem } from './BaseRenderer';\n\nexport default class UserViewRenderer extends BaseRenderer<UserView> {\n\n  renderToListItem(data: UserView): RenderedListItem | null {\n    let targetView: CollectionsView | PlaylistView | LibraryView | FolderView;\n    let type: RenderedListItem['type'];\n\n    switch (data.userViewType) {\n      case UserViewType.Collections:\n        targetView = {\n          name: 'collections',\n          parentId: data.id\n        };\n        type = 'streaming-category';\n        break;\n\n      case UserViewType.Playlists:\n        targetView = {\n          name: 'playlists'\n        };\n        type = 'streaming-category';\n        break;\n\n      case UserViewType.Library:\n        targetView = {\n          name: 'library',\n          parentId: data.id\n        };\n        type = 'folder';\n        break;\n\n      case UserViewType.Folders:\n        targetView = {\n          name: 'folder',\n          parentId: data.id\n        };\n        type = 'streaming-category';\n        break;\n\n      default:\n        return null;\n    }\n\n    return {\n      service: 'jellyfin',\n      type,\n      title: data.name,\n      uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(targetView)}`,\n      albumart: this.getAlbumArt(data)\n    };\n  }\n}\n"]}