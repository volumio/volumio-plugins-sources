{"version":3,"file":"BaseViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/BaseViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import ServerConnection from '../../../connection/ServerConnection';\nimport Model, { ModelType } from '../../../model';\nimport BaseModel, { GetItemsParams } from '../../../model/BaseModel';\nimport AlbumModel from '../../../model/AlbumModel';\nimport ArtistModel from '../../../model/ArtistModel';\nimport CollectionModel from '../../../model/CollectionModel';\nimport AZFilterModel from '../../../model/filter/AZFilterModel';\nimport FilterFilterModel from '../../../model/filter/FilterFilterModel';\nimport GenreFilterModel from '../../../model/filter/GenreFilterModel';\nimport SortFilterModel from '../../../model/filter/SortFilterModel';\nimport YearFilterModel from '../../../model/filter/YearFilterModel';\nimport FolderModel from '../../../model/FolderModel';\nimport GenreModel from '../../../model/GenreModel';\nimport PlaylistModel from '../../../model/PlaylistModel';\nimport SongModel from '../../../model/SongModel';\nimport UserViewModel from '../../../model/UserViewModel';\nimport View from './View';\nimport ViewHandler, { RenderedPage, RenderedPageContents } from './ViewHandler';\nimport { EntityType } from '../../../entities';\nimport Renderer from './renderer';\nimport AlbumRenderer from './renderer/AlbumRenderer';\nimport ArtistRenderer from './renderer/ArtistRenderer';\nimport CollectionRenderer from './renderer/CollectionRenderer';\nimport FolderRenderer from './renderer/FolderRenderer';\nimport GenreRenderer from './renderer/GenreRenderer';\nimport PlaylistRenderer from './renderer/PlaylistRenderer';\nimport ServerRenderer from './renderer/ServerRenderer';\nimport SongRenderer from './renderer/SongRenderer';\nimport ViewHelper from './ViewHelper';\nimport jellyfin from '../../../JellyfinContext';\nimport BaseRenderer, { RenderedListItem } from './renderer/BaseRenderer';\nimport BaseEntity from '../../../entities/BaseEntity';\nimport { ExplodedTrackInfo } from './Explodable';\nimport { objectAssignIfExists } from '../../../util';\nimport UserViewRenderer from './renderer/UserViewRenderer';\nimport AlbumArtHandler from '../../../util/AlbumArtHandler';\nimport UI from '../../../util/UI';\nimport { CollectionView } from './CollectionViewHandler';\nimport { CollectionsView } from './CollectionsViewHandler';\nimport { LibraryView } from './LibraryViewHandler';\nimport { FolderView } from './FolderViewHandler';\nimport { PlaylistView } from './PlaylistViewHandler';\n\ninterface PageTitleCrumb {\n  uri?: string,\n  text: string\n}\n\nexport default class BaseViewHandler<V extends View> implements ViewHandler {\n\n  #uri: string;\n  #currentView: V;\n  #previousViews: View[];\n  #connection: ServerConnection | null;\n  #models: Record<any, BaseModel>;\n  #renderers: Record<any, BaseRenderer<BaseEntity> | null>;\n  #albumArtHandler: AlbumArtHandler;\n\n  constructor(uri: string, currentView: V, previousViews: View[], connection: ServerConnection | null) {\n    this.#uri = uri;\n    this.#currentView = currentView;\n    this.#previousViews = previousViews;\n    this.#connection = connection;\n    this.#models = {};\n    this.#renderers = {};\n    this.#albumArtHandler = new AlbumArtHandler();\n  }\n\n  async browse(): Promise<RenderedPage> {\n    return {};\n  }\n\n  explode(): Promise<ExplodedTrackInfo[]> {\n    throw Error('Operation not supported');\n  }\n\n  get uri(): string {\n    return this.#uri;\n  }\n\n  get currentView(): V {\n    return this.#currentView;\n  }\n\n  get previousViews(): View[] {\n    return this.#previousViews;\n  }\n\n  getModel(type: ModelType.SortFilter): SortFilterModel;\n  getModel(type: ModelType.FilterFilter): FilterFilterModel;\n  getModel(type: ModelType.YearFilter): YearFilterModel;\n  getModel(type: ModelType.GenreFilter): GenreFilterModel;\n  getModel(type: ModelType.AZFilter): AZFilterModel;\n  getModel(type: ModelType.Folder): FolderModel;\n  getModel(type: ModelType.Collection): CollectionModel;\n  getModel(type: ModelType.Song): SongModel;\n  getModel(type: ModelType.Genre): GenreModel;\n  getModel(type: ModelType.Artist): ArtistModel;\n  getModel(type: ModelType.Playlist): PlaylistModel;\n  getModel(type: ModelType.Album): AlbumModel;\n  getModel(type: ModelType.UserView): UserViewModel;\n  getModel(type: any): BaseModel {\n    if (!this.#connection) {\n      throw Error('No server connection');\n    }\n    if (!this.#models[type]) {\n      this.#models[type] = Model.getInstance(type, this.#connection);\n    }\n    return this.#models[type];\n  }\n\n  getRenderer(type: EntityType.Album): AlbumRenderer;\n  getRenderer(type: EntityType.Artist): ArtistRenderer;\n  getRenderer(type: EntityType.Collection): CollectionRenderer;\n  getRenderer(type: EntityType.Folder): FolderRenderer;\n  getRenderer(type: EntityType.Genre): GenreRenderer;\n  getRenderer(type: EntityType.Playlist): PlaylistRenderer;\n  getRenderer(type: EntityType.Server): ServerRenderer;\n  getRenderer(type: EntityType.Song): SongRenderer;\n  getRenderer(type: EntityType.UserView): UserViewRenderer;\n  getRenderer<E extends BaseEntity>(type: any): BaseRenderer<E> | null {\n    if (this.#renderers[type] === undefined) {\n      try {\n        this.#renderers[type] = Renderer.getInstance(type, this.#uri,\n          this.#currentView, this.#previousViews, this.#albumArtHandler);\n      }\n      catch (error: any) {\n        this.#renderers[type] = null;\n      }\n    }\n    return this.#renderers[type];\n  }\n\n  constructPrevUri(): string {\n    const segments = [];\n\n    this.#previousViews.forEach((view) => {\n      segments.push(ViewHelper.constructUriSegmentFromView(view));\n    });\n\n    if ((this.#currentView.startIndex || 0) > 0) {\n      const delta = this.#currentView.limit || jellyfin.getConfigValue('itemsPerPage', 47);\n      const startIndex = Math.max((this.#currentView.startIndex || 0) - delta, 0);\n      segments.push(ViewHelper.constructUriSegmentFromView({\n        ...this.#currentView,\n        startIndex\n      }));\n    }\n\n    return segments.join('/');\n  }\n\n  constructNextUri(startIndex?: number, nextView?: View): string {\n    const segments = [];\n\n    this.#previousViews.forEach((view) => {\n      segments.push(ViewHelper.constructUriSegmentFromView(view));\n    });\n\n    const currentView = nextView || this.#currentView;\n\n    if (startIndex === undefined) {\n      startIndex = (currentView.startIndex || 0) + (currentView.limit || jellyfin.getConfigValue('itemsPerPage', 47));\n    }\n\n    segments.push(ViewHelper.constructUriSegmentFromView({\n      ...currentView,\n      startIndex\n    }));\n\n    return segments.join('/');\n  }\n\n  constructNextPageItem(nextUri: string, title?: string): RenderedListItem {\n    if (!title) {\n      title = `<span style='color: #7a848e;'>${jellyfin.getI18n('JELLYFIN_NEXT_PAGE')}</span>`;\n    }\n    return {\n      service: 'jellyfin',\n      type: 'streaming-category',\n      title: title,\n      uri: `${nextUri}@noExplode=1`,\n      icon: 'fa fa-arrow-circle-right'\n    };\n  }\n\n  constructMoreItem(moreUri: string, title?: string): RenderedListItem {\n    if (!title) {\n      title = `<span style='color: #7a848e;'>${jellyfin.getI18n('JELLYFIN_VIEW_MORE')}</span>`;\n    }\n    return this.constructNextPageItem(moreUri, title);\n  }\n\n  getModelQueryParams(bundle?: Record<string, any>): GetItemsParams {\n    const defaults = {\n      startIndex: 0,\n      limit: jellyfin.getConfigValue('itemsPerPage', 47),\n      sortBy: 'SortName',\n      sortOrder: 'Ascending'\n    };\n    const props = {\n      ...defaults,\n      ...(bundle || this.currentView)\n    } as Record<string, any>;\n\n    const params = objectAssignIfExists({} as GetItemsParams, props, [\n      'startIndex',\n      'limit', // Negative value for no limit\n      'sortBy',\n      'sortOrder',\n      'recursive',\n      'parentId',\n      'genreIds', // Comma-delimited\n      'filters', // Comma-delimited; e.g. 'IsFavorite, IsPlayed'\n      'years', // Comma-delimited\n      'nameStartsWith'\n    ]);\n\n    if (props.artistId) {\n      params.artistIds = props.artistId;\n    }\n\n    if (props.albumArtistId) {\n      params.albumArtistIds = props.albumArtistId;\n    }\n\n    if (props.genreId) {\n      if (params.genreIds) {\n        params.genreIds += `,${props.genreId}`;\n      }\n      else {\n        params.genreIds = props.genreId;\n      }\n    }\n\n    if (props.search) {\n      // Safe value\n      params.search = props.search.replace(/\"/g, '\\\\\"');\n    }\n\n    return params;\n  }\n\n  getAlbumArt<T extends BaseEntity>(item: T): string {\n    return this.#albumArtHandler.getAlbumArtUri(item);\n  }\n\n  get serverConnection(): ServerConnection | null {\n    return this.#connection;\n  }\n\n  async setPageTitle(pageContents: RenderedPageContents): Promise<RenderedPageContents> {\n    const supportsEnhancedTitles = UI.supportsEnhancedTitles();\n    const view = this.#currentView;\n    let itemText = '';\n    // If first list already has a title, use that. Otherwise, deduce from view.\n    if (pageContents.lists?.[0]?.title) {\n      itemText = pageContents.lists[0].title;\n    }\n    else if (view.fixedView) {\n      let itemTextKey;\n      switch (view.fixedView) {\n        case 'latest':\n          itemTextKey = `LATEST_${view.name.toUpperCase()}`;\n          break;\n        case 'recentlyPlayed':\n          itemTextKey = `RECENTLY_PLAYED_${view.name.toUpperCase()}`;\n          break;\n        case 'frequentlyPlayed':\n          itemTextKey = `FREQUENTLY_PLAYED_${view.name.toUpperCase()}`;\n          break;\n        case 'favorite':\n          itemTextKey = `FAVORITE_${view.name.toUpperCase()}`;\n          break;\n        default:\n          itemTextKey = null;\n      }\n      itemText = itemTextKey ? jellyfin.getI18n(`JELLYFIN_${itemTextKey}`) : '';\n    }\n    else if (view.search && !view.collatedSearchResults) {\n      const itemName = jellyfin.getI18n(`JELLYFIN_${view.name.toUpperCase()}`);\n      itemText = jellyfin.getI18n('JELLYFIN_ITEMS_MATCHING', itemName, view.search);\n    }\n    else {\n      itemText = jellyfin.getI18n(`JELLYFIN_${view.name.toUpperCase()}`);\n    }\n\n    if (view.search && !supportsEnhancedTitles && this.#connection) {\n      itemText = jellyfin.getI18n('JELLYFIN_SEARCH_LIST_TITLE_PLAIN',\n        `${this.#connection.username} @ ${this.#connection.server.name}`,\n        itemText);\n    }\n\n    if (!supportsEnhancedTitles || !this.#connection) {\n      if (pageContents.lists?.[0]) {\n        pageContents.lists[0].title = itemText;\n      }\n      return pageContents;\n    }\n\n    // Crumb links\n    // -- First is always server link\n    const crumbs: PageTitleCrumb[] = [ {\n      uri: `jellyfin/${this.#connection.id}`,\n      text: `${this.#connection.username} @ ${this.#connection.server.name}`\n    } ];\n\n    // -- Subsequent links\n    const allViews = [\n      ...this.previousViews,\n      view\n    ];\n    // For 'Latest Albums in {library}' section under 'My Media'\n    if (view.name === 'albums' && view.parentId) {\n      allViews.push({\n        name: 'library',\n        parentId: view.parentId\n      });\n    }\n    const processedViews: string[] = [];\n    for (let i = 2; i < allViews.length; i++) {\n      const pv = allViews[i];\n      if (!processedViews.includes(pv.name)) {\n        if (pv.name === 'collections') {\n          const collectionsView: CollectionsView = {\n            name: 'collections',\n            parentId: pv.parentId\n          };\n          crumbs.push({\n            uri: ViewHelper.constructUriSegmentFromView(collectionsView),\n            text: jellyfin.getI18n('JELLYFIN_COLLECTIONS')\n          });\n        }\n        else if (pv.name === 'collection' && pv.parentId) {\n          const collectionView: CollectionView = {\n            name: 'collection',\n            parentId: pv.parentId\n          };\n          const model = this.getModel(ModelType.Collection);\n          const collection = await model.getCollection(pv.parentId);\n          if (collection) {\n            crumbs.push({\n              uri: ViewHelper.constructUriSegmentFromView(collectionView),\n              text: collection?.name\n            });\n          }\n        }\n        else if (pv.name === 'playlists') {\n          const playlistView: PlaylistView = {\n            name: 'playlists'\n          };\n          crumbs.push({\n            uri: ViewHelper.constructUriSegmentFromView(playlistView),\n            text: jellyfin.getI18n('JELLYFIN_PLAYLISTS')\n          });\n        }\n        else if (pv.name === 'library' && pv.parentId) {\n          const model = this.getModel(ModelType.UserView);\n          const userView = await model.getUserView(pv.parentId);\n          if (userView) {\n            const libraryView: LibraryView = {\n              name: 'library',\n              parentId: pv.parentId\n            };\n            crumbs.push({\n              uri: ViewHelper.constructUriSegmentFromView(libraryView),\n              text: userView.name\n            });\n          }\n        }\n        else if (pv.name === 'folder' && pv.parentId) {\n          const folderView: FolderView = {\n            name: 'folder',\n            parentId: pv.parentId\n          };\n          const model = this.getModel(ModelType.Folder);\n          const folder = await model.getFolder(pv.parentId);\n          if (folder) {\n            crumbs.push({\n              uri: ViewHelper.constructUriSegmentFromView(folderView),\n              text: folder.name\n            });\n          }\n        }\n        else if (view.search && view.collatedSearchResults) {\n          const itemName = jellyfin.getI18n(`JELLYFIN_${view.name.toUpperCase()}`);\n          crumbs.push({\n            text: itemName\n          });\n        }\n        processedViews.push(pv.name);\n      }\n    }\n\n    let prevCrumbUri: string;\n    const crumbsWithFullUri = crumbs.map<PageTitleCrumb>((link) => {\n      const crumb: PageTitleCrumb = {\n        text: link.text\n      };\n      if (link.uri) {\n        crumb.uri = prevCrumbUri ? `${prevCrumbUri}/${link.uri}` : link.uri;\n        prevCrumbUri = crumb.uri;\n      }\n      return crumb;\n    });\n\n    if ((itemText || crumbsWithFullUri.length > 0) && pageContents.lists?.[0]) {\n      const crumbStringParts = crumbsWithFullUri.reduce<string[]>((result, crumb, i) => {\n        const style = (i > 0 && i === crumbsWithFullUri.length - 1) ? ' style=\"font-size: 18px;\"' : '';\n        result.push(`<span${style}}>${crumb.uri ? UI.createLink({ uri: crumb.uri, text: crumb.text }) : crumb.text}</span>`);\n        return result;\n      }, []);\n\n      const crumbDivider = '<i class=\"fa fa-angle-right\" style=\"margin: 0px 10px;\"></i>';\n      const byLine = (itemText && itemText !== crumbsWithFullUri[crumbsWithFullUri.length - 1].text) ?\n        `<div style=\"margin-top: 25px;\">${itemText}</div>` : '';\n\n      pageContents.lists[0].title = `\n        <div style=\"width: 100%;\">\n          <div style=\"display: flex; align-items: center; font-size: 14px; border-bottom: 1px dotted; border-color: #666; padding-bottom: 10px;\">\n            <img src=\"/albumart?sourceicon=${encodeURIComponent('music_service/jellyfin/dist/assets/images/jellyfin.svg')}\" style=\"width: 18px; height: 18px; margin-right: 8px;\">${crumbStringParts.join(crumbDivider)}\n          </div>\n          ${byLine}\n        </div>`;\n    }\n\n    return pageContents;\n  }\n}\n"]}