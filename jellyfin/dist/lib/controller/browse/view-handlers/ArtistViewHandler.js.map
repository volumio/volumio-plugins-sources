{"version":3,"file":"ArtistViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/ArtistViewHandler.ts"],"names":[],"mappings":";;;;;AAAA,gDAA+C;AAC/C,0CAA2C;AAC3C,oFAAsF;AAItF,+EAAgD;AAChD,8DAAsC;AACtC,mEAA+D;AAS/D,MAAqB,iBAAkB,SAAQ,+BAAiC;IAE9E,KAAK,CAAC,MAAM;QACV,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxC,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC,qBAAU,CAAC,WAAW,CAAC;QAExF,MAAM,EAAE,KAAK,EAAE,gBAAgB,EAAE,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE,CAAC;QAE/D,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,qBAAqB,EAAE;YAC7C,gBAAgB,CAAC,KAAK,GAAG,yBAAQ,CAAC,cAAc,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC;SAClF;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,MAAM,CAAC,CAAC;QAC9C,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,qBAAU,CAAC,MAAM,CAAC,CAAC;QACrD,MAAM,OAAO,GAAG,UAAU,KAAK,qBAAU,CAAC,MAAM,CAAC,CAAC;YAChD,MAAM,KAAK,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QAC3F,MAAM,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAC7C,QAAQ,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAuB,CAAC;QAElF,IAAI,OAAO,CAAC,cAAc,EAAE;YAC1B,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACtE,MAAM,UAAU,GAAe;oBAC7B,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE,IAAI,CAAC,MAAM;iBACpB,CAAC;gBACF,MAAM,OAAO,GAAG,YAAY,IAAI,CAAC,gBAAgB,CAAC,EAAE,IAAI,oBAAU,CAAC,2BAA2B,CAAC,UAAU,CAAC,EAAE,CAAC;gBAC7G,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;aACjD;iBACI;gBACH,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;gBAC9D,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC;aACrD;SACF;QAED,KAAK,CAAC,IAAI,CAAC;YACT,kBAAkB,EAAE,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE,MAAM,EAAE,MAAM,CAAE,CAAC,CAAC,CAAC,CAAE,MAAM,CAAE;YAC1E,KAAK,EAAE,SAAS;SACjB,CAAC,CAAC;QAEH,MAAM,YAAY,GAAyB;YACzC,IAAI,EAAE;gBACJ,GAAG,EAAE,OAAO;aACb;YACD,KAAK;SACN,CAAC;QAEF,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAEtC,OAAO;YACL,UAAU,EAAE,YAAY;SACzB,CAAC;IACJ,CAAC;IAES,uBAAuB;QAC/B,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,qBAAU,CAAC,MAAM,CAAC,CAAC,CAAC,qBAAU,CAAC,WAAW,CAAC;QACxF,MAAM,WAAW,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QACpD,MAAM,cAAc,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,UAAU,EAAE,CAAC;QACxD,MAAM,WAAW,GAAG,CAAE,wBAAU,CAAC,EAAE,EAAE,wBAAU,CAAC,MAAM,EAAE,wBAAU,CAAC,KAAK,CAAE,CAAC;QAE3E,OAAO;YACL,WAAW;YACX,cAAc;YACd,WAAW;SACZ,CAAC;IACJ,CAAC;CACF;AAnED,oCAmEC","sourcesContent":["import { EntityType } from '../../../entities';\nimport { ModelType } from '../../../model';\nimport FilterableViewHandler, { FilterableViewConfig } from './FilterableViewHandler';\nimport { RenderedListItem } from './renderer/BaseRenderer';\nimport View from './View';\nimport { RenderedPage, RenderedPageContents } from './ViewHandler';\nimport jellyfin from '../../../JellyfinContext';\nimport ViewHelper from './ViewHelper';\nimport { FilterType } from '../../../model/filter/FilterModel';\n\nexport interface ArtistView extends View {\n  name: 'artists' | 'albumArtists';\n  parentId?: string;\n  search?: string;\n  collatedSearchResults?: '1';\n}\n\nexport default class ArtistViewHandler extends FilterableViewHandler<ArtistView> {\n\n  async browse(): Promise<RenderedPage> {\n    const prevUri = this.constructPrevUri();\n    const view = this.currentView;\n    const artistType = view.name === 'artists' ? EntityType.Artist : EntityType.AlbumArtist;\n\n    const { lists, modelQueryParams } = await this.handleFilters();\n\n    if (view.search && view.collatedSearchResults) {\n      modelQueryParams.limit = jellyfin.getConfigValue('searchArtistsResultCount', 11);\n    }\n\n    const model = this.getModel(ModelType.Artist);\n    const renderer = this.getRenderer(EntityType.Artist);\n    const artists = artistType === EntityType.Artist ?\n      await model.getArtists(modelQueryParams) : await model.getAlbumArtists(modelQueryParams);\n    const listItems = artists.items.map((artist) =>\n      renderer.renderToListItem(artist)).filter((item) => item) as RenderedListItem[];\n\n    if (artists.nextStartIndex) {\n      if (view.search && view.collatedSearchResults && this.serverConnection) {\n        const artistView: ArtistView = {\n          name: 'artists',\n          search: view.search\n        };\n        const moreUri = `jellyfin/${this.serverConnection.id}/${ViewHelper.constructUriSegmentFromView(artistView)}`;\n        listItems.push(this.constructMoreItem(moreUri));\n      }\n      else {\n        const nextUri = this.constructNextUri(artists.nextStartIndex);\n        listItems.push(this.constructNextPageItem(nextUri));\n      }\n    }\n\n    lists.push({\n      availableListViews: listItems.length > 0 ? [ 'list', 'grid' ] : [ 'list' ],\n      items: listItems\n    });\n\n    const pageContents: RenderedPageContents = {\n      prev: {\n        uri: prevUri\n      },\n      lists\n    };\n\n    await this.setPageTitle(pageContents);\n\n    return {\n      navigation: pageContents\n    };\n  }\n\n  protected getFilterableViewConfig(): FilterableViewConfig {\n    const view = this.currentView;\n    const artistType = view.name === 'artists' ? EntityType.Artist : EntityType.AlbumArtist;\n    const showFilters = !view.fixedView && !view.search;\n    const saveFiltersKey = `${view.parentId}.${artistType}`;\n    const filterTypes = [ FilterType.AZ, FilterType.Filter, FilterType.Genre ];\n\n    return {\n      showFilters,\n      saveFiltersKey,\n      filterTypes\n    };\n  }\n}\n"]}