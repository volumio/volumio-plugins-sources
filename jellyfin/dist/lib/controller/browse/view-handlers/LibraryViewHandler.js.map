{"version":3,"file":"LibraryViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/LibraryViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { ModelType } from '../../../model';\nimport BaseViewHandler from './BaseViewHandler';\nimport BaseRenderer, { RenderedListItem } from './renderer/BaseRenderer';\nimport View from './View';\nimport { RenderedList, RenderedPage, RenderedPageContents } from './ViewHandler';\nimport jellyfin from '../../../JellyfinContext';\nimport { GetItemsParams, GetItemsResult } from '../../../model/BaseModel';\nimport { EntityType } from '../../../entities';\nimport BaseEntity from '../../../entities/BaseEntity';\nimport { ExplodedTrackInfo } from './Explodable';\nimport ViewHandlerFactory from './ViewHandlerFactory';\nimport ViewHelper from './ViewHelper';\nimport { AlbumView } from './AlbumViewHandler';\nimport { ArtistView } from './ArtistViewHandler';\nimport { PlaylistView } from './PlaylistViewHandler';\nimport { GenreView } from './GenreViewHandler';\nimport { SongView } from './SongViewHandler';\n\nexport interface LibraryView extends View {\n  name: 'library';\n  parentId: string;\n}\n\nexport default class LibraryViewHandler extends BaseViewHandler<LibraryView> {\n\n  async browse(): Promise<RenderedPage> {\n    const prevUri = this.constructPrevUri();\n    const baseUri = this.uri;\n    const view = this.currentView;\n    const libraryId = view.parentId;\n\n    const listPromises = [\n      this.#getTopItemList(libraryId, baseUri)\n    ];\n\n    if (jellyfin.getConfigValue('showLatestMusicSection', true)) {\n      listPromises.push(this.#getLatestMusic(libraryId, baseUri));\n    }\n    if (jellyfin.getConfigValue('showRecentlyPlayedSection', true)) {\n      listPromises.push(this.#getRecentlyPlayed(libraryId, baseUri));\n    }\n    if (jellyfin.getConfigValue('showFrequentlyPlayedSection', true)) {\n      listPromises.push(this.#getFrequentlyPlayed(libraryId, baseUri));\n    }\n    if (jellyfin.getConfigValue('showFavoriteArtistsSection', true)) {\n      listPromises.push(this.#getFavoriteArtists(libraryId, baseUri));\n    }\n    if (jellyfin.getConfigValue('showFavoriteAlbumsSection', true)) {\n      listPromises.push(this.#getFavoriteAlbums(libraryId, baseUri));\n    }\n    if (jellyfin.getConfigValue('showFavoriteSongsSection', true)) {\n      listPromises.push(this.#getFavoriteSongs(libraryId, baseUri));\n    }\n\n    const lists = await Promise.all(listPromises);\n    const cleanLists = lists.reduce<RenderedList[]>((result, list) => {\n      if (list.items.length > 0) {\n        result.push(list);\n      }\n      return result;\n    }, []);\n\n    const pageContents: RenderedPageContents = {\n      prev: {\n        uri: prevUri\n      },\n      lists: cleanLists\n    };\n\n    await this.setPageTitle(pageContents);\n\n    return {\n      navigation: pageContents\n    };\n  }\n\n  async #getTopItemList(libraryId: string, baseUri: string): Promise<RenderedList> {\n    const baseImgPath = 'music_service/jellyfin/dist/assets/images/';\n    const listItems: RenderedListItem[] = [\n      {\n        service: 'jellyfin',\n        type: 'folder',\n        title: jellyfin.getI18n('JELLYFIN_ALBUMS'),\n        uri: `${baseUri}/${ViewHelper.constructUriSegmentFromView<AlbumView>({ name: 'albums', parentId: libraryId })}`,\n        albumart: `/albumart?sourceicon=${baseImgPath}album.png`\n      },\n      {\n        service: 'jellyfin',\n        type: 'streaming-category',\n        title: jellyfin.getI18n('JELLYFIN_ALBUM_ARTISTS'),\n        uri: `${baseUri}/${ViewHelper.constructUriSegmentFromView<ArtistView>({ name: 'albumArtists', parentId: libraryId })}`,\n        albumart: `/albumart?sourceicon=${baseImgPath}avatar.png`\n      },\n      {\n        service: 'jellyfin',\n        type: 'streaming-category',\n        title: jellyfin.getI18n('JELLYFIN_ARTISTS'),\n        uri: `${baseUri}/${ViewHelper.constructUriSegmentFromView<ArtistView>({ name: 'artists', parentId: libraryId })}`,\n        albumart: `/albumart?sourceicon=${baseImgPath}avatar.png`\n      },\n      {\n        service: 'jellyfin',\n        type: 'streaming-category',\n        title: jellyfin.getI18n('JELLYFIN_PLAYLISTS'),\n        uri: `${baseUri}/${ViewHelper.constructUriSegmentFromView<PlaylistView>({ name: 'playlists', parentId: libraryId })}`,\n        albumart: `/albumart?sourceicon=${baseImgPath}playlist.png`\n      },\n      {\n        service: 'jellyfin',\n        type: 'streaming-category',\n        title: jellyfin.getI18n('JELLYFIN_GENRES'),\n        uri: `${baseUri}/${ViewHelper.constructUriSegmentFromView<GenreView>({ name: 'genres', parentId: libraryId })}`,\n        albumart: `/albumart?sourceicon=${baseImgPath}genre.png`\n      },\n      {\n        service: 'jellyfin',\n        type: 'folder',\n        title: jellyfin.getI18n('JELLYFIN_ALL_SONGS'),\n        uri: `${baseUri}/${ViewHelper.constructUriSegmentFromView<SongView>({ name: 'songs', parentId: libraryId })}`,\n        albumart: `/albumart?sourceicon=${baseImgPath}song.png`\n      }\n    ];\n\n    const model = this.getModel(ModelType.UserView);\n    const userView = await model.getUserView(libraryId);\n    const title = userView?.name;\n\n    return {\n      title,\n      availableListViews: [ 'list', 'grid' ],\n      items: listItems\n    };\n  }\n\n  #getLatestMusic(libraryId: string, baseUri: string): Promise<RenderedList> {\n    const params: GetItemsParams = {\n      parentId: libraryId,\n      sortBy: 'DateCreated,SortName',\n      sortOrder: 'Descending,Ascending',\n      limit: jellyfin.getConfigValue('latestMusicSectionItems', 11)\n    };\n    const albumView: AlbumView = {\n      name: 'albums',\n      parentId: libraryId,\n      sortBy: 'DateCreated,SortName',\n      sortOrder: 'Descending,Ascending',\n      fixedView: 'latest'\n    };\n    const moreUri = `${baseUri}/${ViewHelper.constructUriSegmentFromView(albumView)}`;\n\n    return this.#getAlbumList(params, jellyfin.getI18n('JELLYFIN_LATEST_ALBUMS'), moreUri);\n  }\n\n  #getRecentlyPlayed(libraryId: string, baseUri: string): Promise<RenderedList> {\n    const params: GetItemsParams = {\n      parentId: libraryId,\n      sortBy: 'DatePlayed,SortName',\n      sortOrder: 'Descending,Ascending',\n      filters: 'IsPlayed',\n      limit: jellyfin.getConfigValue('recentlyPlayedSectionItems', 5)\n    };\n    const songView: SongView = {\n      name: 'songs',\n      parentId: libraryId,\n      sortBy: 'DatePlayed,SortName',\n      sortOrder: 'Descending,Ascending',\n      filters: 'IsPlayed',\n      fixedView: 'recentlyPlayed'\n    };\n    const moreUri = `${baseUri}/${ViewHelper.constructUriSegmentFromView(songView)}`;\n\n    return this.#getSongList(params, jellyfin.getI18n('JELLYFIN_RECENTLY_PLAYED_SONGS'), moreUri);\n  }\n\n  #getFrequentlyPlayed(libraryId: string, baseUri: string): Promise<RenderedList> {\n    const params: GetItemsParams = {\n      parentId: libraryId,\n      sortBy: 'PlayCount,SortName',\n      sortOrder: 'Descending,Ascending',\n      filters: 'IsPlayed',\n      limit: jellyfin.getConfigValue('frequentlyPlayedSectionItems', 5)\n    };\n    const songView: SongView = {\n      name: 'songs',\n      parentId: libraryId,\n      sortBy: 'PlayCount,SortName',\n      sortOrder: 'Descending,Ascending',\n      filters: 'IsPlayed',\n      fixedView: 'frequentlyPlayed'\n    };\n    const moreUri = `${baseUri}/${ViewHelper.constructUriSegmentFromView(songView)}`;\n\n    return this.#getSongList(params, jellyfin.getI18n('JELLYFIN_FREQUENTLY_PLAYED_SONGS'), moreUri);\n  }\n\n  #getFavoriteArtists(libraryId: string, baseUri: string): Promise<RenderedList> {\n    const params: GetItemsParams = {\n      parentId: libraryId,\n      filters: 'IsFavorite',\n      limit: jellyfin.getConfigValue('favoriteArtistsSectionItems', 5)\n    };\n    const artistView: ArtistView = {\n      name: 'artists',\n      parentId: libraryId,\n      filters: 'IsFavorite',\n      fixedView: 'favorite'\n    };\n    const moreUri = `${baseUri}/${ViewHelper.constructUriSegmentFromView(artistView)}`;\n\n    return this.#getArtistList(params, jellyfin.getI18n('JELLYFIN_FAVORITE_ARTISTS'), moreUri);\n  }\n\n  #getFavoriteAlbums(libraryId: string, baseUri: string) {\n    const params: GetItemsParams = {\n      parentId: libraryId,\n      filters: 'IsFavorite',\n      limit: jellyfin.getConfigValue('favoriteAlbumsSectionItems', 5)\n    };\n    const albumView: AlbumView = {\n      name: 'albums',\n      parentId: libraryId,\n      filters: 'IsFavorite',\n      fixedView: 'favorite'\n    };\n    const moreUri = `${baseUri}/${ViewHelper.constructUriSegmentFromView(albumView)}`;\n\n    return this.#getAlbumList(params, jellyfin.getI18n('JELLYFIN_FAVORITE_ALBUMS'), moreUri);\n  }\n\n  #getFavoriteSongs(libraryId: string, baseUri: string) {\n    const params: GetItemsParams = {\n      parentId: libraryId,\n      filters: 'IsFavorite',\n      limit: jellyfin.getConfigValue('favoriteSongsSectionItems', 5)\n    };\n    const songView: SongView = {\n      name: 'songs',\n      parentId: libraryId,\n      filters: 'IsFavorite',\n      fixedView: 'favorite'\n    };\n    const moreUri = `${baseUri}/${ViewHelper.constructUriSegmentFromView(songView)}`;\n\n    return this.#getSongList(params, jellyfin.getI18n('JELLYFIN_FAVORITE_SONGS'), moreUri);\n  }\n\n  async #getAlbumList(params: GetItemsParams, title: string, moreUri: string): Promise<RenderedList> {\n    return this.#getItemsResultToList(\n      await this.getModel(ModelType.Album).getAlbums(params),\n      this.getRenderer(EntityType.Album),\n      title,\n      moreUri\n    );\n  }\n\n  async #getSongList(params: GetItemsParams, title: string, moreUri: string) {\n    return this.#getItemsResultToList(\n      await this.getModel(ModelType.Song).getSongs(params),\n      this.getRenderer(EntityType.Song),\n      title,\n      moreUri\n    );\n  }\n\n  async #getArtistList(params: GetItemsParams, title: string, moreUri: string): Promise<RenderedList> {\n    return this.#getItemsResultToList(\n      await this.getModel(ModelType.Artist).getArtists(params),\n      this.getRenderer(EntityType.Artist),\n      title,\n      moreUri\n    );\n  }\n\n  async #getItemsResultToList<E extends BaseEntity>(result: GetItemsResult<E>, renderer: BaseRenderer<E>, title: string, moreUri: string): Promise<RenderedList> {\n    const listItems = result.items.map((entity) =>\n      renderer.renderToListItem(entity)).filter((item) => item) as RenderedListItem[];\n    if (result.nextStartIndex) {\n      listItems.push(this.constructNextPageItem(moreUri, `<span style='color: #7a848e;'>${jellyfin.getI18n('JELLYFIN_VIEW_MORE')}</span>`));\n    }\n    listItems.push();\n    return {\n      title,\n      availableListViews: [ 'list', 'grid' ],\n      items: listItems\n    };\n  }\n\n  async explode(): Promise<ExplodedTrackInfo[]> {\n    if (!this.serverConnection) {\n      throw Error('No auth');\n    }\n    const songView: SongView = {\n      name: 'songs',\n      parentId: this.currentView.parentId\n    };\n    const uri = `${this.uri}/${ViewHelper.constructUriSegmentFromView(songView)}`;\n    const handler = await ViewHandlerFactory.getHandler(uri, this.serverConnection);\n    return handler.explode();\n  }\n}\n"]}