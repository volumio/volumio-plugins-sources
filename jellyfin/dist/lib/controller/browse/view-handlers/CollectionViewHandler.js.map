{"version":3,"file":"CollectionViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/CollectionViewHandler.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,wEAAgD;AAEhD,+EAAgD;AAChD,0CAA2C;AAC3C,gDAA+C;AAI/C,8DAAsC;AAQtC,MAAqB,qBAAsB,SAAQ,yBAA+B;IAAlF;;;IAqGA,CAAC;IAnGC,KAAK,CAAC,MAAM;QACV,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;QACzB,MAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxC,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,MAAM,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEnC,MAAM,YAAY,GAA4B,EAAE,CAAC;QACjD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,YAAY,CAAC,IAAI,CAAC,uBAAA,IAAI,wEAAS,MAAb,IAAI,EAAU,YAAY,EAAE,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;SACxE;aACI;YACH,YAAY,CAAC,IAAI,CACf,uBAAA,IAAI,wEAAS,MAAb,IAAI,EAAU,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,EACnD,uBAAA,IAAI,wEAAS,MAAb,IAAI,EAAU,YAAY,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,EACpD,uBAAA,IAAI,wEAAS,MAAb,IAAI,EAAU,YAAY,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,EACtD,uBAAA,IAAI,wEAAS,MAAb,IAAI,EAAU,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,CACnD,CAAC;SACH;QAED,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC9C,MAAM,YAAY,GAAyB;YACzC,IAAI,EAAE;gBACJ,GAAG,EAAE,OAAO;aACb;YACD,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC;SAClD,CAAC;QACF,MAAM,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;QAEtC,OAAO;YACL,UAAU,EAAE,YAAY;SACzB,CAAC;IACJ,CAAC;CAoEF;AArGD,wCAqGC;mFAlEC,KAAK,yCAAU,YAAoB,EAAE,QAA8C,EAAE,OAAe,EAAE,SAAS,GAAG,KAAK;IACrH,IAAI,UAAsB,CAAC;IAC3B,QAAQ,QAAQ,EAAE;QAChB,KAAK,OAAO;YACV,UAAU,GAAG,qBAAU,CAAC,KAAK,CAAC;YAC9B,MAAM;QACR,KAAK,QAAQ;YACX,UAAU,GAAG,qBAAU,CAAC,MAAM,CAAC;YAC/B,MAAM;QACR,KAAK,UAAU;YACb,UAAU,GAAG,qBAAU,CAAC,QAAQ,CAAC;YACjC,MAAM;QACR,KAAK,MAAM,CAAC;QACZ;YACE,UAAU,GAAG,qBAAU,CAAC,IAAI,CAAC;YAC7B,MAAM;KACT;IACD,MAAM,gBAAgB,GAA6B;QACjD,GAAG,IAAI,CAAC,mBAAmB,EAAE;QAC7B,QAAQ,EAAE,UAAU;KACrB,CAAC;IACF,IAAI,SAAS,EAAE;QACb,gBAAgB,CAAC,KAAK,GAAG,yBAAQ,CAAC,cAAc,CAAC,0BAA0B,EAAE,EAAE,CAAC,CAAC;KAClF;IAED,IAAI,OAAO,CAAC;IACZ,IAAI,SAAS,EAAE;QACb,MAAM,cAAc,GAAmB;YACrC,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,YAAY;YACtB,QAAQ;SACT,CAAC;QACF,OAAO,GAAG,GAAG,OAAO,IAAI,oBAAU,CAAC,2BAA2B,CAAC,cAAc,CAAC,EAAE,CAAC;KAClF;SACI;QACH,OAAO,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACnC;IACD,MAAM,KAAK,GAAG,yBAAQ,CAAC,OAAO,CAAC,YAAY,QAAQ,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IAEtE,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,UAAU,CAAC,CAAC;IAClD,MAAM,eAAe,GAAG,MAAM,KAAK,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;IACzE,MAAM,SAAS,GAAG,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;QACnD,QAAQ,IAAI,CAAC,IAAI,EAAE;YACjB,KAAK,qBAAU,CAAC,KAAK;gBACnB,OAAO,IAAI,CAAC,WAAW,CAAC,qBAAU,CAAC,KAAK,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YACnE,KAAK,qBAAU,CAAC,IAAI;gBAClB,OAAO,IAAI,CAAC,WAAW,CAAC,qBAAU,CAAC,IAAI,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YAClE,KAAK,qBAAU,CAAC,MAAM;gBACpB,OAAO,IAAI,CAAC,WAAW,CAAC,qBAAU,CAAC,MAAM,CAAC,CAAC,gBAAgB,CAAC,IAAW,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/F,KAAK,qBAAU,CAAC,QAAQ;gBACtB,OAAO,IAAI,CAAC,WAAW,CAAC,qBAAU,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;YACtE;gBACE,OAAO,IAAI,CAAC;SACf;IACH,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAuB,CAAC;IAEhD,IAAI,eAAe,CAAC,cAAc,EAAE;QAClC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC;KACnG;IAED,OAAO;QACL,KAAK;QACL,kBAAkB,EAAE,CAAE,MAAM,EAAE,MAAM,CAAE;QACtC,KAAK,EAAE,SAAS;KACjB,CAAC;AACJ,CAAC","sourcesContent":["import BaseViewHandler from './BaseViewHandler';\nimport View from './View';\nimport jellyfin from '../../../JellyfinContext';\nimport { ModelType } from '../../../model';\nimport { EntityType } from '../../../entities';\nimport { RenderedList, RenderedPage, RenderedPageContents } from './ViewHandler';\nimport { GetCollectionItemsParams } from '../../../model/CollectionModel';\nimport { RenderedListItem } from './renderer/BaseRenderer';\nimport ViewHelper from './ViewHelper';\n\nexport interface CollectionView extends View {\n  name: 'collection';\n  parentId: string;\n  itemType?: 'album' | 'artist' | 'playlist' | 'song';\n}\n\nexport default class CollectionViewHandler extends BaseViewHandler<CollectionView> {\n\n  async browse(): Promise<RenderedPage> {\n    const baseUri = this.uri;\n    const prevUri = this.constructPrevUri();\n    const view = this.currentView;\n    const collectionId = view.parentId;\n\n    const listPromises: Promise<RenderedList>[] = [];\n    if (view.itemType) {\n      listPromises.push(this.#getList(collectionId, view.itemType, baseUri));\n    }\n    else {\n      listPromises.push(\n        this.#getList(collectionId, 'album', baseUri, true),\n        this.#getList(collectionId, 'artist', baseUri, true),\n        this.#getList(collectionId, 'playlist', baseUri, true),\n        this.#getList(collectionId, 'song', baseUri, true)\n      );\n    }\n\n    const lists = await Promise.all(listPromises);\n    const pageContents: RenderedPageContents = {\n      prev: {\n        uri: prevUri\n      },\n      lists: lists.filter((list) => list?.items.length)\n    };\n    await this.setPageTitle(pageContents);\n\n    return {\n      navigation: pageContents\n    };\n  }\n\n  async #getList(collectionId: string, itemType: Required<CollectionView>['itemType'], baseUri: string, inSection = false): Promise<RenderedList> {\n    let entityType: EntityType;\n    switch (itemType) {\n      case 'album':\n        entityType = EntityType.Album;\n        break;\n      case 'artist':\n        entityType = EntityType.Artist;\n        break;\n      case 'playlist':\n        entityType = EntityType.Playlist;\n        break;\n      case 'song':\n      default:\n        entityType = EntityType.Song;\n        break;\n    }\n    const modelQueryParams: GetCollectionItemsParams = {\n      ...this.getModelQueryParams(),\n      itemType: entityType\n    };\n    if (inSection) {\n      modelQueryParams.limit = jellyfin.getConfigValue('collectionInSectionItems', 11);\n    }\n\n    let moreUri;\n    if (inSection) {\n      const collectionView: CollectionView = {\n        name: 'collection',\n        parentId: collectionId,\n        itemType\n      };\n      moreUri = `${baseUri}/${ViewHelper.constructUriSegmentFromView(collectionView)}`;\n    }\n    else {\n      moreUri = this.constructNextUri();\n    }\n    const title = jellyfin.getI18n(`JELLYFIN_${itemType.toUpperCase()}S`);\n\n    const model = this.getModel(ModelType.Collection);\n    const collectionItems = await model.getCollectionItems(modelQueryParams);\n    const listItems = collectionItems.items.map((item) => {\n      switch (item.type) {\n        case EntityType.Album:\n          return this.getRenderer(EntityType.Album).renderToListItem(item);\n        case EntityType.Song:\n          return this.getRenderer(EntityType.Song).renderToListItem(item);\n        case EntityType.Artist:\n          return this.getRenderer(EntityType.Artist).renderToListItem(item as any, { noParent: true });\n        case EntityType.Playlist:\n          return this.getRenderer(EntityType.Playlist).renderToListItem(item);\n        default:\n          return null;\n      }\n    }).filter((item) => item) as RenderedListItem[];\n\n    if (collectionItems.nextStartIndex) {\n      listItems.push(inSection ? this.constructNextPageItem(moreUri) : this.constructMoreItem(moreUri));\n    }\n\n    return {\n      title,\n      availableListViews: [ 'list', 'grid' ],\n      items: listItems\n    };\n  }\n}\n"]}