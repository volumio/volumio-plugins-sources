{"version":3,"file":"StopWatch.js","sourceRoot":"","sources":["../../../src/lib/util/StopWatch.ts"],"names":[],"mappings":";AAAA;;;GAGG;;;;;;;;;;;;;;AAEH,MAAqB,SAAS;IAM5B;;QALA,4CAAwB;QACxB,2CAAuB;QACvB,4CAAwB;QACxB,oCAA+B;QAG7B,uBAAA,IAAI,qBAAW,SAAS,MAAA,CAAC;QACzB,uBAAA,IAAI,6BAAmB,uBAAA,IAAI,4BAAkB,uBAAA,IAAI,4DAAqB,MAAzB,IAAI,CAAuB,MAAA,MAAA,CAAC;IAC3E,CAAC;IAED,KAAK,CAAC,cAAc,GAAG,CAAC;QACtB,uBAAA,IAAI,6BAAmB,uBAAA,IAAI,4BAAkB,uBAAA,IAAI,4DAAqB,MAAzB,IAAI,CAAuB,MAAA,MAAA,CAAC;QACzE,uBAAA,IAAI,6BAAmB,cAAc,MAAA,CAAC;QACtC,uBAAA,IAAI,qBAAW,SAAS,MAAA,CAAC;QACzB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI;QACF,IAAI,uBAAA,IAAI,yBAAQ,KAAK,SAAS,EAAE;YAC9B,uBAAA,IAAI,4BAAkB,uBAAA,IAAI,4DAAqB,MAAzB,IAAI,CAAuB,MAAA,CAAC;YAClD,uBAAA,IAAI,qBAAW,SAAS,MAAA,CAAC;SAC1B;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,UAAU;QACR,IAAI,uBAAA,IAAI,yBAAQ,KAAK,SAAS,EAAE;YAC9B,OAAO,uBAAA,IAAI,gCAAe,GAAG,uBAAA,IAAI,iCAAgB,GAAG,uBAAA,IAAI,iCAAgB,CAAC;SAC1E;QAED,oBAAoB;QACpB,OAAO,uBAAA,IAAI,4DAAqB,MAAzB,IAAI,CAAuB,GAAG,uBAAA,IAAI,iCAAgB,GAAG,uBAAA,IAAI,iCAAgB,CAAC;IACnF,CAAC;CAKF;AAtCD,4BAsCC;;IAFG,OAAO,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;AAC9B,CAAC","sourcesContent":["/**\n * Note: this is not a general-purpose utility class, but one made specifically for\n * keeping track of the seek position in MPD 'stop' events handled by PlayController.\n */\n\nexport default class StopWatch {\n  #startTimestamp: number;\n  #stopTimestamp: number;\n  #startElapsedMS: number;\n  #status: 'running' | 'stopped';\n\n  constructor() {\n    this.#status = 'stopped';\n    this.#startTimestamp = this.#stopTimestamp = this.#getCurrentTimestamp();\n  }\n\n  start(startElapsedMS = 0) {\n    this.#startTimestamp = this.#stopTimestamp = this.#getCurrentTimestamp();\n    this.#startElapsedMS = startElapsedMS;\n    this.#status = 'running';\n    return this;\n  }\n\n  stop() {\n    if (this.#status !== 'stopped') {\n      this.#stopTimestamp = this.#getCurrentTimestamp();\n      this.#status = 'stopped';\n    }\n    return this;\n  }\n\n  getElapsed() {\n    if (this.#status === 'stopped') {\n      return this.#stopTimestamp - this.#startTimestamp + this.#startElapsedMS;\n    }\n\n    // Status: 'running'\n    return this.#getCurrentTimestamp() - this.#startTimestamp + this.#startElapsedMS;\n  }\n\n  #getCurrentTimestamp() {\n    return new Date().getTime();\n  }\n}\n"]}