{"version":3,"file":"AutoplayHelper.js","sourceRoot":"","sources":["../../../src/lib/util/AutoplayHelper.ts"],"names":[],"mappings":";;;;;;;;AAGA,gDAAiD;AAEjD,MAAqB,cAAc;IAEjC,MAAM,CAAC,kBAAkB,CAAC,IAAiG;QACzH,gBAAgB;QAChB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACvB,MAAM,kBAAkB,GAAG,uBAAA,IAAI,iDAAuB,MAA3B,IAAI,EAAwB,IAAI,CAAC,CAAC;YAC7D,IAAI,kBAAkB,EAAE;gBACtB,OAAO;oBACL,aAAa,EAAE;wBACb,IAAI,EAAE,uBAAY,CAAC,KAAK;wBACxB,OAAO,EAAE;4BACP,GAAG,kBAAkB;yBACtB;qBACF;iBACF,CAAC;aACH;YACD,OAAO,IAAI,CAAC;SACb;QAED,qCAAqC;QACrC,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;YACzB,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,OAAO;oBACL,aAAa,EAAE,IAAI,CAAC,YAAY,CAAC,QAAQ;iBAC1C,CAAC;aACH;YACD,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,OAAO,EAAE;gBACxC,OAAO;oBACL,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;iBACrC,CAAC;aACH;YACD,OAAO,IAAI,CAAC;SACb;QAED,YAAY;QACZ,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,EAAE;YACnD,OAAO;gBACL,aAAa,EAAE,IAAI,CAAC,QAAQ;aAC7B,CAAC;SACH;QAED,OAAO,IAAI,CAAC;IACd,CAAC;CAuBF;AAjED,iCAiEC;4GArB+B,KAAgC;IAC5D,MAAM,qBAAqB,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;QAC5C,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC;IACvE,IAAI,qBAAqB,EAAE;QACzB,MAAM,UAAU,GAAG,KAAgC,CAAC;QACpD,MAAM,UAAU,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,CAAC;QAC7D,MAAM,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;QACrD,IAAI,UAAU,EAAE;YACd,MAAM,mBAAmB,GAAG,UAAU,CAAC,KAAK,CAC1C,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,KAAK,UAAU,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;YACxG,IAAI,mBAAmB,EAAE;gBACvB,OAAO;oBACL,UAAU;oBACV,MAAM;oBACN,OAAO,EAAE,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO;iBACnD,CAAC;aACH;SACF;KACF;IACD,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import { ContentItem, PageElement } from '../types';\nimport AutoplayContext from '../types/AutoplayContext';\nimport { WatchContent, WatchContinuationContent } from '../types/Content';\nimport { EndpointType } from '../types/Endpoint';\n\nexport default class AutoplayHelper {\n\n  static getAutoplayContext(data: PageElement.SectionItem[] | ContentItem.MusicItem | WatchContent | WatchContinuationContent): AutoplayContext | null {\n    // SectionItem[]\n    if (Array.isArray(data)) {\n      const commonPlaylistData = this.#getCommonPlaylistData(data);\n      if (commonPlaylistData) {\n        return {\n          fetchEndpoint: {\n            type: EndpointType.Watch,\n            payload: {\n              ...commonPlaylistData\n            }\n          }\n        };\n      }\n      return null;\n    }\n\n    // Watch / Watch Continuation Content\n    if (data.type === 'watch') {\n      if (data.continuation) {\n        return {\n          fetchEndpoint: data.continuation.endpoint\n        };\n      }\n      if (!data.isContinuation && data.automix) {\n        return {\n          fetchEndpoint: data.automix.endpoint\n        };\n      }\n      return null;\n    }\n\n    // MusicItem\n    if ((data.type === 'song' || data.type === 'video')) {\n      return {\n        fetchEndpoint: data.endpoint\n      };\n    }\n\n    return null;\n  }\n\n  static #getCommonPlaylistData(items: PageElement.SectionItem[]) {\n    const hasOnlySongsAndVideos = items.length > 0 &&\n      items.every((item) => item.type === 'song' || item.type === 'video');\n    if (hasOnlySongsAndVideos) {\n      const musicItems = items as ContentItem.MusicItem[];\n      const playlistId = musicItems[0].endpoint.payload.playlistId;\n      const params = musicItems[0].endpoint.payload.params;\n      if (playlistId) {\n        const allFromSamePlaylist = musicItems.every(\n          (item) => item.endpoint.payload.playlistId === playlistId && item.endpoint.payload.params === params);\n        if (allFromSamePlaylist) {\n          return {\n            playlistId,\n            params,\n            videoId: musicItems[musicItems.length - 1].videoId\n          };\n        }\n      }\n    }\n    return null;\n  }\n}\n"]}