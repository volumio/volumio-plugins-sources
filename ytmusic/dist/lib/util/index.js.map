{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/lib/util/index.ts"],"names":[],"mappings":";;;;;;AAAA,6DAA6D;AAC7D,aAAa;AACb,8CAAuB;AAEvB,SAAgB,KAAK,CAAC,EAAU;IAC9B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC;AAC3D,CAAC;AAFD,sBAEC;AAED,SAAgB,GAAG,CAAC,GAAW,EAAE,GAAW;IAC1C,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC3D,CAAC;AAFD,kBAEC;AAED;;;;;GAKG;AACH,SAAgB,YAAY,CAAC,GAAwB,EAAE,SAA+C;IACpG,MAAM,OAAO,GAAe,EAAE,CAAC;IAC/B,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,KAAK,MAAM,CAAE,GAAG,EAAE,KAAK,CAAE,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YAChD,IAAI,SAAc,CAAC;YACnB,IAAI,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE;gBACzB,SAAS,GAAG,KAAK,CAAC;aACnB;YACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC7B,MAAM,aAAa,GAAG,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;gBACrD,2EAA2E;gBAC3E,8CAA8C;gBAC9C,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC5B,OAAO,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC;iBAChC;qBACI,IAAI,SAAS,EAAE;oBAClB,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBACzB;aACF;iBACI,IAAI,SAAS,EAAE;gBAClB,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aACzB;SACF;KACF;SACI,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QAC3B,KAAK,MAAM,KAAK,IAAI,GAAiB,EAAE;YACrC,OAAO,CAAC,IAAI,CAAC,GAAG,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC;SACjD;KACF;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;AA9BD,oCA8BC;AAED,SAAgB,cAAc,CAAI,OAAmB;IACnD,MAAM,KAAK,GAAG,aAAI,CAAC,KAAK,EAAE,CAAC;IAE3B,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;QACtB,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACxB,CAAC,CAAC;SACC,KAAK,CAAC,CAAC,KAAK,EAAE,EAAE;QACf,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC,CAAC,CAAC;IAEL,OAAO,KAAK,CAAC,OAAO,CAAC;AACvB,CAAC;AAXD,wCAWC;AAED,SAAgB,cAAc,CAAC,OAAY;IACzC,iEAAiE;IACjE,IAAI,OAAO,OAAO,CAAC,KAAK,KAAK,UAAU,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,SAAS,EAAE;QAC5E,4BAA4B;QAC5B,OAAO,OAAO,CAAC;KAChB;IACD,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE;YAC3B,OAAO,CAAC,MAAM,CAAC,CAAC;QAClB,CAAC,CAAC;aACC,IAAI,CAAC,CAAC,KAAU,EAAE,EAAE;YACnB,MAAM,CAAC,KAAK,CAAC,CAAC;QAChB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACL,CAAC;AAdD,wCAcC","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport libQ from 'kew';\n\nexport function sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport function rnd(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Recursively match each property of `obj` against `predicate` and returns the values of matches.\n * @param {*} obj\n * @param {*} predicate `function(key, value)`\n * @returns List of values of matched properties. Only deepest matches are included.\n */\nexport function findInObject(obj: object | Array<any>, predicate: (key: string, value: any) => boolean) {\n  const matches: Array<any> = [];\n  if (typeof obj === 'object') {\n    for (const [ key, value ] of Object.entries(obj)) {\n      let lastMatch: any;\n      if (predicate(key, value)) {\n        lastMatch = value;\n      }\n      if (typeof value === 'object') {\n        const nestedMatches = findInObject(value, predicate);\n        // If there are nested objects that match predicate, then add those instead\n        // Of parent match (i.e. `lastMatch`, if any).\n        if (nestedMatches.length > 0) {\n          matches.push(...nestedMatches);\n        }\n        else if (lastMatch) {\n          matches.push(lastMatch);\n        }\n      }\n      else if (lastMatch) {\n        matches.push(lastMatch);\n      }\n    }\n  }\n  else if (Array.isArray(obj)) {\n    for (const value of obj as Array<any>) {\n      matches.push(...findInObject(value, predicate));\n    }\n  }\n  return matches;\n}\n\nexport function jsPromiseToKew<T>(promise: Promise<T>): any {\n  const defer = libQ.defer();\n\n  promise.then((result) => {\n    defer.resolve(result);\n  })\n    .catch((error) => {\n      defer.reject(error);\n    });\n\n  return defer.promise;\n}\n\nexport function kewToJSPromise(promise: any): Promise<any> {\n  // Guard against a JS promise from being passed to this function.\n  if (typeof promise.catch === 'function' && typeof promise.fail === undefined) {\n    // JS promise - return as is\n    return promise;\n  }\n  return new Promise((resolve, reject) => {\n    promise.then((result: any) => {\n      resolve(result);\n    })\n      .fail((error: any) => {\n        reject(error);\n      });\n  });\n}\n"]}