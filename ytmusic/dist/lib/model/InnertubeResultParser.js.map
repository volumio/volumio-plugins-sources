{"version":3,"file":"InnertubeResultParser.js","sourceRoot":"","sources":["../../../src/lib/model/InnertubeResultParser.ts"],"names":[],"mappings":"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","sourcesContent":["import ytmusic, { type I18nKey } from '../YTMusicContext';\nimport { type IBrowseResponse, type INextResponse, type ISearchResponse, YTNodes, Misc as YTMisc, type Helpers as YTHelpers, type IParsedResponse, PlaylistPanelContinuation, GridContinuation, MusicShelfContinuation, MusicPlaylistShelfContinuation, SectionListContinuation } from 'volumio-youtubei.js';\nimport {type BrowseContinuationEndpoint, type BrowseEndpoint, type EndpointOf, type SearchEndpoint, type WatchContinuationEndpoint, type WatchEndpoint} from '../types/Endpoint';\nimport type Endpoint from '../types/Endpoint';\nimport { EndpointType } from '../types/Endpoint';\nimport { type PageElement, type ContentItem } from '../types';\nimport { type SectionItem } from '../types/PageElement';\nimport EndpointHelper from '../util/EndpointHelper';\nimport { type ContentOf, type PageContent, type WatchContent, type WatchContinuationContent } from '../types/Content';\nimport { type TextRun } from 'volumio-youtubei.js/dist/src/parser/misc';\nimport { type MetadataLyrics, type MetadataSyncedLyrics } from 'now-playing-common';\n\ntype ParseableInnertubeResponse = INextResponse | ISearchResponse | IBrowseResponse | IParsedResponse;\n\ntype NestedSection = YTNodes.SectionList &\n  YTNodes.ItemSection &\n  YTNodes.Grid &\n  YTNodes.MusicShelf &\n  YTNodes.MusicCardShelf &\n  YTNodes.MusicCarouselShelf &\n  YTNodes.MusicPlaylistShelf;\n\ntype SectionContent = Partial<NestedSection |\n  (NestedSection &\n    YTNodes.Tab) &\n  { contents?: any, header?: any, continuation?: string }>;\n\n// Tab title refers to i18n key\nconst TAB_TITLE_BY_BROWSE_ID: Record<string, I18nKey> = {\n  'FEmusic_home': 'YTMUSIC_HOME',\n  'FEmusic_explore': 'YTMUSIC_EXPLORE',\n  'FEmusic_library_landing': 'YTMUSIC_LIBRARY',\n  'FEmusic_history': 'YTMUSIC_HISTORY'\n};\n\nexport default class InnertubeResultParser {\n\n  static parseResult<T extends Endpoint>(data: ParseableInnertubeResponse | { contents: any },\n    originatingEndpoint: T): ContentOf<T> | null {\n\n    switch (originatingEndpoint.type) {\n      case EndpointType.Watch:\n        return this.#parseWatchEndpointResult(data as INextResponse) as ContentOf<T & WatchEndpoint>;\n\n      case EndpointType.WatchContinuation:\n        return this.#parseWatchContinuationEndpointResult(data as IParsedResponse) as ContentOf<T & WatchContinuationEndpoint>;\n\n      case EndpointType.Browse:\n      case EndpointType.BrowseContinuation:\n      case EndpointType.Search:\n      case EndpointType.SearchContinuation:\n        return this.#parseBrowseEndpointResult(data as IBrowseResponse, originatingEndpoint) as ContentOf<T & BrowseEndpoint>;\n\n      default:\n        return null;\n    }\n  }\n\n  static #parseWatchContinuationEndpointResult(data: IParsedResponse): WatchContinuationContent | null {\n    const continuationContents = data.continuation_contents?.firstOfType(PlaylistPanelContinuation);\n    if (continuationContents) {\n      if (continuationContents.contents) {\n        const parsedItems = continuationContents.contents.reduce<WatchContinuationContent['items']>((result, item) => {\n          const parsedItem = this.parseContentItem(item);\n          if (parsedItem && (parsedItem.type === 'video' || parsedItem.type === 'song')) {\n            result.push(parsedItem);\n          }\n          return result;\n        }, []);\n\n        const result: WatchContinuationContent = {\n          type: 'watch',\n          isContinuation: true,\n          items: parsedItems\n        };\n\n        if (continuationContents.continuation) {\n          const lastItemEndpointPayload = parsedItems[parsedItems.length - 1]?.endpoint?.payload;\n          if (lastItemEndpointPayload) {\n            const continuationEndpoint: WatchContinuationEndpoint = {\n              type: EndpointType.WatchContinuation,\n              payload: {\n                token: continuationContents.continuation,\n                playlistId: lastItemEndpointPayload.playlistId\n              }\n            };\n            if (lastItemEndpointPayload.videoId) {\n              continuationEndpoint.payload.videoId = lastItemEndpointPayload.videoId;\n            }\n            if (lastItemEndpointPayload?.params) {\n              continuationEndpoint.payload.params = lastItemEndpointPayload.params;\n            }\n            if (lastItemEndpointPayload?.index !== undefined) {\n              continuationEndpoint.payload.index = lastItemEndpointPayload.index;\n            }\n            if (lastItemEndpointPayload?.playlistSetVideoId) {\n              continuationEndpoint.payload.playlistSetVideoId = lastItemEndpointPayload.playlistSetVideoId;\n            }\n            result.continuation = {\n              type: 'continuation',\n              endpoint: continuationEndpoint\n            };\n          }\n        }\n\n        return result;\n      }\n    }\n\n    return null;\n  }\n\n  static #parseWatchEndpointResult(data: INextResponse): WatchContent | null {\n    const dataContents = this.unwrap(data.contents);\n    if (!dataContents) {\n      return null;\n    }\n\n    const result: WatchContent = { type: 'watch', isContinuation: false };\n\n    const playlistPanel = data.contents_memo?.getType(YTNodes.PlaylistPanel)?.first();\n\n    if (playlistPanel) {\n      let automix: ContentItem.Automix | null = null;\n      // Playlist items\n      const playlistItems = playlistPanel.contents.reduce<ContentItem.MusicItem[]>((items, itemData) => {\n        const parsedItem = this.parseContentItem(itemData);\n        if (parsedItem && (parsedItem.type === 'video' || parsedItem.type === 'song')) {\n          items.push(parsedItem);\n        }\n        else if (parsedItem && parsedItem.type === 'automix') {\n          automix = parsedItem;\n        }\n        return items;\n      }, []);\n\n      result.playlist = {\n        type: 'playlist',\n        playlistId: playlistPanel.playlist_id,\n        title: playlistPanel.title,\n        items: playlistItems\n      };\n\n      // Automix\n      if (automix) {\n        result.automix = automix;\n      }\n\n      // Continuation\n      if (playlistPanel.continuation) {\n        result.continuation = {\n          type: 'continuation',\n          endpoint: {\n            type: EndpointType.WatchContinuation,\n            payload: {\n              token: playlistPanel.continuation,\n              playlistId: result.playlist.playlistId\n            }\n          }\n        };\n        const lastItemEndpointPayload = playlistItems[playlistItems.length - 1]?.endpoint?.payload;\n        if (lastItemEndpointPayload?.params) {\n          result.continuation.endpoint.payload.params = lastItemEndpointPayload.params;\n        }\n        if (lastItemEndpointPayload?.index !== undefined) {\n          result.continuation.endpoint.payload.index = lastItemEndpointPayload.index;\n        }\n        if (lastItemEndpointPayload?.playlistSetVideoId) {\n          result.continuation.endpoint.payload.playlistSetVideoId = lastItemEndpointPayload.playlistSetVideoId;\n        }\n      }\n\n      return result;\n    }\n\n    return null;\n  }\n\n  static #parseBrowseEndpointResult(data: Partial<IBrowseResponse & ISearchResponse>, originatingEndpoint: Endpoint): PageContent | null {\n    const continuationContents = data.continuation_contents?.filterType(MusicShelfContinuation, MusicPlaylistShelfContinuation, GridContinuation, SectionListContinuation);\n    if (continuationContents && continuationContents.length > 0) {\n      const ccSections = continuationContents.reduce<PageElement.Section[]>((result, cc) => {\n        const continuation = !cc.is(SectionListContinuation) ? cc.continuation : undefined;\n        const parseData: SectionContent = {\n          contents: cc.contents,\n          continuation\n        };\n        if (cc.is(SectionListContinuation) && cc.header) {\n          parseData.header = cc.header;\n        }\n        const section = this.#parseContentToSection(parseData, originatingEndpoint.type);\n        if (section) {\n          result.push(section);\n        }\n        return result;\n      }, []);\n      if (ccSections.length >= 2) {\n        // Merge first and second sections if 1st has filters+no items and second has none\n        const cc1 = ccSections[0].filters && ccSections[0].filters.length > 0 && ccSections[0].items.length === 0;\n        const cc2 = !ccSections[1].filters;\n        if (cc1 && cc2) {\n          ccSections[1].filters = ccSections[0].filters;\n          ccSections.splice(0, 1);\n        }\n      }\n      if (ccSections.length > 0) {\n        const isReload = EndpointHelper.isType(originatingEndpoint, EndpointType.BrowseContinuation) ? !!originatingEndpoint.isReloadContinuation : false;\n        return {\n          type: 'page',\n          isContinuation: true,\n          isReload,\n          sections: ccSections\n        };\n      }\n      \n      return null;\n    }\n\n    const result: PageContent = {\n      type: 'page',\n      isContinuation: false,\n      isReload: false,\n      sections: []\n    };\n\n    if (data.header) {\n      const dataHeader = this.unwrap(data.header);\n      if (dataHeader && !Array.isArray(dataHeader)) {\n        const header = this.#parseHeader(dataHeader, originatingEndpoint);\n        if (header) {\n          result.header = header;\n        }\n      }\n    }\n\n    const dataContents = this.unwrap(data.contents);\n\n    if (dataContents && !Array.isArray(dataContents) && dataContents.hasKey('tabs')) {\n      const tabs = this.unwrap(dataContents.tabs);\n      if (tabs && Array.isArray(tabs)) {\n        if (!result.header) {\n          // Album / Playlist has MusicResponsiveHeader wrapped in 'content'\n          const hiddenHeader = this.#findNodesByType(tabs, YTNodes.MusicResponsiveHeader)?.[0];\n          if (hiddenHeader) {\n            const header = this.#parseHeader(hiddenHeader, originatingEndpoint);\n            if (header) {\n              result.header = header;\n            }\n          }\n        }\n        const reducedTabs = tabs.reduce<PageElement.Tab[]>((result, tab) => {\n          const endpoint = this.parseEndpoint(tab.endpoint) || originatingEndpoint;\n          let tabTitle = this.unwrap(tab.title);\n          if (!tabTitle && EndpointHelper.isType(endpoint, EndpointType.Browse)) {\n            const browseId = endpoint.payload.browseId;\n            if (browseId && TAB_TITLE_BY_BROWSE_ID[browseId]) {\n              tabTitle = ytmusic.getI18n(TAB_TITLE_BY_BROWSE_ID[browseId]);\n            }\n          }\n          if (tabTitle && EndpointHelper.isType(endpoint,\n            EndpointType.Browse, EndpointType.BrowseContinuation,\n            EndpointType.Search, EndpointType.SearchContinuation)) {\n            result.push({\n              type: 'tab',\n              text: tabTitle,\n              endpoint,\n              selected: !!tab.selected\n            });\n          }\n          return result;\n        }, []);\n\n        if (reducedTabs.length > 0) {\n          result.tabs = reducedTabs;\n        }\n\n        let selectedTab = tabs.find((tab) => tab.selected);\n        if (!selectedTab && tabs.length === 1 && tabs[0].content) {\n          selectedTab = tabs[0];\n        }\n        if (selectedTab) {\n          const parsedSection = this.#parseContentToSection(selectedTab.content, originatingEndpoint.type);\n          if (parsedSection) {\n            result.sections.push(parsedSection);\n          }\n        }\n      }\n    }\n    else {\n      const parsedSection = this.#parseContentToSection({ contents: dataContents } as SectionContent, originatingEndpoint.type);\n      if (parsedSection) {\n        result.sections.push(parsedSection);\n      }\n    }\n\n    if (dataContents && !Array.isArray(dataContents) && dataContents.hasKey('secondary_contents')) {\n      const secondaryContents = this.unwrap(dataContents.secondary_contents);\n      const parsedSection = this.#parseContentToSection({contents: secondaryContents} as SectionContent, originatingEndpoint.type);\n      if (parsedSection) {\n        result.sections.push(parsedSection);\n      }\n    }\n\n    return result;\n  }\n\n  static #parseHeader(data: YTHelpers.YTNode, originatingEndpoint: Endpoint): PageElement.Header | PageElement.PlaylistHeader | null {\n    if (!data) {\n      return null;\n    }\n\n    // MusicEditablePlaylistDetailHeader\n    // Occurs in playlists; wraps around actual header (MusicDetailHeader)\n    if (data.is(YTNodes.MusicEditablePlaylistDetailHeader)) {\n      return this.#parseHeader(data.header, originatingEndpoint);\n    }\n\n    let type: PageElement.Header['type'] | null = null,\n      title: string | null = null,\n      description: string | null = null,\n      thumbnail: string | null = null,\n      endpoint: WatchEndpoint | null = null,\n      channel: ContentItem.Channel | null = null,\n      shufflePlay: PageElement.PlaylistHeader['shufflePlay'] | null = null;\n    const subtitles: string[] = [];\n\n    // Artist\n    if (data.is(YTNodes.MusicImmersiveHeader)) {\n      type = 'channel';\n      title = this.unwrap(data.title);\n      description = this.unwrap(data.description);\n      thumbnail = this.parseThumbnail(data.thumbnail?.contents);\n      if (data.play_button) {\n        const mihShufflePlayEndpoint = data.play_button.icon_type === 'MUSIC_SHUFFLE' ?\n          this.parseEndpoint(data.play_button.endpoint, EndpointType.Watch) : null;\n        if (mihShufflePlayEndpoint) {\n          endpoint = mihShufflePlayEndpoint;\n        }\n      }\n    }\n    // Album / Playlist\n    // -- Legacy: might remove in future - should now be MusicResponsiveHeader\n    else if (data.is(YTNodes.MusicDetailHeader)) {\n      title = this.unwrap(data.title);\n      if (data.description) {\n        description = this.unwrap(data.description);\n      }\n      if (data.author) {\n        const endpoint = this.parseEndpoint(data.author.endpoint, EndpointType.Browse);\n        channel = {\n          type: 'channel',\n          channelId: data.author.channel_id,\n          name: data.author.name,\n          endpoint\n        };\n      }\n      const primarySubtitle = this.unwrap(data.subtitle);\n      const secondSubtitle = this.unwrap(data.second_subtitle);\n      if (primarySubtitle) {\n        subtitles.push(primarySubtitle);\n      }\n      if (secondSubtitle) {\n        subtitles.push(secondSubtitle);\n      }\n      thumbnail = this.parseThumbnail(data.thumbnails);\n      const mdhMenu = this.unwrap(data.menu);\n      if (mdhMenu?.is(YTNodes.Menu)) {\n        const mdhTopLevelButtons = mdhMenu.top_level_buttons.filter(\n          (button) => button.is(YTNodes.Button));\n        for (const button of mdhTopLevelButtons) {\n          // We determine the header type here:\n          // - Album has Play button in top level buttons\n          // - Playlist has Shuffle Play button\n          switch (button.icon_type) {\n            case 'MUSIC_SHUFFLE': {\n              const mdhShufflePlayEndpoint = this.parseEndpoint(button.endpoint, EndpointType.Watch);\n              const mdhShufflePlayText = this.unwrap(button.text);\n              if (mdhShufflePlayEndpoint && mdhShufflePlayText) {\n                type = 'playlist';\n                shufflePlay = {\n                  type: 'endpointLink',\n                  title: mdhShufflePlayText,\n                  endpoint: mdhShufflePlayEndpoint,\n                  icon: button.icon_type\n                };\n                const playlistId = mdhShufflePlayEndpoint.payload.playlistId;\n                if (playlistId) {\n                  endpoint = {\n                    type: EndpointType.Watch,\n                    payload: {\n                      playlistId\n                    }\n                  };\n                }\n              }\n              break;\n            }\n            case 'PLAY_ARROW':\n              type = 'album';\n              endpoint = this.parseEndpoint(button.endpoint, EndpointType.Watch);\n              break;\n          }\n        }\n      }\n    }\n    // Album / Playlist / Podcast\n    // -- Current (replaces MusicDetailHeader)\n    else if (data.is(YTNodes.MusicResponsiveHeader)) {\n      title = this.unwrap(data.title);\n      if (data.description) {\n        description = this.unwrap(data.description.description);\n      }\n      const textOne = data.strapline_text_one;\n      const textOneStr = this.unwrap(textOne);\n      const textOneEndpoint = textOne.endpoint;\n      if (textOneEndpoint && textOneStr) {\n        const authorTextRun = textOne.runs?.find((run) => {\n          const runEndpoint = this.parseEndpoint((run as TextRun).endpoint, EndpointType.Browse);\n          return EndpointHelper.isChannelEndpoint(runEndpoint);\n        }) as TextRun;\n        const authorEndpoint = authorTextRun.endpoint;\n        const channelId = this.parseEndpoint(authorEndpoint, EndpointType.Browse)?.payload.browseId;\n        if (channelId) {\n          channel = {\n            type: 'channel',\n            channelId,\n            name: textOneStr,\n            endpoint\n          };\n        }\n      }\n      const primarySubtitle = this.unwrap(data.subtitle);\n      const secondSubtitle = this.unwrap(data.second_subtitle);\n      if (primarySubtitle) {\n        subtitles.push(primarySubtitle);\n      }\n      if (secondSubtitle) {\n        subtitles.push(secondSubtitle);\n      }\n      thumbnail = this.parseThumbnail(data.thumbnail?.contents);\n      // Type\n      type = EndpointHelper.isAlbumEndpoint(originatingEndpoint) ? 'album' : \n        EndpointHelper.isPodcastEndpoint(originatingEndpoint) ? 'podcast' : 'playlist';\n      // Play endpoint\n      const playButton = data.buttons.find((button) => button.is(YTNodes.MusicPlayButton));\n      if (playButton) {\n        endpoint = this.parseEndpoint(playButton.endpoint, EndpointType.Watch);\n      }\n      // Shuffle endpoint\n      const mdhMenu = data.buttons.find((button) => button.is(YTNodes.Menu));\n      if (mdhMenu?.is(YTNodes.Menu)) {\n        for (const menuItem of mdhMenu.items) {\n          if (menuItem.is(YTNodes.MenuNavigationItem) && menuItem.icon_type === 'MUSIC_SHUFFLE') {\n            const mdhShufflePlayEndpoint = this.parseEndpoint(menuItem.endpoint, EndpointType.Watch);\n            const mdhShufflePlayText = this.unwrap(menuItem.text);\n            if (mdhShufflePlayEndpoint && mdhShufflePlayText) {\n              shufflePlay = {\n                type: 'endpointLink',\n                title: mdhShufflePlayText,\n                endpoint: mdhShufflePlayEndpoint,\n                icon: menuItem.icon_type\n              };\n            }\n          }\n        }\n      }\n    }\n    // Generic - MusicHeader (e.g. Explore -> Charts)\n    else if (data.is(YTNodes.MusicHeader)) {\n      type = 'generic';\n      title = this.unwrap(data.title);\n    }\n\n    if (type && title) {\n      const result: PageElement.Header = {\n        type,\n        title\n      };\n\n      if (subtitles.length > 0) {\n        result.subtitles = subtitles;\n      }\n      if (description) {\n        result.description = description;\n      }\n      if (thumbnail) {\n        result.thumbnail = thumbnail;\n      }\n      if (endpoint) {\n        result.endpoint = endpoint;\n      }\n\n      if (type === 'album' && channel) {\n        const albumHeader = result as PageElement.AlbumHeader;\n        albumHeader.artist = channel;\n      }\n\n      if (type === 'playlist') {\n        const playlistHeader = result as PageElement.PlaylistHeader;\n        if (channel) {\n          playlistHeader.author = channel;\n        }\n        if (shufflePlay) {\n          playlistHeader.shufflePlay = shufflePlay;\n        }\n      }\n      return result;\n    }\n\n    return null;\n  }\n\n  static #parseContentToSection(data: SectionContent | null, originatingEndpointType: EndpointType): PageElement.Section | null {\n    if (!data) {\n      return null;\n    }\n\n    const nestedSectionTypes = [\n      YTNodes.SectionList.type,\n      YTNodes.ItemSection.type,\n      YTNodes.Grid.type,\n      YTNodes.MusicShelf.type,\n      YTNodes.MusicCardShelf.type,\n      YTNodes.MusicCarouselShelf.type,\n      YTNodes.MusicPlaylistShelf.type\n    ];\n\n    const section: PageElement.Section = {\n      type: 'section',\n      items: []\n    };\n\n    const ytNode = this.#isYTNode(data) ? data : null;\n\n    if (ytNode?.is(YTNodes.MusicPlaylistShelf)) {\n      section.playlistId = ytNode.playlist_id;\n    }\n\n    const __parseContentItem = (contentItem: NestedSection | YTHelpers.YTNode) => {\n      if (nestedSectionTypes.includes(contentItem.type)) {\n        // Nested section\n        const parsedNested = this.#parseContentToSection(contentItem as NestedSection, originatingEndpointType);\n        if (parsedNested) {\n          section.items.push(parsedNested);\n        }\n      }\n      else {\n        const parsedItem = this.parseContentItem(contentItem as YTHelpers.YTNode);\n        if (parsedItem && parsedItem.type !== 'automix') {\n          section.items.push(parsedItem);\n        }\n      }\n    };\n\n    const dataHeader = data.header;\n    const dataContents = this.unwrap(data.contents) || this.unwrap(data.items);\n\n    // Filters\n    const sectionFilters: PageElement.Option[] = [];\n\n    // -- filters from ChipCloud\n    const dataHeaderChipClouds = this.#findNodesByType(dataHeader, YTNodes.ChipCloud);\n    if (dataHeaderChipClouds.length > 0) {\n      const dataContentChipCloudFilters = dataHeaderChipClouds.reduce<PageElement.Option[]>((result, chipCloud) => {\n        const filter = this.#convertChipCloudToOption(chipCloud);\n        if (filter) {\n          result.push(filter);\n        }\n        return result;\n      }, []);\n      sectionFilters.push(...dataContentChipCloudFilters);\n    }\n\n    // -- filters from dropdowns\n    // (`data.subheaders` present in MusicShelf)\n    const dropdowns = this.#findNodesByType(\n      data.subheaders ? [ dataHeader, data.subheaders ] : dataHeader, YTNodes.Dropdown);\n    if (dropdowns.length > 0) {\n      const dropdownFilters = dropdowns.reduce<PageElement.Option[]>((result, dropdown) => {\n        const filter = this.#convertDropdownToOption(dropdown);\n        if (filter) {\n          result.push(filter);\n        }\n        return result;\n      }, []);\n      sectionFilters.push(...dropdownFilters);\n    }\n\n    // -- filters from MusicSortFilterButton\n    const sortFilterButtons = this.#findNodesByType(\n      data.subheaders ? [ dataHeader, data.subheaders ] : dataHeader, YTNodes.MusicSortFilterButton);\n    if (sortFilterButtons.length > 0) {\n      const sortFilters = sortFilterButtons.reduce<PageElement.Option[]>((result, button) => {\n        const filter = this.#convertSortFilterButtonToOption(button);\n        if (filter) {\n          result.push(filter);\n        }\n        return result;\n      }, []);\n      sectionFilters.push(...sortFilters);\n    }\n\n    // Titles\n    const dataTitle = this.unwrap(data.title || data.header?.title);\n    const dataStrapline = this.unwrap(data.header?.strapline);\n    if (dataTitle && dataStrapline) {\n      section.title = dataStrapline;\n      section.subtitle = dataTitle;\n    }\n    else if (dataTitle) {\n      section.title = dataTitle;\n    }\n    else if (dataStrapline) {\n      section.title = dataStrapline;\n    }\n\n    // Buttons\n    const sectionButtons: PageElement.Button[] = [];\n\n    // -- buttons from MusicCarouselShelfBasicHeader\n    if (this.#isYTNode(dataHeader) && dataHeader.is(YTNodes.MusicCarouselShelfBasicHeader)) {\n      if (dataHeader.more_content) {\n        const text = dataHeader.more_content.text;\n        const endpoint = this.parseEndpoint(dataHeader.more_content.endpoint);\n        if (text && endpoint) {\n          sectionButtons.push({\n            type: 'button',\n            text,\n            endpoint,\n            placement: 'bottom'\n          });\n        }\n      }\n      else if (dataHeader.end_icons?.[0]) {\n        const icon = dataHeader.end_icons[0];\n        const endpoint = this.parseEndpoint(icon.endpoint);\n        if (icon.tooltip && endpoint) {\n          sectionButtons.push({\n            type: 'button',\n            text: icon.tooltip,\n            endpoint,\n            placement: 'bottom'\n          });\n        }\n      }\n    }\n\n    // -- buttons from MusicShelf ('more content' link at bottom, like 'Show All' in search results)\n    if (ytNode?.is(YTNodes.MusicShelf)) {\n      if (ytNode.endpoint && ytNode.bottom_text) {\n        const text = this.unwrap(ytNode.bottom_text);\n        const endpoint = this.parseEndpoint(ytNode.endpoint);\n        if (text && endpoint) {\n          sectionButtons.push({\n            type: 'button',\n            text,\n            endpoint,\n            placement: 'bottom'\n          });\n        }\n      }\n      if (ytNode.bottom_button) {\n        const endpoint = this.parseEndpoint(ytNode.bottom_button.endpoint);\n        if (ytNode.bottom_button.text && endpoint) {\n          sectionButtons.push({\n            type: 'button',\n            text: ytNode.bottom_button.text,\n            endpoint,\n            placement: 'bottom'\n          });\n        }\n      }\n    }\n\n    if (dataContents) {\n      if (Array.isArray(dataContents)) {\n        for (const contentItem of dataContents) {\n          __parseContentItem(contentItem);\n        }\n\n        if (!ytNode?.is(YTNodes.Grid) && dataContents.some((item) =>\n          this.#isYTNode(item) && (\n            item.is(YTNodes.MusicResponsiveListItem) ||\n            item.is(YTNodes.PlaylistPanelVideo) ||\n            item.is(YTNodes.PlaylistPanelVideoWrapper)\n          ))) {\n          section.itemLayout = 'list';\n        }\n        else if (dataContents.some((item) => item.is(YTNodes.MusicTwoRowItem))) {\n          section.itemLayout = 'grid';\n        }\n\n      }\n      else {\n        __parseContentItem(dataContents);\n      }\n    }\n\n    // MusicCardShelf ('Top Results' in search)\n    // Need to set correct title and extract the main item of the shelf.\n    if (ytNode?.is(YTNodes.MusicCardShelf) && ytNode.header?.is(YTNodes.MusicCardShelfHeaderBasic)) {\n      const title = this.unwrap(ytNode.header.title);\n      if (title) {\n        section.title = title;\n      }\n      const mainItem = this.#extractMainItemFromMusicCardShelf(ytNode);\n      if (mainItem) {\n        section.items.unshift(mainItem);\n      }\n      section.itemLayout = 'grid';\n    }\n\n    // Finalize section contents\n    if (section.items.length > 0) {\n      // Filter out Watch endpoint items that have no thumbnail (e.g. 'Shuffle All'),\n      // And move them to `section.buttons[]`.\n      const filteredItems: PageElement.Section['items'] = [];\n      for (const item of section.items) {\n        if (item.type === 'endpointLink' && EndpointHelper.isType(item.endpoint, EndpointType.Watch) && !item.thumbnail) {\n          sectionButtons.push({\n            type: 'button',\n            text: item.title,\n            endpoint: item.endpoint,\n            placement: 'top'\n          });\n        }\n        else {\n          filteredItems.push(item);\n        }\n      }\n      section.items = filteredItems;\n    }\n\n    // Continuation\n    if (data.continuation) {\n      let endpointType;\n      switch (originatingEndpointType) {\n        case EndpointType.Browse:\n          endpointType = EndpointType.BrowseContinuation;\n          break;\n        case EndpointType.Search:\n          endpointType = EndpointType.SearchContinuation;\n          break;\n        default:\n          endpointType = originatingEndpointType;\n      }\n      if (endpointType === EndpointType.BrowseContinuation ||\n        endpointType === EndpointType.SearchContinuation) {\n        section.continuation = {\n          type: 'continuation',\n          endpoint: {\n            type: endpointType,\n            payload: {\n              token: data.continuation\n            }\n          }\n        };\n      }\n    }\n\n    if (sectionFilters.length > 0) {\n      section.filters = sectionFilters;\n    }\n\n    if (sectionButtons.length > 0) {\n      section.buttons = sectionButtons;\n    }\n\n    if (!section.continuation && section.items.length > 0 && section.buttons && section.buttons.length > 0) {\n      // If there is only one button that has Browse / Search endpoint,\n      // Assume it refers to 'more content' and move it to `section.continuation`.\n      const browseEndpointButtons = section.buttons.filter(\n        (button) => EndpointHelper.isType(button.endpoint,\n          EndpointType.Browse,\n          EndpointType.Search,\n          EndpointType.BrowseContinuation,\n          EndpointType.SearchContinuation));\n      if (browseEndpointButtons.length === 1) {\n        const moreContentButton = browseEndpointButtons[0];\n        section.continuation = {\n          type: 'continuation',\n          text: moreContentButton.text,\n          endpoint: moreContentButton.endpoint as any\n        };\n        section.buttons = section.buttons.filter((button) => button !== moreContentButton);\n        if (section.buttons.length === 0) {\n          delete section.buttons;\n        }\n      }\n    }\n\n    const hasFilters = section.filters && section.filters.length > 0;\n    const hasButtons = section.buttons && section.buttons.length > 0;\n\n    if (section.items.length > 0 || hasFilters ||\n      hasButtons || section.title || section.continuation) {\n      return section;\n    }\n\n    return null;\n  }\n\n  static parseContentItem(data?: YTHelpers.YTNode | null): SectionItem | ContentItem.Automix | null {\n    if (!data) {\n      return null;\n    }\n\n    if (data.is(YTNodes.PlaylistPanelVideoWrapper)) {\n      const target = data.primary || data.counterpart?.first();\n      return target ? this.parseContentItem(target) : null;\n    }\n\n    // MusicItem (song / video)\n    let musicItemType: 'video' | 'song' | null = null;\n    if ((data.is(YTNodes.MusicResponsiveListItem) ||\n      data.is(YTNodes.MusicTwoRowItem)) &&\n      (data.item_type === 'song' || data.item_type === 'video' || data.item_type === 'non_music_track')) {\n      musicItemType = data.item_type === 'video' ? 'video' : 'song';\n    }\n    else if (data.is(YTNodes.PlaylistPanelVideo)) {\n      musicItemType = 'video';\n    }\n    else if (data.is(YTNodes.MusicMultiRowListItem)) {\n      musicItemType = 'song';\n    }\n\n    if (musicItemType) {\n      let videoId: string | undefined,\n        title: string | null = null,\n        subtitle: string | null = null,\n        endpoint: WatchEndpoint | null = null,\n        radioEndpoint: WatchEndpoint | null = null,\n        thumbnail: string | null = null,\n        trackNumber: string | null = null,\n        duration: number | null = null,\n        album: ContentItem.MusicItem['album'] | null = null;\n\n      if (data.is(YTNodes.MusicResponsiveListItem)) {\n        videoId = data.id;\n        title = this.unwrap(data.title);\n        subtitle = this.unwrap(data.subtitle);\n        endpoint = this.parseEndpoint(this.unwrap(data.overlay?.content?.endpoint), EndpointType.Watch);\n        radioEndpoint = this.findRadioEndpoint(data);\n        thumbnail = this.parseThumbnail(data.thumbnails);\n        trackNumber = this.unwrap(data.index);\n        duration = data.duration?.seconds || null;\n        if (data.album) {\n          const albumEndpoint = this.parseEndpoint(data.album.endpoint, EndpointType.Browse);\n          album = {\n            title: data.album.name\n          };\n          if (data.album.id) {\n            album.albumId = data.album.id;\n          }\n          if (albumEndpoint) {\n            album.endpoint = albumEndpoint;\n          }\n        }\n      }\n      if (data.is(YTNodes.MusicTwoRowItem)) {\n        videoId = data.id;\n        title = this.unwrap(data.title);\n        subtitle = this.unwrap(data.subtitle);\n        endpoint = this.parseEndpoint(data.endpoint, EndpointType.Watch);\n        radioEndpoint = this.findRadioEndpoint(data);\n        thumbnail = this.parseThumbnail(data.thumbnail);\n      }\n      if (data.is(YTNodes.PlaylistPanelVideo)) {\n        videoId = data.video_id;\n        title = this.unwrap(data.title);\n        endpoint = this.parseEndpoint(data.endpoint, EndpointType.Watch);\n        radioEndpoint = this.findRadioEndpoint(data);\n        thumbnail = this.parseThumbnail(data.thumbnail);\n        if (data.album) {\n          album = {\n            title: data.album.name\n          };\n          if (data.album.id) {\n            album.albumId = data.album.id;\n          }\n          const albumEndpoint = this.parseEndpoint(data.album.endpoint, EndpointType.Browse);\n          if (albumEndpoint) {\n            album.endpoint = albumEndpoint;\n          }\n          if (data.album.year) {\n            album.year = data.album.year;\n          }\n        }\n      }\n      if (data.is(YTNodes.MusicMultiRowListItem)) {\n        endpoint = this.parseEndpoint(data.on_tap, EndpointType.Watch);\n        title = this.unwrap(data.title);\n        subtitle = this.unwrap(data.subtitle);\n        thumbnail = this.parseThumbnail(data.thumbnail?.contents);\n        videoId = endpoint?.payload.videoId;\n      }\n\n      if (endpoint && videoId && title) {\n        const result: ContentItem.MusicItem = {\n          type: musicItemType,\n          videoId,\n          title,\n          endpoint\n        };\n\n        if (subtitle) {\n          result.subtitle = subtitle;\n        }\n        if (thumbnail) {\n          result.thumbnail = thumbnail;\n        }\n        if (trackNumber !== null) {\n          result.trackNumber = trackNumber;\n        }\n        if (duration !== null) {\n          result.duration = duration;\n        }\n        if (album) {\n          result.album = album;\n        }\n        if (radioEndpoint) {\n          result.radioEndpoint = radioEndpoint;\n        }\n\n        const artists = this.#parseArtists(data);\n        if (artists && artists.channels.length > 0) {\n          result.artists = artists.channels;\n          result.artistText = artists.text;\n        }\n\n        return result;\n      }\n\n      return null;\n    }\n\n    // Artist\n    const isArtist = (data.is(YTNodes.MusicResponsiveListItem) ||\n      data.is(YTNodes.MusicTwoRowItem)) &&\n      data.item_type === 'artist';\n    const isPrivateArtist = isArtist && data.id?.startsWith('FEmusic_library_privately_owned_artist');\n\n    if (isArtist && !isPrivateArtist) {\n      let name: string | null = null,\n        thumbnail: string | null = null;\n\n      if (data.is(YTNodes.MusicResponsiveListItem)) {\n        name = this.unwrap(data.name);\n        thumbnail = this.parseThumbnail(data.thumbnails);\n      }\n      if (data.is(YTNodes.MusicTwoRowItem)) {\n        name = this.unwrap(data.title);\n        thumbnail = this.parseThumbnail(data.thumbnail);\n      }\n\n      const endpoint = this.parseEndpoint(data.endpoint, EndpointType.Browse);\n\n      if (name && endpoint) {\n        const result: ContentItem.Channel = {\n          type: 'channel',\n          channelId: data.id,\n          name,\n          endpoint\n        };\n\n        const subtitle = this.unwrap(data.subtitle);\n        if (subtitle) {\n          result.subtitle = subtitle;\n        }\n\n        if (thumbnail) {\n          result.thumbnail = thumbnail;\n        }\n\n        return result;\n      }\n\n      return null;\n    }\n\n    // Album / Playlist\n    let musicFolderType: 'album' | 'playlist' | 'podcast_show' | null = null,\n      browseEndpoint: BrowseEndpoint | null = null;\n\n    if ((data.is(YTNodes.MusicResponsiveListItem) ||\n      data.is(YTNodes.MusicTwoRowItem)) &&\n      (data.item_type === 'album' || data.item_type === 'playlist' || data.item_type === 'podcast_show')) {\n      musicFolderType = data.item_type;\n    }\n\n    if (musicFolderType) {\n      const mData = data as YTNodes.MusicResponsiveListItem & YTNodes.MusicTwoRowItem;\n      browseEndpoint = this.parseEndpoint(mData.endpoint, EndpointType.Browse);\n\n      let watchEndpoint: WatchEndpoint | null = null;\n      const overlay = mData.overlay || mData.thumbnail_overlay;\n      if (overlay?.content?.endpoint) {\n        watchEndpoint = this.parseEndpoint(overlay.content.endpoint, EndpointType.Watch);\n      }\n\n      const title = this.unwrap(mData.title);\n\n      if (browseEndpoint && watchEndpoint && title) {\n        const subtitle = this.unwrap(mData.subtitle);\n        const year = mData.year;\n        const songCount = mData.song_count;\n        const totalDuration = mData.duration?.seconds;\n\n        let result: ContentItem.Album | ContentItem.Playlist | ContentItem.Podcast;\n        if (musicFolderType === 'album') {\n          const artists = this.#parseArtists(data);\n          const album: ContentItem.Album = {\n            type: 'album',\n            albumId: mData.id || browseEndpoint.payload.browseId,\n            title,\n            artists: artists?.channels || [],\n            artistText: artists?.text || '',\n            endpoint: watchEndpoint,\n            browseEndpoint\n          };\n          if (year) {\n            album.year = year;\n          }\n          result = album;\n        }\n        else if (musicFolderType === 'playlist') {\n          const playlist: ContentItem.Playlist = {\n            type: 'playlist',\n            playlistId: mData.id || browseEndpoint.payload.browseId,\n            title,\n            endpoint: watchEndpoint,\n            browseEndpoint\n          };\n\n          const authors = this.#parseArtists(data);\n          if (authors && authors.channels.length > 0) {\n            playlist.author = {\n              type: 'channel',\n              name: authors.channels[0].name,\n              channelId: authors.channels[0].channelId,\n              thumbnail: authors.channels[0].thumbnail,\n              endpoint: authors.channels[0].endpoint\n            };\n            playlist.authorText = authors.text;\n          }\n\n          result = playlist;\n        }\n        else {\n          const podcast: ContentItem.Podcast = {\n            type: 'podcast',\n            title,\n            endpoint: watchEndpoint,\n            browseEndpoint\n          };\n          result = podcast;\n        }\n\n        if (subtitle) {\n          result.subtitle = subtitle;\n        }\n        if (songCount) {\n          result.songCount = songCount;\n        }\n        if (totalDuration !== undefined) {\n          result.totalDuration = totalDuration;\n        }\n\n        let thumbnail: string | null = null;\n        if (data.is(YTNodes.MusicResponsiveListItem)) {\n          thumbnail = this.parseThumbnail(data.thumbnails);\n        }\n        if (data.is(YTNodes.MusicTwoRowItem)) {\n          thumbnail = this.parseThumbnail(data.thumbnail);\n        }\n        if (thumbnail) {\n          result.thumbnail = thumbnail;\n        }\n\n        return result;\n      }\n\n      return null;\n    }\n\n    // Endpoint link from MusicNavigationButton\n    if (data.is(YTNodes.MusicNavigationButton)) {\n      const endpoint = this.parseEndpoint(data.endpoint, EndpointType.Browse);\n      if (endpoint) {\n        const result: ContentItem.EndpointLink = {\n          type: 'endpointLink',\n          title: data.button_text,\n          endpoint\n        };\n        if (data.icon_type) {\n          result.icon = data.icon_type;\n        }\n        return result;\n      }\n\n      return null;\n    }\n\n    // Endpoint link from MusicResponsiveListItem / MusicTwoRowItem\n    if ((data.is(YTNodes.MusicResponsiveListItem) ||\n      data.is(YTNodes.MusicTwoRowItem)) &&\n      (data.item_type === 'endpoint' || data.item_type === 'library_artist' ||\n        isPrivateArtist)) {\n      const endpoint = this.parseEndpoint(data.endpoint);\n      if (endpoint) {\n        let title: string | null = null,\n          thumbnail: string | null = null;\n        if (data.is(YTNodes.MusicResponsiveListItem)) {\n          title = this.unwrap(data.title || data.name);\n          thumbnail = this.parseThumbnail(data.thumbnails);\n        }\n        else {\n          title = this.unwrap(data.title);\n          thumbnail = this.parseThumbnail(data.thumbnail);\n        }\n        const subtitle = this.unwrap(data.subtitle);\n\n        if (title) {\n          const result: ContentItem.EndpointLink = {\n            type: 'endpointLink',\n            title,\n            endpoint\n          };\n\n          if (subtitle) {\n            result.subtitle = subtitle;\n          }\n          if (thumbnail) {\n            result.thumbnail = thumbnail;\n          }\n\n          return result;\n        }\n      }\n\n      return null;\n    }\n\n    // Endpoint link from DidYouMean\n    if (data.is(YTNodes.DidYouMean)) {\n      const endpoint = this.parseEndpoint(data.endpoint, EndpointType.Browse);\n      if (endpoint) {\n        const result: ContentItem.EndpointLink = {\n          type: 'endpointLink',\n          title: `${this.unwrap(data.text)} ${this.unwrap(data.corrected_query)}`,\n          endpoint,\n          icon: 'YTMUSIC_DID_YOU_MEAN' // Our own icon type\n        };\n        return result;\n      }\n\n      return null;\n    }\n\n    // Endpoint link from ShowingResultsFor\n    if (data.is(YTNodes.ShowingResultsFor)) {\n      const endpoint = this.parseEndpoint(data.original_query_endpoint, EndpointType.Browse);\n      if (endpoint) {\n        const result: ContentItem.EndpointLink = {\n          type: 'endpointLink',\n          title: `${this.unwrap(data.showing_results_for)} ${this.unwrap(data.corrected_query)\n          }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;${this.unwrap(data.search_instead_for)} ${this.unwrap(data.original_query)}`,\n          endpoint,\n          icon: 'YTMUSIC_SHOWING_RESULTS_FOR' // Our own icon type\n        };\n        return result;\n      }\n      return null;\n    }\n\n    // Automix\n    if (data.is(YTNodes.AutomixPreviewVideo)) {\n      const endpoint = this.parseEndpoint(data.playlist_video?.endpoint, EndpointType.Watch);\n      if (endpoint) {\n        const result: ContentItem.Automix = {\n          type: 'automix',\n          endpoint\n        };\n        return result;\n      }\n\n      return null;\n    }\n\n    return null;\n  }\n\n  static #parseArtists(data: YTHelpers.YTNode): { channels: ContentItem.Channel[], text: string } | null {\n\n    const _findRunIndexByArtistEndpointCheck = (runs?: (YTMisc.TextRun | YTMisc.EmojiRun)[]) => {\n      // Find position of text run with artist endpoint\n      let runIndex = runs ? runs.findIndex((run) => {\n        if (run instanceof YTMisc.TextRun) {\n          const runEndpoint = this.parseEndpoint(run.endpoint, EndpointType.Browse);\n          return EndpointHelper.isChannelEndpoint(runEndpoint);\n        }\n        return false;\n      }) : -1;\n      // Get the seperator before it\n      let separator = runs?.[runIndex - 1]?.text.trim();\n      // Move back until we reach '•' or beginning\n      while (separator && separator !== '•') {\n        runIndex -= 2;\n        separator = runs?.[runIndex - 1]?.text.trim();\n      }\n      return runIndex;\n    };\n\n    const _extractFromTextRuns = (runs?: (YTMisc.TextRun | YTMisc.EmojiRun)[], startIndex = 0) => {\n      const artists: ContentItem.Channel[] = [];\n      let concat = '';\n      if (runs) {\n        for (let i = startIndex; i < runs.length; i += 2) {\n          const run = runs[i];\n          const runEndpoint = run instanceof YTMisc.TextRun ? this.parseEndpoint(run.endpoint, EndpointType.Browse) : null;\n          const result: ContentItem.Channel = {\n            type: 'channel',\n            name: run.text\n          };\n          const channelId = EndpointHelper.isChannelEndpoint(runEndpoint) ? runEndpoint.payload.browseId : null;\n          if (channelId) {\n            result.channelId = channelId;\n          }\n          artists.push(result);\n          concat += result.name;\n          const nextRun = runs[i + 1];\n          if (!nextRun || nextRun.text.trim() === '•') {\n            break;\n          }\n          concat += nextRun.text; // Add separator between artist names\n        }\n      }\n      return {\n        channels: artists,\n        text: concat\n      };\n    };\n\n    const _reduceGeneric = (arr: ContentItem.Channel[], data: any) => {\n      if (data.name) {\n        const artist: ContentItem.Channel = {\n          type: 'channel',\n          name: data.name\n        };\n        if (data.channel_id) {\n          artist.channelId = data.channel_id;\n        }\n        arr.push(artist);\n      }\n      return arr;\n    };\n\n    if (data.is(YTNodes.MusicDetailHeader)) {\n      // Innertube does not parse multiple artists in MusicDetailHeader and also requires\n      // Artists to have endpoints. We need to do our own parsing here.\n      // However, I am not sure if the parsing logic here is foolproof or will break other\n      // Aspects of Innertube, so I shall refrain from pushing it to Innertube repo.\n\n      // We are going to extract artists from the subtitle, which looks something like this:\n      // [type (e.g. album, playlist)]•[artist1]&[artist2]•[year]•...\n      // The '&' is locale-specific. e.g. 'và' for Vietnamese.\n      // So to get artists, we parse each run of the subtitle starting from the one after the first dot,\n      // Until we arrive at the next '•'.\n\n      return _extractFromTextRuns(data.subtitle?.runs, 2);\n    }\n\n    if (((data.is(YTNodes.MusicResponsiveListItem) || data.is(YTNodes.MusicTwoRowItem)) &&\n      (data.item_type === 'song' || data.item_type === 'video')) || data.is(YTNodes.MusicCardShelf)) {\n\n      // Note that there is no checking of item type for MusicCardShelf. We rely on\n      // #extractMainItemFromMusicCardShelf() to call this correctly.\n\n      if (data.is(YTNodes.MusicResponsiveListItem) ||\n        data.is(YTNodes.MusicCardShelf)) {\n        // If language is set to non-English, then videos will most likely be misidentified as songs, since Innertube\n        // Determines type by checking the second flex column elements for '* views'. This is fine from the plugins'\n        // Perspective, as songs and videos are handled the same way.\n        // However, there are some artists that do not have an endpoint and Innertube will leave them out from\n        // The artists / authors array. We would have to do our own parsing.\n\n        // Songs appear to have the following columns:\n        // [title]    [artist1]&[artist2]     [album]\n\n        // Videos appear to have the following:\n        // [title]    [artist1]&[artist2] • [n views*] *Optional\n\n        // Yet in search results, songs and videos are presented as two-line stack:\n        // [title]\n        // [type (song / video)] • [artist1]&[artist2] • [album or views] • [duration]\n\n        // Let's try our best to parse from these different formats. Note that `subtitle`\n        // Refers to the second column (or second line for search results).\n\n        const runIndex = _findRunIndexByArtistEndpointCheck(data.subtitle?.runs);\n\n        if (runIndex >= 0) {\n          // Get artists starting from runIndex\n          return _extractFromTextRuns(data.subtitle?.runs, runIndex);\n        }\n\n        // No text runs with artist endpoint - count dots and guess\n        const dotCount = data.subtitle?.runs?.filter((run) => run.text.trim() === '•').length || 0;\n        if (dotCount > 2) { // Three or more dots - get artists starting from text run after first dot\n          return _extractFromTextRuns(data.subtitle?.runs, 2);\n        }\n\n        // Get artists from beginning\n        return _extractFromTextRuns(data.subtitle?.runs);\n      }\n\n      // MusicTwoRowItem:\n      // If language is set to non-English, then songs will most likely be misidentified as videos, since Innertube\n      // Determines type by checking if first element is 'Song'. This is fine from the plugins' perspective, as\n      // Songs and videos are handled the same way.\n      // However, there are some artists that do not have an endpoint and Innertube will leave them out from\n      // The artists / authors array. So again, we would have to do our own parsing.\n\n      // Songs appear to have the following subtitle:\n      // 'Song' (locale-specific) • [artist1]&[artist2]   --> endpoint/musicVideoType: 'MUSIC_VIDEO_TYPE_ATV'\n\n      // Videos appear to have the following:\n      // [artist1]&[artist2] • 'n views*'  *Optional - locale specific  --> endpoint/musicVideoType: 'MUSIC_VIDEO_TYPE_OMV / UGC...'\n\n      // Here we go...\n\n      const runIndex = _findRunIndexByArtistEndpointCheck(data.subtitle?.runs);\n\n      if (runIndex >= 0) {\n        // Get artists starting from runIndex\n        return _extractFromTextRuns(data.subtitle?.runs, runIndex);\n      }\n\n      // No text runs with artist endpoint - rely on music_video_type as last resort\n      const watchEndpoint = this.parseEndpoint(data.endpoint, EndpointType.Watch);\n      if (watchEndpoint?.musicVideoType === 'MUSIC_VIDEO_TYPE_ATV') {\n        return _extractFromTextRuns(data.subtitle?.runs, 2);\n      }\n\n      return _extractFromTextRuns(data.subtitle?.runs);\n    }\n\n    if (data.is(YTNodes.PlaylistPanelVideo)) {\n      // Similar drill to MusicResponsiveListItem\n      const runIndex = _findRunIndexByArtistEndpointCheck(data.long_by_line_text.runs);\n\n      if (runIndex >= 0) {\n        // Get artists starting from runIndex\n        return _extractFromTextRuns(data.long_by_line_text.runs, runIndex);\n      }\n\n      // No text runs with artist endpoint - get from beginning\n      return _extractFromTextRuns(data.long_by_line_text.runs);\n    }\n\n    if (data.hasKey('artists') && Array.isArray(data.artists) && data.artists.length > 0) {\n      const artists = data.artists.reduce<ContentItem.Channel[]>((result, a) => _reduceGeneric(result, a), []);\n      return {\n        channels: artists,\n        text: artists.map((artist) => artist.name).join(' & ')\n      };\n    }\n    else if (data.hasKey('authors') && Array.isArray(data.authors) && data.authors.length > 0) {\n      const authors = data.authors.reduce<ContentItem.Channel[]>((result, a) => _reduceGeneric(result, a), []);\n      return {\n        channels: authors,\n        text: authors.map((author) => author.name).join(' & ')\n      };\n    }\n    else if (data.hasKey('author')) {\n      if (data.author && typeof data.author === 'object' && data.author.name) {\n        const author: ContentItem.Channel = {\n          type: 'channel',\n          name: data.author.name\n        };\n        if (data.author.channel_id) {\n          author.channelId = data.author.channel_id;\n        }\n        return {\n          channels: [ author ],\n          text: author.name\n        };\n      }\n      else if (typeof data.author === 'string') {\n        const author: ContentItem.Channel = {\n          type: 'channel',\n          name: data.author\n        };\n        return {\n          channels: [ author ],\n          text: data.author\n        };\n      }\n    }\n\n    return null;\n  }\n\n  static findRadioEndpoint(data: YTHelpers.YTNode): WatchEndpoint | null {\n    if ((data.is(YTNodes.MusicResponsiveListItem) ||\n      data.is(YTNodes.MusicTwoRowItem) ||\n      data.is(YTNodes.PlaylistPanelVideo)) && data.menu) {\n\n      const menu = this.unwrap(data.menu);\n      if (menu && menu.is(YTNodes.Menu)) {\n        for (const item of menu.items) {\n          if (item.is(YTNodes.MenuNavigationItem) && item.icon_type === 'MIX') {\n            const endpoint = this.parseEndpoint(item.endpoint, EndpointType.Watch);\n            if (endpoint) {\n              return endpoint;\n            }\n          }\n        }\n      }\n    }\n    return null;\n  }\n\n  static unwrap(data?: 'N/A' | ''): null;\n  static unwrap(data?: string | YTMisc.Text): string | null;\n  static unwrap(data?: YTHelpers.SuperParsedResult<YTHelpers.YTNode> | null): YTHelpers.ObservedArray<YTHelpers.YTNode> | YTHelpers.YTNode | null;\n  static unwrap<T>(data?: T): T | null;\n  static unwrap(data?: any) {\n    if (typeof data === 'object' && data?.constructor.name === 'SuperParsedResult') {\n      const spr = data as YTHelpers.SuperParsedResult; \n      if (spr.is_null) {\n        return null;\n      }\n      else if (spr.is_array) {\n        return spr.array();\n      }\n      else if (spr.is_node) {\n        return spr.item();\n      }\n\n      return data;\n    }\n    else if (typeof data === 'string' || data instanceof YTMisc.Text) {\n      const s = (typeof data === 'string') ? data : data.toString();\n      return (s === 'N/A' || s === '') ? null : s;\n    }\n\n    return data;\n  }\n\n  static parseThumbnail(data?: YTMisc.Thumbnail[], resize: { width: number, height: number } = { width: 701, height: 701 }): string | null {\n    const thumbnail = data?.[0];\n    if (!thumbnail?.url) {\n      return null;\n    }\n    let url = thumbnail.url;\n    if (url.startsWith('//')) {\n      url = `https:${url}`;\n    }\n\n    const w = thumbnail.width;\n    const h = thumbnail.height;\n    const param = `=w${w}-h${h}`;\n    if (url.indexOf(param)) {\n      url = url.replace(param, `=w${resize.width}-h${resize.height}`);\n    }\n\n    return url;\n  }\n\n  static parseEndpoint(data?: YTNodes.NavigationEndpoint | null): BrowseEndpoint | BrowseContinuationEndpoint | SearchEndpoint | WatchEndpoint | null;\n  static parseEndpoint<K extends EndpointType[]>(data?: YTNodes.NavigationEndpoint | null, ...requireTypes: K): EndpointOf<K[number]> | null;\n  static parseEndpoint<K extends EndpointType[]>(data?: YTNodes.NavigationEndpoint | null, ...requireTypes: K) {\n    if (!data) {\n      return null;\n    }\n\n    const __checkType = (endpoint: Endpoint | null) => {\n      if (!endpoint) {\n        return null;\n      }\n\n      if (requireTypes.length === 0) {\n        return endpoint;\n      }\n\n      return EndpointHelper.isType(endpoint, ...requireTypes) ? endpoint as EndpointOf<K[number]> : null;\n    };\n\n    const __buildBrowseEndpoint = (payloadData?: Record<string, any>): BrowseEndpoint | null => {\n      const src = payloadData || data?.payload;\n      if (src) {\n        const result: BrowseEndpoint = {\n          type: EndpointType.Browse,\n          payload: __createPayload<BrowseEndpoint>([ 'browseId', 'params', 'formData' ], src)\n        };\n        const pageType = src?.browseEndpointContextSupportedConfigs?.browseEndpointContextMusicConfig?.pageType;\n        if (pageType) {\n          result.pageType = pageType;\n        }\n        return result;\n      }\n\n      return null;\n    };\n\n    const __createPayload = <V extends Endpoint>(fields: (keyof V['payload'])[], payloadData?: Record<string, any>) => {\n      const payload: V['payload'] = {};\n      const src = payloadData || data?.payload;\n      if (src) {\n        for (const field of fields) {\n          if (src[field] !== undefined) {\n            payload[field] = src[field];\n          }\n        }\n      }\n      return payload;\n    };\n\n    switch (data?.metadata?.api_url) {\n      case '/browse':\n      case 'browse':\n        return __checkType(__buildBrowseEndpoint());\n\n      case '/search':\n      case 'search': {\n        const searchEndpoint: SearchEndpoint = {\n          type: EndpointType.Search,\n          payload: __createPayload<SearchEndpoint>([ 'query', 'params' ])\n        };\n        return __checkType(searchEndpoint);\n      }\n      case '/player':\n      case 'next':\n      case '/next': {\n        const watchEndpoint: WatchEndpoint = {\n          type: EndpointType.Watch,\n          payload: __createPayload<WatchEndpoint>([ 'videoId', 'playlistId', 'params', 'index', 'playlistSetVideoId' ])\n        };\n        const musicVideoType = data.payload?.watchEndpointMusicSupportedConfigs?.watchEndpointMusicConfig?.musicVideoType;\n        if (musicVideoType) {\n          watchEndpoint.musicVideoType = musicVideoType;\n        }\n        return __checkType(watchEndpoint);\n      }\n      default:\n    }\n\n    const commands = data?.payload?.commands;\n\n    if (commands) {\n      const cmdBE = commands.find((c: any) => c.browseEndpoint);\n      if (cmdBE) {\n        return __checkType(__buildBrowseEndpoint(cmdBE.browseEndpoint));\n      }\n\n      const cmdRC = commands.find((c: any) => c.browseSectionListReloadEndpoint?.continuation?.reloadContinuationData?.continuation);\n      if (cmdRC) {\n        const bcEndpoint: BrowseContinuationEndpoint = {\n          type: EndpointType.BrowseContinuation,\n          isReloadContinuation: true,\n          payload: {\n            token: cmdRC.browseSectionListReloadEndpoint.continuation.reloadContinuationData.continuation\n          }\n        };\n        return __checkType(bcEndpoint);\n      }\n\n      const cmdFB = commands?.find((c: any) => c.musicBrowseFormBinderCommand?.browseEndpoint);\n      if (cmdFB) {\n        return __checkType(\n          __buildBrowseEndpoint(cmdFB.musicBrowseFormBinderCommand.browseEndpoint));\n      }\n    }\n\n    // ChipCloudChip in Artist -> More Singles / Albums\n    if (data?.payload?.continuation?.reloadContinuationData?.continuation) {\n      const bcEndpoint: BrowseContinuationEndpoint = {\n        type: EndpointType.BrowseContinuation,\n        isReloadContinuation: true,\n        payload: {\n          token: data.payload.continuation.reloadContinuationData.continuation\n        }\n      };\n      return __checkType(bcEndpoint);\n    }\n\n    return null;\n  }\n\n  static #findNodesByType<T extends YTHelpers.YTNode, K extends YTHelpers.YTNodeConstructor<T>>(\n    data: any, type: K, excludeSearchFields: string[] = [], maxDepth = 5, currentDepth = 0): InstanceType<K>[] {\n\n    if (!data || typeof data !== 'object' || currentDepth > maxDepth) {\n      return [];\n    }\n\n    const unwrapped = this.unwrap(data);\n    if (!unwrapped) {\n      return [];\n    }\n\n    if (Array.isArray(unwrapped) && currentDepth + 1 <= maxDepth) {\n      return unwrapped.reduce((results, item) => {\n        results.push(...this.#findNodesByType(item, type, excludeSearchFields, maxDepth, currentDepth + 1));\n        return results;\n      }, []);\n    }\n\n    const ytNode = this.#isYTNode(unwrapped) ? unwrapped : null;\n    if (ytNode?.is(type)) {\n      return [ ytNode ];\n    }\n    return Object.keys(unwrapped)\n      .filter((key) => !excludeSearchFields.includes(key) && key !== 'type')\n      .map((key) => unwrapped[key])\n      .reduce((results, value) => {\n        results.push(...this.#findNodesByType(value, type, excludeSearchFields, maxDepth, currentDepth + 1));\n        return results;\n      }, []);\n  }\n\n  static #convertChipCloudToOption(chipCloud: YTNodes.ChipCloud): PageElement.Option | null {\n    const optionValues = chipCloud.chips.reduce<PageElement.Option['optionValues']>((result, chip) => {\n      let endpoint: BrowseEndpoint | BrowseContinuationEndpoint | SearchEndpoint | null;\n      let selected = chip.is_selected;\n      let isReset = false;\n      // Unwrap the text even if it is a string, so that 'N/A' (converted by Innertube\n      // From empty text in YT response data) becomes `null`.\n      let text = this.unwrap(chip.text);\n\n      const chipEndpointTypes = [\n        EndpointType.Browse,\n        EndpointType.BrowseContinuation,\n        EndpointType.Search\n      ] as const;\n      if (chip.is_selected && chip.deselect_endpoint) {\n        endpoint = this.parseEndpoint(chip.deselect_endpoint, ...chipEndpointTypes);\n      }\n      else {\n        endpoint = this.parseEndpoint(chip.endpoint, ...chipEndpointTypes);\n      }\n\n      // Reset chip has no text. Set our own text for it and ensure it's not 'selected'.\n      if (!text) {\n        text = ytmusic.getI18n('YTMUSIC_RESET');\n        selected = false;\n        isReset = true;\n      }\n      if (endpoint) {\n        result.push({\n          text,\n          endpoint,\n          selected,\n          isReset\n        });\n      }\n      return result;\n    }, []);\n\n    if (optionValues.length > 0) {\n      return {\n        type: 'option',\n        subtype: 'chipCloud',\n        optionValues\n      };\n    }\n\n    return null;\n  }\n\n\n  static #convertDropdownToOption(dropdown: YTNodes.Dropdown): PageElement.Option | null {\n    const optionValues = dropdown.entries.reduce<PageElement.Option['optionValues']>((result, entry) => {\n      const endpoint = this.parseEndpoint(entry.endpoint, EndpointType.Browse, EndpointType.BrowseContinuation);\n      if (endpoint) {\n        result.push({\n          text: entry.label,\n          endpoint,\n          selected: entry.selected\n        });\n      }\n      return result;\n    }, []);\n\n    if (optionValues.length > 0) {\n      return {\n        type: 'option',\n        subtype: 'dropdown',\n        title: dropdown.label,\n        optionValues\n      };\n    }\n\n    return null;\n  }\n\n  static #convertSortFilterButtonToOption(button: YTNodes.MusicSortFilterButton): PageElement.Option | null {\n    const menu = button.menu;\n    if (!menu) {\n      return null;\n    }\n\n    const title = this.unwrap(menu.title);\n    const menuItems = menu.options.filter((item) => item.is(YTNodes.MusicMultiSelectMenuItem));\n    const optionValues = menuItems.reduce<PageElement.Option['optionValues']>((result, item) => {\n      if (item.is(YTNodes.MusicMultiSelectMenuItem)) {\n        const endpoint = this.parseEndpoint(item.endpoint, EndpointType.Browse, EndpointType.BrowseContinuation);\n        // For MusicSortFilterButton, endpoint can be `null`.\n        result.push({\n          text: item.title,\n          endpoint,\n          selected: item.selected\n        });\n      }\n      return result;\n    }, []);\n\n    if (menu && optionValues.length > 0 && title) {\n      return {\n        type: 'option',\n        subtype: 'sortFilter',\n        title,\n        optionValues\n      };\n    }\n\n    return null;\n  }\n\n  static #extractMainItemFromMusicCardShelf(data: YTNodes.MusicCardShelf) {\n    if (data.title) {\n      const title = this.unwrap(data.title);\n      const endpoint = this.parseEndpoint(data.title.endpoint, EndpointType.Browse, EndpointType.Watch);\n      const isBrowseEndpoint = endpoint?.type === EndpointType.Browse;\n      const isWatchEndpoint = endpoint?.type === EndpointType.Watch;\n\n      if (!title || (!isBrowseEndpoint && !isWatchEndpoint)) {\n        return null;\n      }\n\n      const watchEndpoint = this.parseEndpoint(data.thumbnail_overlay?.content?.endpoint, EndpointType.Watch);\n      const subtitle = this.unwrap(data.subtitle);\n\n      let thumbnail: string | null = null;\n      if (data.thumbnail?.contents[0]) {\n        thumbnail = this.parseThumbnail([ data.thumbnail.contents[0] ]);\n      }\n\n      let mainItem;\n      if (isBrowseEndpoint && endpoint.pageType === 'MUSIC_PAGE_TYPE_ALBUM' && watchEndpoint) {\n        let artists: ContentItem.Channel[] = [];\n        let artistText = '';\n        if (data.subtitle?.runs) {\n          artists = data.subtitle.runs.reduce<ContentItem.Channel[]>((result, run, index) => {\n            if (run instanceof YTMisc.TextRun) {\n              const endpoint = this.parseEndpoint(run.endpoint, EndpointType.Browse);\n              if (endpoint?.pageType === 'MUSIC_PAGE_TYPE_ARTIST') {\n                result.push({\n                  type: 'channel',\n                  name: run.text,\n                  endpoint\n                });\n                if (artistText === '') {\n                  artistText = run.text;\n                }\n                else {\n                  const separator = data.subtitle?.runs?.[index - 1]?.text || ' & ';\n                  artistText += separator + run.text;\n                }\n              }\n            }\n            return result;\n          }, []);\n        }\n        const album: ContentItem.Album = {\n          type: 'album',\n          albumId: endpoint.payload.browseId,\n          title,\n          artists,\n          artistText,\n          endpoint: watchEndpoint,\n          browseEndpoint: endpoint\n        };\n        mainItem = album;\n      }\n\n      else if (isBrowseEndpoint && endpoint.pageType === 'MUSIC_PAGE_TYPE_ARTIST') {\n        const artist: ContentItem.Channel = {\n          type: 'channel',\n          channelId: endpoint.payload.browseId,\n          name: title,\n          endpoint\n        };\n        mainItem = artist;\n      }\n\n      else if (isWatchEndpoint && endpoint.musicVideoType &&\n        EndpointHelper.isType(watchEndpoint, EndpointType.Watch) && watchEndpoint.payload.videoId) {\n        let type: 'song' | 'video';\n        switch (endpoint.musicVideoType) {\n          case 'MUSIC_VIDEO_TYPE_ATV':\n            type = 'song';\n            break;\n          default:\n            type = 'video';\n        }\n        const musicItem: ContentItem.MusicItem = {\n          type,\n          title,\n          videoId: watchEndpoint.payload.videoId,\n          endpoint: watchEndpoint\n        };\n        const albumRun = data.subtitle.runs?.find((run: any) => EndpointHelper.isAlbumEndpoint(run.endpoint));\n        const albumTitle = albumRun ? this.unwrap(albumRun.text) : null;\n        if (albumRun && albumTitle) {\n          musicItem.album = {\n            title: albumRun.text\n          };\n          const albumEndpoint = this.parseEndpoint((albumRun as YTMisc.TextRun).endpoint, EndpointType.Browse);\n          if (albumEndpoint) {\n            musicItem.album.albumId = albumEndpoint.payload.browseId;\n            musicItem.album.endpoint = albumEndpoint;\n          }\n        }\n        const artists = this.#parseArtists(data);\n        if (artists && artists.channels.length > 0) {\n          musicItem.artists = artists.channels;\n          musicItem.artistText = artists.text;\n        }\n        mainItem = musicItem;\n      }\n\n      else {\n        const endpointLink: ContentItem.EndpointLink = {\n          type: 'endpointLink',\n          title,\n          endpoint\n        };\n        mainItem = endpointLink;\n      }\n\n      if (subtitle) {\n        mainItem.subtitle = subtitle;\n      }\n      if (thumbnail) {\n        mainItem.thumbnail = thumbnail;\n      }\n\n      return mainItem;\n    }\n\n    return null;\n  }\n\n  static #isYTNode(el: any): el is YTHelpers.YTNode {\n    if (!el || typeof el !== 'object') {\n      return false;\n    }\n    return ['is', 'as', 'hasKey', 'key'].every((fn) => Reflect.has(el, fn) && typeof el[fn] === 'function');\n  }\n\n  static parseLyrics(response: IParsedResponse): MetadataLyrics | null {\n    // Try parse synced lyrics\n    // Note TimedLyrics is introspected by Innertube\n    const syncedLyricsRawData = response.contents_memo?.get('TimedLyrics')?.[0];\n    if (syncedLyricsRawData) {\n      if (syncedLyricsRawData.hasKey('lyrics_data') && Reflect.has(syncedLyricsRawData.lyrics_data, 'timedLyricsData')) {\n        const timedLyricsData = syncedLyricsRawData.lyrics_data.timedLyricsData;\n        if (timedLyricsData && typeof timedLyricsData === 'object') {\n          const isValid = Object.values(timedLyricsData).every((line: any) =>\n            typeof line === 'object' &&\n            Reflect.has(line, 'lyricLine') &&\n            Reflect.has(line, 'cueRange') &&\n            typeof line.cueRange === 'object' &&\n            Reflect.has(line.cueRange, 'startTimeMilliseconds'));\n          if (isValid) {\n            const lines: MetadataSyncedLyrics['lines'] = Object.values(timedLyricsData).map((line: any) => ({\n              text: line.lyricLine,\n              start: line.cueRange.startTimeMilliseconds,\n              end: line.cueRange.endTimeMilliseconds\n            }));\n            return {\n              type: 'synced',\n              lines\n            };\n          }\n        }\n      }\n      throw Error('Invalid synced lyrics data');\n    }\n    // Try parse plain lyrics\n    const shelf = response.contents_memo?.getType(YTNodes.MusicDescriptionShelf).first();\n    if (shelf) {\n      const lyricsText = shelf.description.text;\n      if (lyricsText) {\n        const lines = lyricsText.split('\\n');\n        return {\n          type: 'plain',\n          lines\n        };\n      }\n    }\n\n    return null;\n  }\n}\n"]}