{"version":3,"file":"PlayController.js","sourceRoot":"","sources":["../../../../src/lib/controller/play/PlayController.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport libQ from 'kew';\n\nimport ytmusic from '../../YTMusicContext';\nimport Model, { ModelType } from '../../model';\nimport { EndpointType } from '../../types/Endpoint';\nimport { kewToJSPromise } from '../../util';\nimport { ExplodedTrackInfo } from '../browse/view-handlers/ExplodableViewHandler';\nimport { QueueItem } from '../browse/view-handlers/ExplodableViewHandler';\nimport { MusicItemView } from '../browse/view-handlers/MusicItemViewHandler';\nimport ViewHelper from '../browse/view-handlers/ViewHelper';\nimport ExplodeHelper from '../../util/ExplodeHelper';\nimport { ContentItem } from '../../types';\nimport MusicItemPlaybackInfo from '../../types/MusicItemPlaybackInfo';\nimport AutoplayHelper from '../../util/AutoplayHelper';\nimport AutoplayContext from '../../types/AutoplayContext';\nimport { AlbumView } from '../browse/view-handlers/AlbumViewHandler';\nimport { GenericView } from '../browse/view-handlers/GenericViewHandler';\nimport EndpointHelper from '../../util/EndpointHelper';\n\ninterface MpdState {\n  status: 'play' | 'stop' | 'pause';\n  seek: number;\n  uri: string;\n}\n\nexport default class PlayController {\n\n  #mpdPlugin: any;\n  #autoplayListener: (() => void) | null;\n  #lastPlaybackInfo: {\n    track: QueueItem;\n    position: number;\n  };\n\n  constructor() {\n    this.#mpdPlugin = ytmusic.getMpdPlugin();\n    this.#autoplayListener = null;\n  }\n\n  #addAutoplayListener() {\n    if (!this.#autoplayListener) {\n      this.#autoplayListener = () => {\n        this.#mpdPlugin.getState().then((state: MpdState) => {\n          if (state.status === 'stop') {\n            this.#handleAutoplay();\n            this.#removeAutoplayListener();\n          }\n        });\n      };\n      this.#mpdPlugin.clientMpd.on('system-player', this.#autoplayListener);\n    }\n  }\n\n  #removeAutoplayListener() {\n    if (this.#autoplayListener) {\n      this.#mpdPlugin.clientMpd.removeListener('system-player', this.#autoplayListener);\n      this.#autoplayListener = null;\n    }\n  }\n\n  /**\n   * Track uri:\n   * - ytmusic/[song|video]@@explodeTrackData={...}\n   *\n   */\n  async clearAddPlayTrack(track: QueueItem) {\n    ytmusic.getLogger().info(`[ytmusic-play] clearAddPlayTrack: ${track.uri}`);\n\n    const {videoId, info: playbackInfo} = await this.#getPlaybackInfoFromUri(track.uri);\n\n    if (!playbackInfo) {\n      throw Error(`Could not obtain playback info for: ${videoId})`);\n    }\n\n    const stream = playbackInfo.stream;\n    if (!stream?.url) {\n      ytmusic.toast('error', ytmusic.getI18n('YTMUSIC_ERR_NO_STREAM', track.name));\n      throw Error(`Stream not found for: ${videoId}`);\n    }\n\n    track.title = playbackInfo.title || track.title;\n    track.name = playbackInfo.title || track.title;\n    track.artist = playbackInfo.artist?.name || track.artist;\n    track.album = playbackInfo.album?.title || track.album;\n    track.albumart = playbackInfo.thumbnail || track.albumart;\n    track.duration = playbackInfo.duration;\n\n    if (stream.bitrate) {\n      track.samplerate = stream.bitrate;\n    }\n\n    this.#lastPlaybackInfo = {\n      track,\n      position: ytmusic.getStateMachine().getState().position\n    };\n\n    const safeStreamUrl = stream.url.replace(/\"/g, '\\\\\"');\n    await this.#doPlay(safeStreamUrl, track);\n\n    if (ytmusic.getConfigValue('autoplay')) {\n      this.#addAutoplayListener();\n    }\n\n    if (ytmusic.getConfigValue('addToHistory')) {\n      try {\n        playbackInfo.addToHistory();\n      }\n      catch (error) {\n        ytmusic.getLogger().error(ytmusic.getErrorMessage(`[ytmusic-play] Error: could not add to history (${videoId}): `, error));\n      }\n    }\n  }\n\n  // Returns kew promise!\n  stop() {\n    this.#removeAutoplayListener();\n    ytmusic.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.stop();\n  }\n\n  // Returns kew promise!\n  pause() {\n    ytmusic.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.pause();\n  }\n\n  // Returns kew promise!\n  resume() {\n    ytmusic.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.resume();\n  }\n\n  // Returns kew promise!\n  seek(position: number) {\n    ytmusic.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.seek(position);\n  }\n\n  // Returns kew promise!\n  next() {\n    ytmusic.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.next();\n  }\n\n  // Returns kew promise!\n  previous() {\n    ytmusic.getStateMachine().setConsumeUpdateService(undefined);\n    return ytmusic.getStateMachine().previous();\n  }\n\n  #getExplodedTrackInfoFromUri(uri: string): ExplodedTrackInfo | null {\n    if (!uri) {\n      return null;\n    }\n\n    const trackView = ViewHelper.getViewsFromUri(uri)[1] as MusicItemView;\n\n    if (!trackView || (trackView.name !== 'video' && trackView.name !== 'song') ||\n      !EndpointHelper.isType(trackView.explodeTrackData?.endpoint, EndpointType.Watch)) {\n      return null;\n    }\n\n    return trackView.explodeTrackData;\n  }\n\n  async #getPlaybackInfoFromUri(uri: QueueItem['uri']): Promise<{videoId: string; info: MusicItemPlaybackInfo | null}> {\n    const endpoint = this.#getExplodedTrackInfoFromUri(uri)?.endpoint;\n    const videoId = endpoint?.payload?.videoId;\n\n    if (!videoId) {\n      throw Error(`Invalid track uri: ${uri}`);\n    }\n\n    const model = Model.getInstance(ModelType.MusicItem);\n    return {\n      videoId,\n      info: await model.getPlaybackInfo(endpoint)\n    };\n  }\n\n  #doPlay(streamUrl: string, track: QueueItem) {\n    const mpdPlugin = this.#mpdPlugin;\n\n    return kewToJSPromise(mpdPlugin.sendMpdCommand('stop', [])\n      .then(() => {\n        return mpdPlugin.sendMpdCommand('clear', []);\n      })\n      .then(() => {\n        return mpdPlugin.sendMpdCommand(`addid \"${this.#appendTrackTypeToStreamUrl(streamUrl)}\"`, []);\n      })\n      .then((addIdResp: { Id: string }) => this.#mpdAddTags(addIdResp, track))\n      .then(() => {\n        ytmusic.getStateMachine().setConsumeUpdateService('mpd', true, false);\n        return mpdPlugin.sendMpdCommand('play', []);\n      }));\n  }\n\n  #appendTrackTypeToStreamUrl(url: string) {\n    /**\n     * Fool MPD plugin to return correct `trackType` in `parseTrackInfo()` by adding\n     * track type to URL query string as a dummy param.\n     */\n    return `${url}&t.YouTube`;\n  }\n\n  // Returns kew promise!\n  #mpdAddTags(mpdAddIdResponse: { Id: string }, track: QueueItem) {\n    const songId = mpdAddIdResponse?.Id;\n    if (songId !== undefined) {\n      const cmds = [];\n      cmds.push({\n        command: 'addtagid',\n        parameters: [ songId, 'title', track.title ]\n      });\n      if (track.album) {\n        cmds.push({\n          command: 'addtagid',\n          parameters: [ songId, 'album', track.album ]\n        });\n      }\n      cmds.push({\n        command: 'addtagid',\n        parameters: [ songId, 'artist', track.artist ]\n      });\n\n      return this.#mpdPlugin.sendMpdCommandArray(cmds);\n    }\n    return libQ.resolve();\n  }\n\n  async #handleAutoplay() {\n    const lastPlayedQueueIndex = this.#findLastPlayedTrackQueueIndex();\n    if (lastPlayedQueueIndex < 0) {\n      return;\n    }\n\n    const stateMachine = ytmusic.getStateMachine(),\n      state = stateMachine.getState(),\n      isLastTrack = stateMachine.getQueue().length - 1 === lastPlayedQueueIndex,\n      currentPositionChanged = state.position !== lastPlayedQueueIndex; // True if client clicks on another item in the queue\n\n    const noAutoplayConditions = !ytmusic.getConfigValue('autoplay') || currentPositionChanged || !isLastTrack || state.random || state.repeat || state.repeatSingle;\n    const getAutoplayItemsPromise = noAutoplayConditions ? Promise.resolve(null) : this.#getAutoplayItems();\n\n    if (!noAutoplayConditions) {\n      ytmusic.toast('info', ytmusic.getI18n('YTMUSIC_AUTOPLAY_FETCH'));\n    }\n\n    const items = await getAutoplayItemsPromise;\n    if (items && items.length > 0) {\n      // Add items to queue and play\n      const clearQueue = ytmusic.getConfigValue('autoplayClearQueue');\n      if (clearQueue) {\n        stateMachine.clearQueue();\n      }\n      stateMachine.addQueueItems(items).then((result: { firstItemIndex: number }) => {\n        if (items.length > 1) {\n          ytmusic.toast('success', ytmusic.getI18n('YTMUSIC_AUTOPLAY_ADDED', items.length));\n        }\n        else {\n          ytmusic.toast('success', ytmusic.getI18n('YTMUSIC_AUTOPLAY_ADDED_SINGLE', items[0].title));\n        }\n        stateMachine.play(result.firstItemIndex);\n      });\n    }\n    else if (!noAutoplayConditions) {\n      ytmusic.toast('info', ytmusic.getI18n('YTMUSIC_AUTOPLAY_NO_ITEMS'));\n    }\n  }\n\n  #findLastPlayedTrackQueueIndex() {\n    if (!this.#lastPlaybackInfo) {\n      return -1;\n    }\n\n    const queue = ytmusic.getStateMachine().getQueue();\n    const trackUri = this.#lastPlaybackInfo.track.uri;\n    const endIndex = this.#lastPlaybackInfo.position;\n\n    for (let i = endIndex; i >= 0; i--) {\n      if (queue[i]?.uri === trackUri) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  async #getAutoplayItems(): Promise<QueueItem[]> {\n    const explodedTrackInfo = this.#getExplodedTrackInfoFromUri(this.#lastPlaybackInfo?.track?.uri);\n    const autoplayContext = explodedTrackInfo?.autoplayContext;\n\n    if (autoplayContext) {\n      ytmusic.getLogger().info(`[ytmusic-play] Obtaining autoplay videos from endpoint: ${JSON.stringify(autoplayContext.fetchEndpoint)}`);\n    }\n    else {\n      ytmusic.getLogger().info('[ytmusic-play] No autoplay context provided');\n    }\n\n    const endpointModel = Model.getInstance(ModelType.Endpoint);\n    const contents = autoplayContext ? await endpointModel.getContents(autoplayContext.fetchEndpoint) : null;\n\n    const autoplayItems: ContentItem.MusicItem[] = [];\n    let newAutoplayContext: AutoplayContext | null = null;\n\n    if (contents) {\n      let items;\n      if (contents.isContinuation) { // WatchContinuationContent\n        items = contents.items;\n      }\n      else { // WatchContent\n        items = contents.playlist?.items;\n      }\n      if (items) {\n        const continueFromVideoId = autoplayContext?.fetchEndpoint.payload.videoId;\n        let currentIndex = 0;\n        if (continueFromVideoId) {\n          currentIndex = items?.findIndex((item) => item.videoId === continueFromVideoId) || 0;\n        }\n        if (currentIndex < 0) {\n          currentIndex = 0;\n        }\n        const itemsAfter = items?.slice(currentIndex + 1).filter((item) => item.type === 'video' || item.type === 'song') || [];\n        autoplayItems.push(...itemsAfter);\n        ytmusic.getLogger().info(`[ytmusic-play] Obtained ${itemsAfter.length} items for autoplay from current playlist`);\n        if (itemsAfter.length > 0) {\n          newAutoplayContext = AutoplayHelper.getAutoplayContext(contents);\n        }\n      }\n\n      if (autoplayItems.length <= 5 && !contents.isContinuation && contents.automix) {\n        const automixContents = await endpointModel.getContents(contents.automix.endpoint);\n        const items = automixContents?.playlist?.items;\n        if (items) {\n          autoplayItems.push(...items);\n          ytmusic.getLogger().info(`[ytmusic-play] Obtained ${items.length} items for autoplay from automix`);\n          if (items.length > 0) {\n            newAutoplayContext = AutoplayHelper.getAutoplayContext(automixContents);\n          }\n        }\n      }\n    }\n\n    if (autoplayItems.length === 0) {\n      // Fetch from radio endpoint as last resort.\n      const playbackInfo = await this.#getPlaybackInfoFromUri(this.#lastPlaybackInfo.track.uri);\n      const radioEndpoint = playbackInfo.info?.radioEndpoint;\n      if (radioEndpoint && (!autoplayContext || radioEndpoint.payload.playlistId !== autoplayContext.fetchEndpoint.payload.playlistId)) {\n        const radioContents = await endpointModel.getContents(radioEndpoint);\n        const items = radioContents?.playlist?.items;\n        if (items) {\n          const currentIndex = items.findIndex((item) => item.videoId === playbackInfo.videoId) || 0;\n          const itemsAfter = items.slice(currentIndex + 1).filter((item) => item.type === 'video' || item.type === 'song') || [];\n          autoplayItems.push(...itemsAfter);\n          ytmusic.getLogger().info(`[ytmusic-play] Obtained ${itemsAfter.length} items for autoplay from radio`);\n          if (items.length > 0) {\n            newAutoplayContext = AutoplayHelper.getAutoplayContext(radioContents);\n          }\n        }\n      }\n    }\n\n    if (newAutoplayContext) {\n      for (const item of autoplayItems) {\n        item.autoplayContext = newAutoplayContext;\n      }\n    }\n\n    return autoplayItems\n      .map((item) => ExplodeHelper.getExplodedTrackInfoFromMusicItem(item))\n      .map((item) => ExplodeHelper.createQueueItemFromExplodedTrackInfo(item));\n  }\n\n  async prefetch(track: QueueItem) {\n    const prefetchEnabled = ytmusic.getConfigValue('prefetch');\n    if (!prefetchEnabled) {\n      /**\n       * Volumio doesn't check whether `prefetch()` is actually performed or\n       * successful (such as inspecting the result of the function call) -\n       * it just sets its internal state variable `prefetchDone`\n       * to `true`. This results in the next track being skipped in cases\n       * where prefetch is not performed or fails. So when we want to signal\n       * that prefetch is not done, we would have to directly falsify the\n       * statemachine's `prefetchDone` variable.\n       */\n      ytmusic.getLogger().info('[ytmusic-play] Prefetch disabled');\n      ytmusic.getStateMachine().prefetchDone = false;\n      return;\n    }\n    let streamUrl;\n    try {\n      const { videoId, info: playbackInfo } = await this.#getPlaybackInfoFromUri(track.uri);\n      streamUrl = playbackInfo?.stream?.url;\n      if (!streamUrl) {\n        throw Error(`Stream not found for: '${videoId}'`);\n      }\n    }\n    catch (error: any) {\n      ytmusic.getLogger().error(`[ytmusic-play] Prefetch failed: ${error}`);\n      ytmusic.getStateMachine().prefetchDone = false;\n      return;\n    }\n\n    const mpdPlugin = this.#mpdPlugin;\n    return kewToJSPromise(mpdPlugin.sendMpdCommand(`addid \"${this.#appendTrackTypeToStreamUrl(streamUrl)}\"`, [])\n      .then((addIdResp: { Id: string }) => this.#mpdAddTags(addIdResp, track))\n      .then(() => {\n        ytmusic.getLogger().info(`[ytmusic-play] Prefetched and added track to MPD queue: ${track.name}`);\n        return mpdPlugin.sendMpdCommand('consume 1', []);\n      }));\n  }\n\n  async getGotoUri(type: 'album' | 'artist', uri: QueueItem['uri']): Promise<string | null> {\n    const playbackInfo = (await this.#getPlaybackInfoFromUri(uri))?.info;\n    if (!playbackInfo) {\n      return null;\n    }\n\n    if (type === 'album' && playbackInfo.album.albumId) {\n      const targetView: AlbumView = {\n        name: 'album',\n        endpoints: {\n          browse: {\n            type: EndpointType.Browse,\n            payload: {\n              browseId: playbackInfo.album.albumId\n            }\n          },\n          // `watch` endpoint is actually not necessary in GoTo context, but required by AlbumView.\n          watch: {\n            type: EndpointType.Watch,\n            payload: {\n              playlistId: playbackInfo.album.albumId\n            }\n          }\n        }\n      };\n      return `ytmusic/${ViewHelper.constructUriSegmentFromView(targetView)}`;\n    }\n\n    if (type === 'artist' && playbackInfo.artist.channelId) {\n      const targetView: GenericView = {\n        name: 'generic',\n        endpoint: {\n          type: EndpointType.Browse,\n          payload: {\n            browseId: playbackInfo.artist.channelId\n          }\n        }\n      };\n      return `ytmusic/${ViewHelper.constructUriSegmentFromView(targetView)}`;\n    }\n\n    return null;\n  }\n}\n"]}