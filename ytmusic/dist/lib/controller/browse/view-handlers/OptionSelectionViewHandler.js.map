{"version":3,"file":"OptionSelectionViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/OptionSelectionViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import ytmusic from '../../../YTMusicContext';\nimport { PageElement } from '../../../types';\nimport { EndpointType } from '../../../types/Endpoint';\nimport EndpointHelper from '../../../util/EndpointHelper';\nimport BaseViewHandler from './BaseViewHandler';\nimport View, { ContinuationBundle } from './View';\nimport { RenderedList, RenderedPage } from './ViewHandler';\nimport { RendererType } from './renderers';\nimport { RenderedListItem } from './renderers/BaseRenderer';\n\nexport interface OptionSelectionView extends View {\n  name: 'optionSelection',\n  fromContinuationBundle?: '1';\n  continuationBundle?: ContinuationBundle;\n  targetKey?: string;\n  option?: PageElement.Option;\n  genericViewUri?: string;\n}\n\nexport default class OptionSelectionViewHandler extends BaseViewHandler<OptionSelectionView> {\n\n  async browse(): Promise<RenderedPage> {\n    const listData = this.#getListData();\n    const lists: RenderedList[] = [\n      {\n        title: listData.title,\n        availableListViews: [ 'list' ],\n        items: listData.items\n      }\n    ];\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        lists\n      }};\n  }\n\n  #getListData() {\n\n    const view = this.currentView;\n    const renderer = this.getRenderer(RendererType.OptionValue);\n\n    let option, listItems: RenderedListItem[] = [];\n\n    if (view.fromContinuationBundle && view.continuationBundle && view.targetKey) {\n\n      const bundle = view.continuationBundle;\n      // Deep copy\n      const workBundle = JSON.parse(JSON.stringify(bundle));\n      const keyParts = view.targetKey.split('.');\n\n      const __setSelected = (option: PageElement.Option, index: number) => {\n        option.optionValues.forEach((ov, i) => {\n          option.optionValues[i].selected = (i === index);\n        });\n      };\n\n      const __getTargetOption = (_bundle: ContinuationBundle): PageElement.Option | null => {\n        const target = keyParts.reduce<any>((targetValue, key) => targetValue[key], _bundle);\n        if (typeof target === 'object' && target.type === 'option') {\n          return target as PageElement.Option;\n        }\n        return null;\n      };\n\n      option = __getTargetOption(bundle);\n      if (option) {\n        listItems = option.optionValues.reduce<RenderedListItem[]>((result, data, index) => {\n          let extraUriParams: any;\n          if (EndpointHelper.isType(data.endpoint, EndpointType.BrowseContinuation, EndpointType.SearchContinuation)) {\n            const workOption = __getTargetOption(workBundle);\n            __setSelected(workOption as PageElement.Option, index);\n            extraUriParams = {\n              continuationBundle: workBundle\n            };\n          }\n          const listItem = renderer.renderToListItem(data, { extraUriParams });\n          if (listItem) {\n            result.push(listItem);\n          }\n          return result;\n        }, []);\n      }\n    }\n    else if (view.option) {\n      option = view.option as PageElement.Option;\n      listItems = option.optionValues.reduce<RenderedListItem[]>((result, data) => {\n        const listItem = renderer.renderToListItem(data);\n        if (listItem) {\n          result.push(listItem);\n        }\n        return result;\n      }, []);\n    }\n\n    let title = option?.title;\n    if (!title && option && option.subtype === 'chipCloud') {\n      title = ytmusic.getI18n('YTMUSIC_OPTION_SELECT_CHIP_CLOUD_TITLE');\n    }\n\n    return {\n      title,\n      items: listItems\n    };\n\n  }\n}\n"]}