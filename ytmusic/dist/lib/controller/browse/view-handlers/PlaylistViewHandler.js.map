{"version":3,"file":"PlaylistViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/PlaylistViewHandler.ts"],"names":[],"mappings":";;;;;AAAA,0CAA2C;AAI3C,sDAAuD;AACvD,kFAA0D;AAC1D,sFAAwF;AAMxF,MAAqB,mBAAoB,SAAQ,gCAAoC;IAEzE,gBAAgB,CAAC,QACC;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,QAAQ,CAAC,CAAC;QAChD,OAAO,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;IAKS,WAAW,CAAC,OAAiB;QACrC,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC5C,IAAI,OAAO,IAAI,wBAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,uBAAY,CAAC,KAAK,CAAC,EAAE,CAAC;YACnE,qHAAqH;YACrH,OAAO,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;QACjC,CAAC;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AAnBD,sCAmBC","sourcesContent":["import { ModelType } from '../../../model';\nimport { type PageContent, type WatchContent, type WatchContinuationContent } from '../../../types/Content';\nimport {type BrowseContinuationEndpoint, type BrowseEndpoint, type SearchContinuationEndpoint, type SearchEndpoint, type WatchContinuationEndpoint, type WatchEndpoint} from '../../../types/Endpoint';\nimport type Endpoint from '../../../types/Endpoint';\nimport { EndpointType } from '../../../types/Endpoint';\nimport EndpointHelper from '../../../util/EndpointHelper';\nimport MusicFolderViewHandler, { type MusicFolderView } from './MusicFolderViewHandler';\n\nexport interface PlaylistView extends MusicFolderView {\n  name: 'playlist'\n}\n\nexport default class PlaylistViewHandler extends MusicFolderViewHandler<PlaylistView> {\n\n  protected modelGetContents(endpoint: WatchEndpoint | BrowseEndpoint | WatchContinuationEndpoint |\n    BrowseContinuationEndpoint): Promise<PageContent | WatchContent | WatchContinuationContent | null> {\n    const model = this.getModel(ModelType.Playlist);\n    return model.getContents(endpoint);\n  }\n\n  protected getEndpoint(explode: true): WatchEndpoint | BrowseEndpoint | WatchContinuationEndpoint | null;\n  protected getEndpoint(explode: false | undefined): BrowseEndpoint | BrowseContinuationEndpoint | SearchEndpoint | SearchContinuationEndpoint | null;\n  protected getEndpoint(explode?: boolean  ): WatchEndpoint | BrowseEndpoint | WatchContinuationEndpoint | BrowseContinuationEndpoint | SearchEndpoint | SearchContinuationEndpoint | null;\n  protected getEndpoint(explode?: boolean  ): Endpoint | null {\n    const endpoint = super.getEndpoint(explode);\n    if (explode && EndpointHelper.isType(endpoint, EndpointType.Watch)) {\n      // `PlaylistView.endpoints.watch` returns tracks in random order. Remove `params` from endpoint for default ordering.\n      delete endpoint.payload.params;\n    }\n    return endpoint;\n  }\n}\n"]}