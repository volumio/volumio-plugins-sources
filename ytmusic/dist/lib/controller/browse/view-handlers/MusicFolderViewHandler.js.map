{"version":3,"file":"MusicFolderViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/MusicFolderViewHandler.ts"],"names":[],"mappings":";;;;;AAAA,6EAA8C;AAC9C,sDAAmM;AAEnM,kFAA0D;AAC1D,8EAA2E;AAU3E,MAA8B,sBAAkD,SAAQ,4BAAqB;IAEjG,KAAK,CAAC,WAAW;QACzB,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;QAC/D,IAAI,wBAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,uBAAY,CAAC,MAAM,EAAE,uBAAY,CAAC,kBAAkB,CAAC,EAAE;YACzF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YACvD,OAAO,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;SAC1C;QACD,wBAAO,CAAC,KAAK,CAAC,OAAO,EAAE,wBAAO,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC,CAAC;QACxE,MAAM,KAAK,CAAC,wBAAO,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC,CAAC;IAC/D,CAAC;IAKS,WAAW,CAAC,OAA6B;QACjD,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YACjC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;SAC/D;QACD,OAAO,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;CAIF;AA1BD,yCA0BC","sourcesContent":["import ytmusic from '../../../YTMusicContext';\nimport Endpoint, { BrowseContinuationEndpoint, BrowseEndpoint, EndpointType, SearchContinuationEndpoint, SearchEndpoint, WatchContinuationEndpoint, WatchEndpoint } from '../../../types/Endpoint';\nimport { PageContent, WatchContent, WatchContinuationContent } from '../../../types/Content';\nimport EndpointHelper from '../../../util/EndpointHelper';\nimport GenericViewHandler, { GenericViewBase } from './GenericViewHandler';\n\nexport interface MusicFolderView extends GenericViewBase {\n  name: string,\n  endpoints: {\n    browse: BrowseEndpoint;\n    watch: WatchEndpoint;\n  };\n}\n\nexport default abstract class MusicFolderViewHandler<T extends MusicFolderView> extends GenericViewHandler<T> {\n\n  protected async getContents(): Promise<PageContent> {\n    const endpoint = this.assertEndpointExists(this.getEndpoint());\n    if (EndpointHelper.isType(endpoint, EndpointType.Browse, EndpointType.BrowseContinuation)) {\n      const contents = await this.modelGetContents(endpoint);\n      return this.assertPageContents(contents);\n    }\n    ytmusic.toast('error', ytmusic.getI18n('YTMUSIC_ERR_ENDPOINT_INVALID'));\n    throw Error(ytmusic.getI18n('YTMUSIC_ERR_ENDPOINT_INVALID'));\n  }\n\n  protected getEndpoint(explode: true): WatchEndpoint | BrowseEndpoint | WatchContinuationEndpoint | null;\n  protected getEndpoint(explode: false | undefined): BrowseEndpoint | BrowseContinuationEndpoint | SearchEndpoint | SearchContinuationEndpoint | null;\n  protected getEndpoint(explode?: boolean | undefined): WatchEndpoint | BrowseEndpoint | WatchContinuationEndpoint | BrowseContinuationEndpoint | SearchEndpoint | SearchContinuationEndpoint | null;\n  protected getEndpoint(explode?: boolean | undefined): Endpoint | null {\n    const view = this.currentView;\n    if (!view.continuation) {\n      const endpoints = view.endpoints;\n      return (explode ? endpoints.watch : endpoints.browse) || null;\n    }\n    return super.getEndpoint(explode);\n  }\n\n  protected abstract modelGetContents(endpoint: BrowseEndpoint | BrowseContinuationEndpoint | WatchEndpoint |\n    WatchContinuationEndpoint): Promise<WatchContent | WatchContinuationContent | PageContent | null>;\n}\n"]}