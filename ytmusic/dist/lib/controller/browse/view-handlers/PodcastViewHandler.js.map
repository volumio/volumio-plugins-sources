{"version":3,"file":"PodcastViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/PodcastViewHandler.ts"],"names":[],"mappings":";;;;;AAAA,0CAA2C;AAG3C,sFAAwF;AAMxF,MAAqB,kBAAmB,SAAQ,gCAAmC;IAEvE,gBAAgB,CAAC,QACC;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,QAAQ,CAAC,CAAC;QAChD,OAAO,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;CACF;AAPD,qCAOC","sourcesContent":["import { ModelType } from '../../../model';\nimport { type PageContent, type WatchContent, type WatchContinuationContent } from '../../../types/Content';\nimport {type BrowseContinuationEndpoint, type BrowseEndpoint, type WatchContinuationEndpoint, type WatchEndpoint} from '../../../types/Endpoint';\nimport MusicFolderViewHandler, { type MusicFolderView } from './MusicFolderViewHandler';\n\nexport interface PodcastView extends MusicFolderView {\n  name: 'podcast'\n}\n\nexport default class PodcastViewHandler extends MusicFolderViewHandler<PodcastView> {\n\n  protected modelGetContents(endpoint: WatchEndpoint | BrowseEndpoint | WatchContinuationEndpoint |\n    BrowseContinuationEndpoint): Promise<PageContent | WatchContent | WatchContinuationContent | null> {\n    const model = this.getModel(ModelType.Endpoint);\n    return model.getContents(endpoint);\n  }\n}\n"]}