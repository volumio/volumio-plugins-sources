{"version":3,"file":"MusicFolderRenderer.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderers/MusicFolderRenderer.ts"],"names":[],"mappings":";;;;;AAGA,+DAAuC;AACvC,kEAAgF;AAEhF,MAA8B,mBAAgG,SAAQ,sBAAkB;IAEtJ,gBAAgB,CAAC,IAAO;QACtB,MAAM,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,EAAE;YACf,OAAO,IAAI,CAAC;SACb;QACD,OAAO;YACL,OAAO,EAAE,SAAS;YAClB,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,MAAM,EAAE,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC;YACzC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,oBAAU,CAAC,2BAA2B,CAAC,UAAU,CAAC,EAAE;SACzE,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,IAAO;QACpB,MAAM,UAAU,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,EAAE;YACf,OAAO,IAAI,CAAC;SACb;QACD,OAAO;YACL,OAAO,EAAE,SAAS;YAClB,IAAI,EAAE,UAAU;YAChB,GAAG,EAAE,WAAW,oBAAU,CAAC,2BAA2B,CAAC,UAAU,CAAC,EAAE;YACpE,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;YACvC,QAAQ,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC;YACrC,QAAQ,EAAE,IAAI,CAAC,SAAS;SACzB,CAAC;IACJ,CAAC;CAMF;AArCD,sCAqCC","sourcesContent":["import { ContentItem, PageElement } from '../../../../types';\nimport { MusicFolderView } from '../MusicFolderViewHandler';\nimport View from '../View';\nimport ViewHelper from '../ViewHelper';\nimport BaseRenderer, { RenderedHeader, RenderedListItem } from './BaseRenderer';\n\nexport default abstract class MusicFolderRenderer<T extends ContentItem.MusicFolder, K extends PageElement.MusicFolderHeader> extends BaseRenderer<T, K> {\n\n  renderToListItem(data: T): RenderedListItem | null {\n    const targetView = this.getTargetViewForListItem(data);\n    if (!targetView) {\n      return null;\n    }\n    return {\n      service: 'ytmusic',\n      type: 'folder',\n      title: data.title,\n      albumart: data.thumbnail,\n      artist: this.getSubtitleForListItem(data),\n      uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(targetView)}`\n    };\n  }\n\n  renderToHeader(data: K): RenderedHeader | null {\n    const targetView = this.getTargetViewForHeader(data);\n    if (!targetView) {\n      return null;\n    }\n    return {\n      service: 'ytmusic',\n      type: 'playlist',\n      uri: `ytmusic/${ViewHelper.constructUriSegmentFromView(targetView)}`,\n      title: data.title,\n      artist: this.getSubtitleForHeader(data),\n      duration: data.subtitles?.join(' â€¢ '),\n      albumart: data.thumbnail\n    };\n  }\n\n  protected abstract getTargetViewForListItem(data: T): MusicFolderView | null;\n  protected abstract getTargetViewForHeader(data: K): View | null;\n  protected abstract getSubtitleForListItem(data: T): string | null | undefined;\n  protected abstract getSubtitleForHeader(data: K): string | null | undefined;\n}\n"]}