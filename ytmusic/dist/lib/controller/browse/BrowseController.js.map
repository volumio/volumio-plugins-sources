{"version":3,"file":"BrowseController.js","sourceRoot":"","sources":["../../../../src/lib/controller/browse/BrowseController.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,0EAA2C;AAC3C,6EAAqD;AAKrD,4FAAoE;AAEpE,MAAqB,gBAAgB;IAArC;;IAmEA,CAAC;IAjEC;;;;;;OAMG;IACH,KAAK,CAAC,SAAS,CAAC,GAAW;QACzB,wBAAO,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,+BAA+B,GAAG,EAAE,CAAC,CAAC;QAE/D,MAAM,OAAO,GAAG,uBAAA,IAAI,iEAAY,MAAhB,IAAI,EAAa,GAAG,CAAC,CAAC;QACtC,IAAI;YACF,OAAO,MAAM,OAAO,CAAC,MAAM,EAAE,CAAC;SAC/B;QACD,OAAO,KAAU,EAAE;YACjB,wBAAO,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,wBAAO,CAAC,eAAe,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;YACpE,MAAM,KAAK,CAAC;SACb;IACH,CAAC;IAED;;;;;;;;;;;;;;;;OAgBG;IACH,KAAK,CAAC,UAAU,CAAC,GAAW;QAC1B,wBAAO,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,gCAAgC,GAAG,EAAE,CAAC,CAAC;QAEhE,IAAI,CAAC,uBAAa,CAAC,kBAAkB,CAAC,GAAG,CAAC,EAAE;YAC1C,0BAA0B;YAC1B,MAAM,YAAY,GAAG,MAAM,uBAAa,CAAC,uBAAuB,CAAC,GAAG,CAAC,CAAC;YACtE,IAAI,CAAC,YAAY,EAAE;gBACjB,wBAAO,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,2CAA2C,GAAG,EAAE,CAAC,CAAC;gBAC5E,wBAAO,CAAC,KAAK,CAAC,OAAO,EAAE,wBAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;gBACnE,MAAM,KAAK,CAAC,wBAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,CAAC,CAAC;aACzD;YACD,wBAAO,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,qDAAqD,YAAY,EAAE,CAAC,CAAC;YAC9F,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;SACtC;QAED,MAAM,OAAO,GAAG,uBAAA,IAAI,iEAAY,MAAhB,IAAI,EAAa,GAAG,CAAC,CAAC;QACtC,IAAI;YACF,OAAO,MAAM,OAAO,CAAC,OAAO,EAAE,CAAC;SAChC;QACD,OAAO,KAAU,EAAE;YACjB,wBAAO,CAAC,SAAS,EAAE,CAAC,KAAK,CAAC,wBAAO,CAAC,eAAe,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;YACpE,MAAM,KAAK,CAAC;SACb;IACH,CAAC;CAKF;AAnED,mCAmEC;kHAH6B,GAAW;IACrC,OAAO,4BAAkB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;AAC5C,CAAC","sourcesContent":["import ytmusic from '../../YTMusicContext';\nimport ExplodeHelper from '../../util/ExplodeHelper';\nimport BaseViewHandler from './view-handlers/BaseViewHandler';\nimport { QueueItem } from './view-handlers/ExplodableViewHandler';\nimport View from './view-handlers/View';\nimport { RenderedPage } from './view-handlers/ViewHandler';\nimport ViewHandlerFactory from './view-handlers/ViewHandlerFactory';\n\nexport default class BrowseController {\n\n  /*\n   *  Uri follows a hierarchical view structure, starting with 'ytmusic'.\n   *  ytmusic/[viewName@param1=....@param2=...]/[viewName@param1=...@param2=...]\n   *\n   *  See ViewHandlerFactory for defined Views. See corresponding ViewHandler\n   *  for View params.\n   */\n  async browseUri(uri: string): Promise<RenderedPage> {\n    ytmusic.getLogger().info(`[ytmusic-browse] browseUri: ${uri}`);\n\n    const handler = this.#getHandler(uri);\n    try {\n      return await handler.browse();\n    }\n    catch (error: any) {\n      ytmusic.getLogger().error(ytmusic.getErrorMessage('', error, true));\n      throw error;\n    }\n  }\n\n  /**\n   * Explodable uris:\n   * - video[@explodeTrackData=...]\n   * - song[@explodeTrackData=...]\n   * - playlist[@endpoints=...]\n   * - generic[@endpoint=...]\n   *\n   * Legacy (pre v1.0) uris:\n   * - song[@explodeTrackData=...]\n   * - video[@explodeTrackData=...]\n   * - album[@albumId=...]\n   * - artist[@artistId=...]\n   * - playlist[@playlistId=...]\n   * - generic[@endpoint=...] (endpoint must be of type 'watch_playlist')\n   *\n   * Legacy uris will be converted to current format\n   */\n  async explodeUri(uri: string): Promise<QueueItem[]> {\n    ytmusic.getLogger().info(`[ytmusic-browse] explodeUri: ${uri}`);\n\n    if (!ExplodeHelper.validateExplodeUri(uri)) {\n      // Try convert from legacy\n      const convertedUri = await ExplodeHelper.convertLegacyExplodeUri(uri);\n      if (!convertedUri) {\n        ytmusic.getLogger().error(`[ytmusic-browse] Could not explode URI: ${uri}`);\n        ytmusic.toast('error', ytmusic.getI18n('YTMUSIC_ERR_INVALID_URI'));\n        throw Error(ytmusic.getI18n('YTMUSIC_ERR_INVALID_URI'));\n      }\n      ytmusic.getLogger().info(`[ytmusic-browse] Converted legacy explode URI to: ${convertedUri}`);\n      return this.explodeUri(convertedUri);\n    }\n\n    const handler = this.#getHandler(uri);\n    try {\n      return await handler.explode();\n    }\n    catch (error: any) {\n      ytmusic.getLogger().error(ytmusic.getErrorMessage('', error, true));\n      throw error;\n    }\n  }\n\n  #getHandler<V extends View>(uri: string): BaseViewHandler<V> {\n    return ViewHandlerFactory.getHandler(uri);\n  }\n}\n"]}