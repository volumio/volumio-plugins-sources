{"version":3,"file":"ExplodableViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/ExplodableViewHandler.ts"],"names":[],"mappings":";;;;;AACA,gFAAwD;AACxD,wEAAgD;AAsBhD,MAA8B,qBAAsC,SAAQ,yBAAkB;IAE5F,KAAK,CAAC,OAAO;QACX,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,OAAO,EAAE,CAAC;SACX;QAED,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC/C,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;YAC1B,MAAM,SAAS,GAAG,uBAAa,CAAC,oCAAoC,CAAC,MAAM,CAAC,CAAC;YAC7E,OAAO,SAAS,CAAC,CAAC,CAAC,CAAE,SAAS,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC;SACvC;QAED,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,uBAAa,CAAC,oCAAoC,CAAC,IAAI,CAAC,CAAC,CAAC;IACxF,CAAC;CAGF;AAlBD,wCAkBC","sourcesContent":["import Endpoint from '../../../types/Endpoint';\nimport ExplodeHelper from '../../../util/ExplodeHelper';\nimport BaseViewHandler from './BaseViewHandler';\nimport View from './View';\n\nexport interface QueueItem {\n  service: 'youtube2';\n  uri: string;\n  albumart?: string;\n  artist?: string;\n  album?: string;\n  name: string;\n  title: string;\n  duration?: number;\n  samplerate?: string;\n}\n\nexport interface ExplodedTrackInfo {\n  title: string;\n  artist: string;\n  albumart: string;\n  endpoint: Endpoint;\n}\n\nexport default abstract class ExplodableViewHandler<V extends View> extends BaseViewHandler<V> {\n\n  async explode(): Promise<QueueItem[]> {\n    const view = this.currentView;\n    if (view.noExplode) {\n      return [];\n    }\n\n    const tracks = await this.getTracksOnExplode();\n    if (!Array.isArray(tracks)) {\n      const trackInfo = ExplodeHelper.createQueueItemFromExplodedTrackInfo(tracks);\n      return trackInfo ? [ trackInfo ] : [];\n    }\n\n    return tracks.map((info) => ExplodeHelper.createQueueItemFromExplodedTrackInfo(info));\n  }\n\n  protected abstract getTracksOnExplode(): Promise<ExplodedTrackInfo | ExplodedTrackInfo[]>;\n}\n"]}