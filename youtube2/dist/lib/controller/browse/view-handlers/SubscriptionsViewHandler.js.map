{"version":3,"file":"SubscriptionsViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/SubscriptionsViewHandler.ts"],"names":[],"mappings":";;;;;AAAA,+EAA2C;AAC3C,0CAA2C;AAG3C,sDAA4E;AAE5E,8EAA4E;AAE5E,MAAM,qBAAqB,GAAG,CAAC,CAAC;AAMhC,MAAqB,wBAAyB,SAAQ,4BAAqC;IAEzF,WAAW;IACD,KAAK,CAAC,WAAW;QACzB,MAAM,QAAQ,GAAG,CAAC,MAAM,KAAK,CAAC,WAAW,EAAE,CAAC,IAAI,EAAE,CAAC;QAEnD,IAAI,QAAQ,CAAC,cAAc,EAAE,CAAC;YAC5B,OAAO,QAAQ,CAAC;QAClB,CAAC;QAED,oDAAoD;QACpD,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACzD,QAAQ,CAAC,QAAQ,GAAG,EAAE,CAAC;QACzB,CAAC;QAED,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;QACjE,IAAI,OAAO,CAAC,UAAU,EAAE,CAAC;YACvB,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,QAAQ,CAAC,CAAC;YACxD,MAAM,gBAAgB,GAAmB;gBACvC,IAAI,EAAE,uBAAY,CAAC,MAAM;gBACzB,OAAO,EAAE;oBACP,QAAQ,EAAE,YAAY;iBACvB;aACF,CAAC;YACF,MAAM,WAAW,GAAG,MAAM,aAAa,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;YAEtE,IAAI,QAAuB,EACzB,eAAe,GAAG,KAAK,CAAC;YAC1B,IAAI,WAAW,EAAE,QAAQ,EAAE,CAAC;gBAC1B,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,QAAQ,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC;gBAChG,eAAe,GAAG,QAAQ,CAAC,MAAM,GAAG,qBAAqB,CAAC;gBAC1D,IAAI,eAAe,EAAE,CAAC;oBACpB,QAAQ,CAAC,MAAM,CAAC,qBAAqB,GAAG,CAAC,CAAC,CAAC;gBAC7C,CAAC;YACH,CAAC;iBACI,CAAC;gBACJ,QAAQ,GAAG,EAAE,CAAC;YAChB,CAAC;YAED,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACxB,MAAM,aAAa,GAAwB;oBACzC,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,QAAQ;iBAChB,CAAC;gBACF,IAAI,eAAe,EAAE,CAAC;oBACpB,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC;wBACvB,IAAI,EAAE,cAAc;wBACpB,KAAK,EAAE,yBAAG,CAAC,OAAO,CAAC,kBAAkB,CAAC;wBACtC,QAAQ,EAAE,gBAAgB;qBACC,CAAC,CAAC;gBACjC,CAAC;gBACD,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YAC3C,CAAC;QACH,CAAC;QAED,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AAzDD,2CAyDC","sourcesContent":["import yt2 from '../../../YouTube2Context';\nimport { ModelType } from '../../../model';\nimport { type ContentItem, type PageElement } from '../../../types';\nimport { type PageContent } from '../../../types/Content';\nimport { type BrowseEndpoint, EndpointType } from '../../../types/Endpoint';\nimport { type SectionItem } from '../../../types/PageElement';\nimport GenericViewHandler, { type GenericView } from './GenericViewHandler';\n\nconst CHANNEL_DISPLAY_LIMIT = 6;\n\nexport interface SubscriptionsView extends Omit<GenericView, 'name'> {\n  name: 'subscriptions';\n}\n\nexport default class SubscriptionsViewHandler extends GenericViewHandler<SubscriptionsView> {\n\n  // Override\n  protected async getContents(): Promise<PageContent> {\n    const contents = (await super.getContents()) || {};\n\n    if (contents.isContinuation) {\n      return contents;\n    }\n\n    // We should never come to this, but just in case...\n    if (!contents.sections || contents.sections.length === 0) {\n      contents.sections = [];\n    }\n\n    const account = await this.getModel(ModelType.Account).getInfo();\n    if (account.isSignedIn) {\n      const endpointModel = this.getModel(ModelType.Endpoint);\n      const channelsEndpoint: BrowseEndpoint = {\n        type: EndpointType.Browse,\n        payload: {\n          browseId: 'FEchannels'\n        }\n      };\n      const channelList = await endpointModel.getContents(channelsEndpoint);\n\n      let channels: SectionItem[],\n        hasMoreChannels = false;\n      if (channelList?.sections) {\n        channels = this.findAllItemsInSection(channelList?.sections, (item) => item.type === 'channel');\n        hasMoreChannels = channels.length > CHANNEL_DISPLAY_LIMIT;\n        if (hasMoreChannels) {\n          channels.splice(CHANNEL_DISPLAY_LIMIT - 1);\n        }\n      }\n      else {\n        channels = [];\n      }\n\n      if (channels.length > 0) {\n        const insertSection: PageElement.Section = {\n          type: 'section',\n          items: channels\n        };\n        if (hasMoreChannels) {\n          insertSection.items.push({\n            type: 'endpointLink',\n            title: yt2.getI18n('YOUTUBE2_SEE_ALL'),\n            endpoint: channelsEndpoint\n          } as ContentItem.EndpointLink);\n        }\n        contents.sections.unshift(insertSection);\n      }\n    }\n\n    return contents;\n  }\n}\n"]}