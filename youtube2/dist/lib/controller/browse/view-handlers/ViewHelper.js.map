{"version":3,"file":"ViewHelper.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/ViewHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import View from './View';\n\nexport default class ViewHelper {\n\n  static getViewsFromUri(uri: string): View[] {\n    const segments = uri.split('/');\n    if (segments[0] !== 'youtube2') {\n      return [];\n    }\n\n    const result: View[] = [];\n\n    segments.forEach((segment, index) => {\n      let view: View;\n      if (index === 0) { // 'youtube2/...'\n        view = {\n          name: 'root'\n        };\n      }\n      else {\n        view = this.getViewFromUriSegment(segment);\n      }\n      result.push(view);\n    });\n\n    return result;\n  }\n\n  static constructUriSegmentFromView<V extends View>(view: V) {\n    let segment: string;\n    if (view.name === 'root') {\n      segment = 'youtube2';\n    }\n    else {\n      segment = view.name;\n    }\n\n    const skip = [ 'name', 'noExplode' ];\n    Object.keys(view).filter((key) => !skip.includes(key)).forEach((key) => {\n      if (view[key] !== undefined) {\n        if (typeof view[key] === 'object') {\n          segment += `@${key}:o=${encodeURIComponent(JSON.stringify(view[key]))}`;\n        }\n        else {\n          segment += `@${key}=${encodeURIComponent(view[key])}`;\n        }\n      }\n    });\n\n    return segment;\n  }\n\n  static getViewFromUriSegment(segment: string): View {\n    const result: View = {\n      name: ''\n    };\n    segment.split('@').forEach((s) => {\n      const equalIndex = s.indexOf('=');\n      if (equalIndex < 0) {\n        result.name = s;\n      }\n      else {\n        let key = s.substring(0, equalIndex);\n        let value = decodeURIComponent(s.substring(equalIndex + 1));\n\n        if (key.endsWith(':o')) { // `value` is object\n          key = key.substring(0, key.length - 2);\n          value = JSON.parse(value);\n        }\n\n        result[key] = value;\n      }\n    });\n\n    return result;\n  }\n\n  static constructPrevUri(currentView: View, previousViews: View[]) {\n    const segments = previousViews.map(((view) => ViewHelper.constructUriSegmentFromView(view)));\n\n    if (currentView.continuation) {\n      const newView = { ...currentView };\n      delete newView.continuation;\n      delete newView.prevContinuations;\n\n      if (currentView.prevContinuations) {\n        const prevContinuations = [ ...currentView.prevContinuations ];\n        const prevContinuation = prevContinuations.pop();\n        if (prevContinuation && prevContinuations.length > 0) {\n          newView.prevContinuations = prevContinuations;\n        }\n        if (prevContinuation) {\n          newView.continuation = prevContinuation;\n        }\n      }\n\n      if (!newView.continuation) {\n        delete newView.continuationBundle;\n      }\n\n      segments.push(ViewHelper.constructUriSegmentFromView(newView));\n    }\n\n    return segments.join('/');\n  }\n\n  static constructUriFromViews(views: View[]) {\n    const segments = views.map((view) => this.constructUriSegmentFromView(view));\n    return segments.join('/');\n  }\n}\n"]}