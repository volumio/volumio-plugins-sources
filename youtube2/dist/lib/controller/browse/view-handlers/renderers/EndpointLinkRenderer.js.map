{"version":3,"file":"EndpointLinkRenderer.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderers/EndpointLinkRenderer.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,yDAA0D;AAC1D,qFAA6D;AAC7D,+DAAuC;AACvC,kEAAqE;AAErE,MAAM,iBAAiB,GAA2B;AAChD,6CAA6C;CAC9C,CAAC;AAEF,MAAM,YAAY,GAA2B;IAC3C,eAAe,EAAE,YAAY;IAC7B,eAAe,EAAE,gBAAgB;IACjC,WAAW,EAAE,YAAY;IACzB,qBAAqB,EAAE,oBAAoB;IAC3C,eAAe,EAAE,eAAe;IAChC,aAAa,EAAE,eAAe;IAC9B,gBAAgB,EAAE,aAAa;IAC/B,WAAW,EAAE,YAAY;IACzB,KAAK,EAAE,cAAc;IACrB,yBAAyB,EAAE,mBAAmB,CAAC,oBAAoB;CACpE,CAAC;AAEF,MAAM,sBAAsB,GAA2B;IACrD,iBAAiB,EAAE,eAAe;CACnC,CAAC;AAEF,MAAqB,oBAAqB,SAAQ,sBAA+D;IAAjH;;;IA6DA,CAAC;IA3DC,gBAAgB,CAAC,IAAuD;QACtE,IAAI,CAAC,wBAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC5C,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,cAAc,CAAC;QACnB,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YAC3B,KAAK,uBAAY,CAAC,MAAM;gBACtB,cAAc,GAAG,QAAQ,CAAC;gBAC1B,MAAM;YACR,KAAK,uBAAY,CAAC,MAAM;gBACtB,cAAc,GAAG,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC;gBACrF,MAAM;YACR;gBACE,cAAc,GAAG,SAAS,CAAC;QAC/B,CAAC;QAED,MAAM,UAAU,GAAG;YACjB,IAAI,EAAE,cAAc;YACpB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC;QACF,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,oBAAU,CAAC,2BAA2B,CAAC,UAAU,CAAC,EAAE,CAAC;QAEhF,MAAM,MAAM,GAAqB;YAC/B,OAAO,EAAE,UAAU;YACnB,yEAAyE;YACzE,0EAA0E;YAC1E,iBAAiB;YACjB,IAAI,EAAE,wBAAc,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,uBAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,cAAc;YACzF,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,GAAG;SACJ,CAAC;QAEF,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;YACnB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,CAAC;aACI,CAAC;YACJ,MAAM,CAAC,IAAI,GAAG,uBAAA,IAAI,sEAAS,MAAb,IAAI,EAAU,IAAI,CAAC,IAAI,SAAS,CAAC;QACjD,CAAC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;CAkBF;wHAhBU,IAAuD;IAC9D,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC9D,IAAI,UAAU,EAAE,CAAC;QACf,OAAO,UAAU,CAAC;IACpB,CAAC;IAED,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IAC/B,IAAI,wBAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,uBAAY,CAAC,MAAM,CAAC,EAAE,CAAC;QACzD,OAAO,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,0BAA0B,CAAC;IACpF,CAAC;SACI,IAAI,wBAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,uBAAY,CAAC,KAAK,CAAC,EAAE,CAAC;QAC7D,OAAO,mBAAmB,CAAC;IAC7B,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;kBA5DkB,oBAAoB","sourcesContent":["import { type ContentItem } from '../../../../types';\nimport { EndpointType } from '../../../../types/Endpoint';\nimport EndpointHelper from '../../../../util/EndpointHelper';\nimport ViewHelper from '../ViewHelper';\nimport BaseRenderer, { type RenderedListItem } from './BaseRenderer';\n\nconst ICON_BY_BROWSE_ID: Record<string, string> = {\n  // Keep this in case we need it in the future\n};\n\nconst ICON_BY_NAME: Record<string, string> = {\n  'WHAT_TO_WATCH': 'fa fa-home',\n  'SUBSCRIPTIONS': 'fa fa-th-large',\n  'UNLIMITED': 'fa fa-film',\n  'VIDEO_LIBRARY_WHITE': 'fa fa-youtube-play',\n  'WATCH_HISTORY': 'fa fa-history',\n  'WATCH_LATER': 'fa fa-clock-o',\n  'LIKES_PLAYLIST': 'fa fa-heart',\n  'PLAYLISTS': 'fa fa-list',\n  'MIX': 'fa fa-random',\n  'YT2_SHOWING_RESULTS_FOR': 'fa fa-info-circle' // Our own icon type\n};\n\nconst VIEW_NAME_BY_BROWSE_ID: Record<string, string> = {\n  'FEsubscriptions': 'subscriptions'\n};\n\nexport default class EndpointLinkRenderer extends BaseRenderer<ContentItem.EndpointLink | ContentItem.GuideEntry> {\n\n  renderToListItem(data: ContentItem.EndpointLink | ContentItem.GuideEntry): RenderedListItem | null {\n    if (!EndpointHelper.validate(data.endpoint)) {\n      return null;\n    }\n\n    let targetViewName;\n    switch (data.endpoint.type) {\n      case EndpointType.Search:\n        targetViewName = 'search';\n        break;\n      case EndpointType.Browse:\n        targetViewName = VIEW_NAME_BY_BROWSE_ID[data.endpoint.payload.browseId] || 'generic';\n        break;\n      default:\n        targetViewName = 'generic';\n    }\n\n    const targetView = {\n      name: targetViewName,\n      endpoint: data.endpoint\n    };\n    const uri = `${this.uri}/${ViewHelper.constructUriSegmentFromView(targetView)}`;\n\n    const result: RenderedListItem = {\n      service: 'youtube2',\n      // Setting type to 'album' is important for 'watch' endpoint items, as we\n      // Only want this item to be exploded and not others in the same list when\n      // It is clicked.\n      type: EndpointHelper.isType(data.endpoint, EndpointType.Watch) ? 'album' : 'item-no-menu',\n      title: data.title,\n      uri\n    };\n\n    if (data.thumbnail) {\n      result.albumart = data.thumbnail;\n    }\n    else {\n      result.icon = this.#getIcon(data) || undefined;\n    }\n\n    return result;\n  }\n\n  #getIcon(data: ContentItem.EndpointLink | ContentItem.GuideEntry) {\n    const iconByName = data.icon ? ICON_BY_NAME[data.icon] : null;\n    if (iconByName) {\n      return iconByName;\n    }\n\n    const endpoint = data.endpoint;\n    if (EndpointHelper.isType(endpoint, EndpointType.Browse)) {\n      return ICON_BY_BROWSE_ID[endpoint.payload.browseId] || 'fa fa-arrow-circle-right';\n    }\n    else if (EndpointHelper.isType(endpoint, EndpointType.Watch)) {\n      return 'fa fa-play-circle';\n    }\n\n    return null;\n  }\n}\n"]}