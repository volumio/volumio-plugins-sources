{"version":3,"file":"PlayController.js","sourceRoot":"","sources":["../../../../src/lib/controller/play/PlayController.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport libQ from 'kew';\n\nimport yt2 from '../../YouTube2Context';\nimport Model, { ModelType } from '../../model';\nimport { EndpointType, WatchEndpoint } from '../../types/Endpoint';\nimport { kewToJSPromise } from '../../util';\nimport { ExplodedTrackInfo } from '../browse/view-handlers/ExplodableViewHandler';\nimport { QueueItem } from '../browse/view-handlers/ExplodableViewHandler';\nimport { VideoView } from '../browse/view-handlers/VideoViewHandler';\nimport ViewHelper from '../browse/view-handlers/ViewHelper';\nimport ExplodeHelper from '../../util/ExplodeHelper';\nimport { GenericView } from '../browse/view-handlers/GenericViewHandler';\nimport VideoPlaybackInfo from '../../types/VideoPlaybackInfo';\nimport { ContentItem } from '../../types';\nimport EndpointHelper from '../../util/EndpointHelper';\n\ninterface MpdState {\n  status: 'play' | 'stop' | 'pause';\n  seek: number;\n  uri: string;\n}\n\nexport default class PlayController {\n\n  #mpdPlugin: any;\n  #autoplayListener: (() => void) | null;\n  #lastPlaybackInfo: {\n    track: QueueItem;\n    position: number;\n  };\n\n  constructor() {\n    this.#mpdPlugin = yt2.getMpdPlugin();\n    this.#autoplayListener = null;\n  }\n\n  #addAutoplayListener() {\n    if (!this.#autoplayListener) {\n      this.#autoplayListener = () => {\n        this.#mpdPlugin.getState().then((state: MpdState) => {\n          if (state.status === 'stop') {\n            this.#handleAutoplay();\n            this.#removeAutoplayListener();\n          }\n        });\n      };\n      this.#mpdPlugin.clientMpd.on('system-player', this.#autoplayListener);\n    }\n  }\n\n  #removeAutoplayListener() {\n    if (this.#autoplayListener) {\n      this.#mpdPlugin.clientMpd.removeListener('system-player', this.#autoplayListener);\n      this.#autoplayListener = null;\n    }\n  }\n\n  /**\n   * Track uri:\n   * - youtube2/video@endpoint={...}@explodeTrackData={...}\n   *\n   */\n  async clearAddPlayTrack(track: QueueItem) {\n    yt2.getLogger().info(`[youtube2-play] clearAddPlayTrack: ${track.uri}`);\n\n    const {videoId, info: playbackInfo} = await this.#getPlaybackInfoFromUri(track.uri);\n    if (!playbackInfo) {\n      throw Error(`Could not obtain playback info for videoId: ${videoId})`);\n    }\n\n    const stream = playbackInfo.stream;\n    if (!stream?.url) {\n      yt2.toast('error', yt2.getI18n('YOUTUBE2_ERR_NO_STREAM', track.name));\n      throw Error(`Stream not found for videoId: ${videoId}`);\n    }\n\n    track.title = playbackInfo.title || track.title;\n    track.name = playbackInfo.title || track.title;\n    track.artist = playbackInfo.author?.name || track.artist;\n    track.albumart = playbackInfo.thumbnail || track.albumart;\n    track.duration = playbackInfo.isLive ? 0 : playbackInfo.duration;\n\n    if (stream.bitrate) {\n      track.samplerate = stream.bitrate;\n    }\n\n    this.#lastPlaybackInfo = {\n      track,\n      position: yt2.getStateMachine().getState().position\n    };\n\n    const safeStreamUrl = stream.url.replace(/\"/g, '\\\\\"');\n    await this.#doPlay(safeStreamUrl, track);\n\n    if (yt2.getConfigValue('autoplay')) {\n      this.#addAutoplayListener();\n    }\n\n    if (yt2.getConfigValue('addToHistory')) {\n      try {\n        playbackInfo.addToHistory();\n      }\n      catch (error) {\n        yt2.getLogger().error(yt2.getErrorMessage(`[youtube2-play] Error: could not add to history (videoId: ${videoId}): `, error));\n      }\n    }\n  }\n\n  // Returns kew promise!\n  stop() {\n    this.#removeAutoplayListener();\n    yt2.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.stop();\n  }\n\n  // Returns kew promise!\n  pause() {\n    yt2.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.pause();\n  }\n\n  // Returns kew promise!\n  resume() {\n    yt2.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.resume();\n  }\n\n  // Returns kew promise!\n  seek(position: number) {\n    yt2.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.seek(position);\n  }\n\n  // Returns kew promise!\n  next() {\n    yt2.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.next();\n  }\n\n  // Returns kew promise!\n  previous() {\n    yt2.getStateMachine().setConsumeUpdateService(undefined);\n    return yt2.getStateMachine().previous();\n  }\n\n  #getExplodedTrackInfoFromUri(uri: string): ExplodedTrackInfo | null {\n    if (!uri) {\n      return null;\n    }\n\n    const trackView = ViewHelper.getViewsFromUri(uri)[1] as VideoView;\n\n    if (!trackView || trackView.name !== 'video' ||\n      !EndpointHelper.isType(trackView.explodeTrackData?.endpoint, EndpointType.Watch)) {\n      return null;\n    }\n\n    return trackView.explodeTrackData;\n  }\n\n  async #getPlaybackInfoFromUri(uri: string): Promise<{videoId: string; info: VideoPlaybackInfo | null}> {\n    const watchEndpoint = this.#getExplodedTrackInfoFromUri(uri)?.endpoint;\n    const videoId = watchEndpoint?.payload?.videoId;\n    if (!videoId) {\n      throw Error(`Invalid track uri: ${uri}`);\n    }\n\n    const model = Model.getInstance(ModelType.Video);\n    return {\n      videoId,\n      info: await model.getPlaybackInfo(videoId)\n    };\n  }\n\n  #doPlay(streamUrl: string, track: QueueItem) {\n    const mpdPlugin = this.#mpdPlugin;\n\n    return kewToJSPromise(mpdPlugin.sendMpdCommand('stop', [])\n      .then(() => {\n        return mpdPlugin.sendMpdCommand('clear', []);\n      })\n      .then(() => {\n        return mpdPlugin.sendMpdCommand(`addid \"${this.#appendTrackTypeToStreamUrl(streamUrl)}\"`, []);\n      })\n      .then((addIdResp: { Id: string }) => this.#mpdAddTags(addIdResp, track))\n      .then(() => {\n        yt2.getStateMachine().setConsumeUpdateService('mpd', true, false);\n        return mpdPlugin.sendMpdCommand('play', []);\n      }));\n  }\n\n  #appendTrackTypeToStreamUrl(url: string) {\n    /**\n     * Fool MPD plugin to return correct `trackType` in `parseTrackInfo()` by adding\n     * track type to URL query string as a dummy param.\n     */\n    return `${url}&t.YouTube`;\n  }\n\n  // Returns kew promise!\n  #mpdAddTags(mpdAddIdResponse: { Id: string }, track: QueueItem) {\n    const songId = mpdAddIdResponse?.Id;\n    if (songId !== undefined) {\n      const cmds = [];\n      cmds.push({\n        command: 'addtagid',\n        parameters: [ songId, 'title', track.title ]\n      });\n      if (track.album) {\n        cmds.push({\n          command: 'addtagid',\n          parameters: [ songId, 'album', track.album ]\n        });\n      }\n      cmds.push({\n        command: 'addtagid',\n        parameters: [ songId, 'artist', track.artist ]\n      });\n\n      return this.#mpdPlugin.sendMpdCommandArray(cmds);\n    }\n    return libQ.resolve();\n  }\n\n  async #handleAutoplay() {\n    const lastPlayedQueueIndex = this.#findLastPlayedTrackQueueIndex();\n    if (lastPlayedQueueIndex < 0) {\n      return;\n    }\n\n    const stateMachine = yt2.getStateMachine(),\n      state = stateMachine.getState(),\n      isLastTrack = stateMachine.getQueue().length - 1 === lastPlayedQueueIndex,\n      currentPositionChanged = state.position !== lastPlayedQueueIndex; // True if client clicks on another item in the queue\n\n    const noAutoplayConditions = !yt2.getConfigValue('autoplay') || currentPositionChanged || !isLastTrack || state.random || state.repeat || state.repeatSingle;\n    const getAutoplayItemsPromise = noAutoplayConditions ? Promise.resolve(null) : this.#getAutoplayItems();\n\n    if (!noAutoplayConditions) {\n      yt2.toast('info', yt2.getI18n('YOUTUBE2_AUTOPLAY_FETCH'));\n    }\n\n    const items = await getAutoplayItemsPromise;\n    if (items && items.length > 0) {\n      // Add items to queue and play\n      const clearQueue = yt2.getConfigValue('autoplayClearQueue');\n      if (clearQueue) {\n        stateMachine.clearQueue();\n      }\n      stateMachine.addQueueItems(items).then((result: { firstItemIndex: number }) => {\n        if (items.length > 1) {\n          yt2.toast('success', yt2.getI18n('YOUTUBE2_AUTOPLAY_ADDED', items.length));\n        }\n        else {\n          yt2.toast('success', yt2.getI18n('YOUTUBE2_AUTOPLAY_ADDED_SINGLE', items[0].title));\n        }\n        stateMachine.play(result.firstItemIndex);\n      });\n    }\n    else if (!noAutoplayConditions) {\n      yt2.toast('info', yt2.getI18n('YOUTUBE2_AUTOPLAY_NO_ITEMS'));\n    }\n  }\n\n  #findLastPlayedTrackQueueIndex() {\n    if (!this.#lastPlaybackInfo) {\n      return -1;\n    }\n\n    const queue = yt2.getStateMachine().getQueue();\n    const trackUri = this.#lastPlaybackInfo.track.uri;\n    const endIndex = this.#lastPlaybackInfo.position;\n\n    for (let i = endIndex; i >= 0; i--) {\n      if (queue[i]?.uri === trackUri) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  async #getAutoplayItems() {\n    const lastPlayedEndpoint = this.#getExplodedTrackInfoFromUri(this.#lastPlaybackInfo?.track?.uri)?.endpoint;\n    const videoId = lastPlayedEndpoint?.payload?.videoId;\n\n    if (!videoId) {\n      return [];\n    }\n\n    yt2.getLogger().info(`[youtube2-play] Obtaining autoplay videos for ${videoId}`);\n\n    const autoplayPayload: WatchEndpoint['payload'] = {\n      videoId\n    };\n    if (lastPlayedEndpoint.payload.playlistId) {\n      autoplayPayload.playlistId = lastPlayedEndpoint.payload.playlistId;\n\n      if (lastPlayedEndpoint.payload.index) {\n        autoplayPayload.playlistIndex = lastPlayedEndpoint.payload.index;\n      }\n    }\n    if (lastPlayedEndpoint.payload.params) {\n      autoplayPayload.params = lastPlayedEndpoint.payload.params;\n    }\n\n    const autoplayFetchEndpoint: WatchEndpoint = {\n      type: EndpointType.Watch,\n      payload: autoplayPayload\n    };\n\n    const endpointModel = Model.getInstance(ModelType.Endpoint);\n    const contents = await endpointModel.getContents(autoplayFetchEndpoint);\n\n    const autoplayItems: ExplodedTrackInfo[] = [];\n\n    // Get from current playlist, if any.\n    if (contents?.playlist) {\n      const currentIndex = contents.playlist.currentIndex || 0;\n      const itemsAfter = contents.playlist.items?.slice(currentIndex + 1).filter((item) => item.type === 'video') || [];\n      const explodedTrackInfos = itemsAfter.map((item) => ExplodeHelper.getExplodedTrackInfoFromVideo(item));\n      autoplayItems.push(...explodedTrackInfos);\n      yt2.getLogger().info(`[youtube2-play] Obtained ${autoplayItems.length} videos for autoplay from current playlist`);\n    }\n\n    /**\n     * If there are no items added, that means playlist doesn't exist or has\n     * reached the end. From here, we obtain the autoplay video in the following\n     * order of priority:\n     *\n     * 1. Videos in a Mix playlist that appears in the Related section\n     * 2. Any video in Related section\n     * 3. YouTube default\n     *\n     * (1 and 2 subject to plugin config)\n     */\n    const autoplayPrefMixRelated = yt2.getConfigValue('autoplayPrefMixRelated');\n    const relatedItems = contents?.related?.items;\n\n    // 1. Mix\n    if (autoplayItems.length === 0 && relatedItems && autoplayPrefMixRelated) {\n      const mixPlaylist = relatedItems.find((item) => item.type === 'playlist' && item.isMix) as ContentItem.Playlist;\n      if (mixPlaylist?.endpoint && EndpointHelper.isType(mixPlaylist.endpoint, EndpointType.Watch)) {\n        // Get videos in the Mix playlist\n        const mixPlaylistContents = await endpointModel.getContents(mixPlaylist.endpoint);\n        if (mixPlaylistContents?.playlist?.items) {\n          const mixes = mixPlaylistContents.playlist.items.filter((item) => item.videoId !== videoId);\n          autoplayItems.push(...mixes.map((item) => ExplodeHelper.getExplodedTrackInfoFromVideo(item)));\n          yt2.getLogger().info(`[youtube2-play] Obtained ${autoplayItems.length} videos for autoplay from Mix playlist ${mixPlaylist.playlistId}`);\n        }\n      }\n    }\n\n    // 2. Related\n    if (autoplayItems.length === 0 && relatedItems && autoplayPrefMixRelated) {\n      const relatedVideos = relatedItems.filter((item) => item.type === 'video') as ContentItem.Video[];\n      if (relatedVideos) {\n        autoplayItems.push(...relatedVideos.map((item) => ExplodeHelper.getExplodedTrackInfoFromVideo(item)));\n        yt2.getLogger().info(`[youtube2-play] Obtained ${autoplayItems.length} related videos for autoplay`);\n      }\n    }\n\n    // 3. YouTube default\n    if (autoplayItems.length === 0 && contents?.autoplay?.payload?.videoId) {\n      const videoModel = Model.getInstance(ModelType.Video);\n      // Contents.autoplay is just an endpoint, so we need to get video info (title, author...) from it\n      const playbackInfo = await videoModel.getPlaybackInfo(contents.autoplay.payload.videoId);\n      if (playbackInfo && playbackInfo.title && playbackInfo.author?.name) {\n        autoplayItems.push({\n          title: playbackInfo.title,\n          artist: playbackInfo.author.name,\n          albumart: playbackInfo.thumbnail,\n          endpoint: contents.autoplay\n        });\n      }\n      yt2.getLogger().info('[youtube2-play] Used YouTube default result for autoplay');\n    }\n\n    if (autoplayItems.length > 0) {\n      return autoplayItems.map((item) => ExplodeHelper.createQueueItemFromExplodedTrackInfo(item));\n    }\n\n    return [];\n  }\n\n  async getGotoUri(type: 'album' | 'artist', uri: QueueItem['uri']): Promise<string | null> {\n    if (type === 'album') {\n      const playlistId = this.#getExplodedTrackInfoFromUri(uri)?.endpoint?.payload?.playlistId;\n      if (playlistId) {\n        const targetView: GenericView = {\n          name: 'generic',\n          endpoint: {\n            type: EndpointType.Browse,\n            payload: {\n              browseId: (!playlistId.startsWith('VL') ? 'VL' : '') + playlistId\n            }\n          }\n        };\n        return `youtube2/${ViewHelper.constructUriSegmentFromView(targetView)}`;\n      }\n    }\n    else if (type === 'artist') {\n      const videoId = this.#getExplodedTrackInfoFromUri(uri)?.endpoint?.payload?.videoId;\n      if (videoId) {\n        const model = Model.getInstance(ModelType.Video);\n        const playbackInfo = await model.getPlaybackInfo(videoId);\n        const channelId = playbackInfo?.author?.channelId;\n        if (channelId) {\n          const targetView: GenericView = {\n            name: 'generic',\n            endpoint: {\n              type: EndpointType.Browse,\n              payload: {\n                browseId: channelId\n              }\n            }\n          };\n          return `youtube2/${ViewHelper.constructUriSegmentFromView(targetView)}`;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  async prefetch(track: QueueItem) {\n    const prefetchEnabled = yt2.getConfigValue('prefetch');\n    if (!prefetchEnabled) {\n      /**\n       * Volumio doesn't check whether `prefetch()` is actually performed or\n       * successful (such as inspecting the result of the function call) -\n       * it just sets its internal state variable `prefetchDone`\n       * to `true`. This results in the next track being skipped in cases\n       * where prefetch is not performed or fails. So when we want to signal\n       * that prefetch is not done, we would have to directly falsify the\n       * statemachine's `prefetchDone` variable.\n       */\n      yt2.getLogger().info('[youtube2-play] Prefetch disabled');\n      yt2.getStateMachine().prefetchDone = false;\n      return;\n    }\n    let streamUrl;\n    try {\n      const { videoId, info: playbackInfo } = await this.#getPlaybackInfoFromUri(track.uri);\n      streamUrl = playbackInfo?.stream?.url;\n      if (!streamUrl) {\n        throw Error(`Stream not found for videoId '${videoId}'`);\n      }\n    }\n    catch (error: any) {\n      yt2.getLogger().error(`[youtube2-play] Prefetch failed: ${error}`);\n      yt2.getStateMachine().prefetchDone = false;\n      return;\n    }\n\n    const mpdPlugin = this.#mpdPlugin;\n    return kewToJSPromise(mpdPlugin.sendMpdCommand(`addid \"${this.#appendTrackTypeToStreamUrl(streamUrl)}\"`, [])\n      .then((addIdResp: { Id: string }) => this.#mpdAddTags(addIdResp, track))\n      .then(() => {\n        yt2.getLogger().info(`[youtube2-play] Prefetched and added track to MPD queue: ${track.name}`);\n        return mpdPlugin.sendMpdCommand('consume 1', []);\n      }));\n  }\n}\n"]}