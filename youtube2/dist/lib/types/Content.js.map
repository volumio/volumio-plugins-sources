{"version":3,"file":"Content.js","sourceRoot":"","sources":["../../../src/lib/types/Content.ts"],"names":[],"mappings":"","sourcesContent":["import { ContentItem, PageElement } from '.';\nimport { BrowseContinuationEndpoint, BrowseEndpoint, EndpointType, SearchContinuationEndpoint, SearchEndpoint, WatchContinuationEndpoint, WatchEndpoint } from './Endpoint';\n\nexport type ContentOf<T> =\n  T extends BrowseEndpoint | BrowseContinuationEndpoint | SearchEndpoint | SearchContinuationEndpoint ? PageContent :\n  T extends WatchEndpoint ? WatchContent :\n  T extends WatchContinuationEndpoint ? WatchContinuationContent : never;\n\nexport interface PageContent {\n  type: 'page',\n  isContinuation: boolean,\n  header?: PageElement.Header;\n  sections: PageElement.Section[];\n  tabs?: PageElement.Tab[];\n}\n\nexport interface WatchContent {\n  type: 'watch';\n  isContinuation: false;\n  playlist?: ContentItem.Playlist;\n  autoplay?: WatchEndpoint;\n  related?: {\n    items: (ContentItem.Video | ContentItem.Playlist)[];\n    continuation?: PageElement.Continuation<EndpointType.WatchContinuation>;\n  };\n}\n\nexport interface WatchContinuationContent {\n  type: 'watch',\n  isContinuation: true;\n  items: (ContentItem.Video | ContentItem.Playlist)[];\n  continuation?: PageElement.Continuation<EndpointType.WatchContinuation>;\n}\n"]}