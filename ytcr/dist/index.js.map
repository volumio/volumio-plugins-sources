{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import YouTubeCastReceiver, { Constants, type PlayerState, type Sender, type YouTubeCastReceiverOptions } from 'yt-cast-receiver';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport libQ from 'kew';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport vconf from 'v-conf';\nimport i18nConfOptions from './config/i18n.json';\nimport ytcr from './lib/YTCRContext.js';\nimport Logger from './lib/Logger.js';\nimport MPDPlayer, { type ActionEvent, type MPDPlayerError, type VolumioState } from './lib/MPDPlayer.js';\nimport VolumeControl, { type VolumioVolume } from './lib/VolumeControl.js';\nimport * as utils from './lib/Utils.js';\nimport VideoLoader from './lib/VideoLoader.js';\nimport PairingHelper from './lib/PairingHelper.js';\nimport ReceiverDataStore from './lib/ReceiverDataStore.js';\nimport { type NowPlayingPluginSupport } from 'now-playing-common';\nimport YTCRNowPlayingMetadataProvider from './lib/YTCRNowPlayingMetadataProvider';\n\nconst IDLE_STATE = {\n  status: 'stop',\n  service: 'ytcr',\n  title: undefined,\n  artist: undefined,\n  album: undefined,\n  albumart: '/albumart',\n  uri: '',\n  trackType: undefined,\n  seek: 0,\n  duration: 0,\n  samplerate: undefined,\n  bitdepth: undefined,\n  bitrate: undefined,\n  channels: undefined\n};\n\nclass ControllerYTCR implements NowPlayingPluginSupport {\n\n  #serviceName = 'ytcr';\n  #context: any;\n  #config: any;\n  #commandRouter: any;\n  #volatileCallback: any;\n  #previousTrackTimer: NodeJS.Timeout | null;\n\n  #logger: Logger;\n  #player: MPDPlayer;\n  #volumeControl: VolumeControl;\n  #receiver: YouTubeCastReceiver;\n  #dataStore: ReceiverDataStore;\n\n  #nowPlayingMetadataProvider: YTCRNowPlayingMetadataProvider | null;\n\n  constructor(context: any) {\n    this.#context = context;\n    this.#commandRouter = context.coreCommand;\n    this.#dataStore = new ReceiverDataStore();\n    this.#logger = new Logger(context.logger);\n    this.#previousTrackTimer = null;\n    this.#serviceName = 'ytcr';\n  }\n\n  getUIConfig() {\n    const defer = libQ.defer();\n\n    const lang_code = this.#commandRouter.sharedVars.get('language_code');\n\n    const configPrepTasks = [\n      this.#commandRouter.i18nJson(`${__dirname}/i18n/strings_${lang_code}.json`,\n        `${__dirname}/i18n/strings_en.json`,\n        `${__dirname}/UIConfig.json`),\n\n      utils.jsPromiseToKew(PairingHelper.getManualPairingCode(this.#receiver, this.#logger))\n    ];\n\n    libQ.all(configPrepTasks)\n      .then((configParams: [any, string]) => {\n        const [ uiconf, pairingCode ] = configParams;\n        const [ connectionUIConf,\n          manualPairingUIConf,\n          i18nUIConf,\n          otherUIConf ] = uiconf.sections;\n        const receiverRunning = this.#receiver.status === Constants.STATUSES.RUNNING;\n\n        const port = ytcr.getConfigValue('port');\n        const enableAutoplayOnConnect = ytcr.getConfigValue('enableAutoplayOnConnect');\n        const resetPlayerOnDisconnect = ytcr.getConfigValue('resetPlayerOnDisconnect');\n        const debug = ytcr.getConfigValue('debug');\n        const bindToIf = ytcr.getConfigValue('bindToIf');\n        const i18n = {\n          region: ytcr.getConfigValue('region'),\n          language: ytcr.getConfigValue('language')\n        };\n        const prefetch = ytcr.getConfigValue('prefetch');\n        const preferOpus = ytcr.getConfigValue('preferOpus');\n        const liveStreamQuality = ytcr.getConfigValue('liveStreamQuality');\n        const liveStreamQualityOptions = otherUIConf.content[2].options;\n\n        const availableIf = utils.getNetworkInterfaces();\n        const ifOpts = [ {\n          value: '',\n          label: ytcr.getI18n('YTCR_BIND_TO_ALL_IF')\n        } ];\n        connectionUIConf.content[1].value = ifOpts[0];\n        availableIf.forEach((info) => {\n          const opt = {\n            value: info.name,\n            label: `${info.name} (${info.ip})`\n          };\n          ifOpts.push(opt);\n          if (bindToIf === info.name) {\n            connectionUIConf.content[1].value = opt;\n          }\n        });\n\n        connectionUIConf.content[0].value = port;\n        connectionUIConf.content[1].options = ifOpts;\n\n        if (!receiverRunning) {\n          manualPairingUIConf.content[0].value = ytcr.getI18n('YTCR_NO_CODE_NOT_RUNNING');\n        }\n        else {\n          manualPairingUIConf.content[0].value = pairingCode || ytcr.getI18n('YTCR_NO_CODE_ERR');\n        }\n\n        i18nUIConf.content[0].options = i18nConfOptions.region;\n        i18nUIConf.content[0].value = i18nConfOptions.region.find((r) => i18n.region === r.value);\n        i18nUIConf.content[1].options = i18nConfOptions.language;\n        i18nUIConf.content[1].value = i18nConfOptions.language.find((r) => i18n.language === r.value);\n\n        otherUIConf.content[0].value = prefetch;\n        otherUIConf.content[1].value = preferOpus;\n        otherUIConf.content[2].value = liveStreamQualityOptions.find((o: any) => o.value === liveStreamQuality);\n        otherUIConf.content[3].value = enableAutoplayOnConnect;\n        otherUIConf.content[4].options = [\n          {\n            value: Constants.RESET_PLAYER_ON_DISCONNECT_POLICIES.ALL_DISCONNECTED,\n            label: ytcr.getI18n('YTCR_RESET_PLAYER_ON_DISCONNECT_ALWAYS')\n          },\n          {\n            value: Constants.RESET_PLAYER_ON_DISCONNECT_POLICIES.ALL_EXPLICITLY_DISCONNECTED,\n            label: ytcr.getI18n('YTCR_RESET_PLAYER_ON_DISCONNECT_EXPLICIT')\n          }\n        ];\n        otherUIConf.content[4].value = otherUIConf.content[4].options.find((o: any) => o.value === resetPlayerOnDisconnect);\n        otherUIConf.content[5].value = debug;\n\n        let connectionStatus;\n        if (!receiverRunning) {\n          connectionStatus = ytcr.getI18n('YTCR_IDLE_NOT_RUNNING');\n        }\n        else if (this.#hasConnectedSenders()) {\n          const senders = this.#receiver.getConnectedSenders();\n          if (senders.length > 1) {\n            connectionStatus = ytcr.getI18n('YTCR_CONNECTED_MULTIPLE', senders[0].name, senders.length - 1);\n          }\n          else {\n            connectionStatus = ytcr.getI18n('YTCR_CONNECTED', senders[0].name);\n          }\n        }\n        else {\n          connectionStatus = ytcr.getI18n('YTCR_IDLE');\n        }\n        connectionUIConf.label = ytcr.getI18n('YTCR_CONNECTION', connectionStatus);\n\n        defer.resolve(uiconf);\n      })\n      .fail((error: any) => {\n        this.#logger.error('[ytcr] Failed to retrieve YouTube Cast Receiver plugin configuration: ', error);\n        defer.reject(error);\n      });\n\n    return defer.promise;\n  }\n\n  onVolumioStart() {\n    const configFile = this.#commandRouter.pluginManager.getConfigurationFile(this.#context, 'config.json');\n    this.#config = new vconf();\n    this.#config.loadFile(configFile);\n    return libQ.resolve();\n  }\n\n  onStart() {\n    const defer = libQ.defer();\n\n    ytcr.init(this.#context, this.#config);\n\n    if (this.#dataStore.isExpired()) {\n      this.#logger.info('[ytcr] Data store TTL expired - clearing it...');\n      this.#dataStore.clear();\n    }\n\n    this.#volumeControl = new VolumeControl(this.#commandRouter, this.#logger);\n\n    const playerConfig = {\n      mpd: this.#getMpdConfig(),\n      volumeControl: this.#volumeControl,\n      videoLoader: new VideoLoader(this.#logger),\n      prefetch: ytcr.getConfigValue('prefetch')\n    };\n    this.#player = new MPDPlayer(playerConfig);\n\n    const bindToIf = ytcr.getConfigValue('bindToIf');\n    const receiverOptions: YouTubeCastReceiverOptions = {\n      dial: {\n        port: ytcr.getConfigValue('port'),\n        bindToInterfaces: utils.hasNetworkInterface(bindToIf) ? [ bindToIf ] : undefined\n      },\n      app: {\n        enableAutoplayOnConnect: ytcr.getConfigValue('enableAutoplayOnConnect'),\n        resetPlayerOnDisconnectPolicy: ytcr.getConfigValue('resetPlayerOnDisconnect')\n      },\n      dataStore: this.#dataStore,\n      logger: this.#logger,\n      logLevel: ytcr.getConfigValue('debug') ? Constants.LOG_LEVELS.DEBUG : Constants.LOG_LEVELS.INFO\n    };\n    const deviceInfo = ytcr.getDeviceInfo();\n    if (deviceInfo.name) {\n      receiverOptions.device = {\n        name: deviceInfo.name\n      };\n    }\n    const receiver = this.#receiver = new YouTubeCastReceiver(this.#player, receiverOptions);\n\n    receiver.on('senderConnect', (sender: Sender) => {\n      this.#logger.info('[ytcr] ***** Sender connected *****');\n      ytcr.toast('success', ytcr.getI18n('YTCR_CONNECTED', sender.name));\n      this.refreshUIConfig();\n    });\n\n    receiver.on('senderDisconnect', (sender: Sender) => {\n      this.#logger.info('[ytcr] ***** Sender disconnected *****');\n      ytcr.toast('warning', ytcr.getI18n('YTCR_DISCONNECTED', sender.name));\n      this.refreshUIConfig();\n    });\n\n    this.#player.on('action', (action: ActionEvent) => {\n      void (async () => {\n        if (action.name === 'play' && !this.isCurrentService()) {\n          this.#logger.debug('[ytcr] \\'play\\' command received while not being the current service.');\n          // Stop any playback by the currently active service\n          this.#logger.debug('[ytcr] Stopping playback by current service...');\n          try {\n            await utils.kewToJSPromise(this.#commandRouter.volumioStop());\n          }\n          catch (error) {\n            this.#logger.debug('[ytcr] An error occurred while stopping playback by current service: ', error);\n            this.#logger.debug('[ytcr] Continuing anyway...');\n          }\n          // Unset any volatile state of currently active service\n          const sm = ytcr.getStateMachine();\n          if (sm.isVolatile) {\n            sm.unSetVolatile(); // Why isn't this async?!\n          }\n          this.#logger.debug('[ytcr] Setting ourselves as the current service...');\n          this.setVolatile();\n          this.pushIdleState();\n          // Update volume on sender apps\n          await this.#player.notifyExternalStateChange();\n        }\n        else if (action.name === 'setVolume' && !this.isCurrentService()) {\n          this.#logger.debug('[ytcr] setVolume command received, but we are not the current service. Putting player to sleep...');\n          this.#player.sleep();\n        }\n      })();\n    });\n\n    // Listen for changes in volume on Volumio's end\n    this.#volumeControl.registerVolumioVolumeChangeListener(async (volumioVol: VolumioVolume) => {\n      const volume = {\n        level: volumioVol.vol,\n        muted: volumioVol.mute\n      };\n      if (this.isCurrentService() && this.#hasConnectedSenders()) {\n        // SetVolume() will trigger volumioupdatevolume() which will trigger the statemachine's\n        // PushState() - but old volatile state with outdated info will be used.\n        // So we push the latest state here to refresh the old volatile state.\n        this.#logger.debug('[ytcr] Captured change in Volumio\\'s volume:', volumioVol);\n        await this.pushState();\n        this.#volumeControl.setVolume(volume, true);\n        await this.pushState(); // Do it once more\n        await this.#player.notifyExternalStateChange();\n      }\n      else {\n        // Even if not current service, we keep track of the updated volume\n        this.#volumeControl.setVolume(volume, true);\n      }\n    });\n\n    this.#player.on('state', (states: { current: PlayerState, previous: PlayerState }) => {\n      void (async () => {\n        if (this.isCurrentService()) {\n          const state = states.current;\n          this.#logger.debug('[ytcr] Received state change event from MPDPlayer:', state);\n          if (state.status === Constants.PLAYER_STATUSES.STOPPED || state.status === Constants.PLAYER_STATUSES.IDLE) {\n            this.#player.sleep();\n            if (state.status === Constants.PLAYER_STATUSES.STOPPED && this.#player.queue.videoIds.length > 0) {\n              // If queue is not empty, it is possible that we are just moving to another song. In this case, we don't push\n              // Idle state to avoid ugly flickering of the screen caused by the temporary Idle state.\n              const currentVolumioState = ytcr.getStateMachine().getState() as VolumioState;\n              currentVolumioState.status = 'pause'; // Don't use 'stop' - will display Volumio logo leading to flicker!\n              await this.pushState(currentVolumioState);\n            }\n            else {\n              this.pushIdleState();\n            }\n          }\n          else {\n            await this.pushState();\n          }\n        }\n      })();\n    });\n\n    this.#player.on('error', (error: MPDPlayerError) => {\n      ytcr.toast('error', error.message);\n    });\n\n    receiver.start().then(async () => {\n      await this.#volumeControl.init();\n      await this.#player.init();\n      this.#logger.debug('[ytcr] Receiver started with options:', receiverOptions);\n      this.#nowPlayingMetadataProvider = new YTCRNowPlayingMetadataProvider(this.#player, this.#logger);\n      defer.resolve();\n    })\n      .catch((error: unknown) => {\n        this.#logger.error('[ytcr] Failed to start plugin:', error);\n        if (receiver.status === Constants.STATUSES.RUNNING) {\n          receiver.stop().catch((error: unknown) => this.#logger.error('[ytcr] Caught error while stopping receiver:', error));\n        }\n        else {\n          ytcr.toast('error', ytcr.getI18n('YTCR_RECEIVER_START_ERR', error instanceof Error ? error.message : String(error)));\n        }\n        // Still resolve, in case error is caused by wrong setting (e.g. conflicting port).\n        defer.resolve();\n      });\n\n\n    return defer.promise;\n  }\n\n  #getMpdConfig() {\n    return {\n      path: '/run/mpd/socket'\n    };\n  }\n\n  #hasConnectedSenders(): boolean {\n    return this.#receiver?.getConnectedSenders().length > 0 || false;\n  }\n\n  configSaveConnection(data: any) {\n    const oldPort = ytcr.getConfigValue('port');\n    const port = parseInt(data['port'], 10);\n    if (port < 1024 || port > 65353) {\n      ytcr.toast('error', ytcr.getI18n('YTCR_INVALID_PORT'));\n      return;\n    }\n    const oldBindToIf = ytcr.getConfigValue('bindToIf');\n    const bindToIf = data['bindToIf'].value;\n\n    if (oldPort !== port || oldBindToIf !== bindToIf) {\n      this.#checkSendersAndPromptBeforeRestart(\n        this.configConfirmSaveConnection.bind(this, { port, bindToIf }),\n        {\n          'endpoint': 'music_service/ytcr',\n          'method': 'configConfirmSaveConnection',\n          'data': { port, bindToIf }\n        }\n      );\n    }\n    else {\n      ytcr.toast('success', ytcr.getI18n('YTCR_SETTINGS_SAVED'));\n    }\n  }\n\n  configConfirmSaveConnection(data: any) {\n    ytcr.setConfigValue('port', data['port']);\n    ytcr.setConfigValue('bindToIf', data['bindToIf']);\n    this.restart().then(() => {\n      this.refreshUIConfig();\n      ytcr.toast('success', ytcr.getI18n('YTCR_RESTARTED'));\n    });\n  }\n\n  configSaveI18n(data: any) {\n    const oldRegion = ytcr.getConfigValue('region');\n    const oldLanguage = ytcr.getConfigValue('language');\n    const region = data.region.value;\n    const language = data.language.value;\n\n    if (oldRegion !== region || oldLanguage !== language) {\n      ytcr.setConfigValue('region', region);\n      ytcr.setConfigValue('language', language);\n\n      if (this.#player) {\n        this.#player.videoLoader.refreshI18nConfig();\n      }\n    }\n\n    ytcr.toast('success', ytcr.getI18n('YTCR_SETTINGS_SAVED'));\n  }\n\n  async configSaveOther(data: any) {\n    ytcr.setConfigValue('prefetch', data['prefetch']);\n    ytcr.setConfigValue('preferOpus', data['preferOpus']);\n    ytcr.setConfigValue('liveStreamQuality', data['liveStreamQuality'].value);\n    ytcr.setConfigValue('enableAutoplayOnConnect', data['enableAutoplayOnConnect']);\n    ytcr.setConfigValue('resetPlayerOnDisconnect', data['resetPlayerOnDisconnect'].value);\n    ytcr.setConfigValue('debug', data['debug']);\n\n    if (this.#receiver) {\n      this.#receiver.setLogLevel(data['debug'] ? Constants.LOG_LEVELS.DEBUG : Constants.LOG_LEVELS.INFO);\n      this.#receiver.enableAutoplayOnConnect(data['enableAutoplayOnConnect']);\n      this.#receiver.setResetPlayerOnDisconnectPolicy(data['resetPlayerOnDisconnect'].value);\n    }\n\n    if (this.#player) {\n      await this.#player.enablePrefetch(data['prefetch']);\n    }\n\n    ytcr.toast('success', ytcr.getI18n('YTCR_SETTINGS_SAVED'));\n  }\n\n  configClearDataStore() {\n    this.#checkSendersAndPromptBeforeRestart(\n      this.configConfirmClearDataStore.bind(this),\n      {\n        'endpoint': 'music_service/ytcr',\n        'method': 'configConfirmClearDataStore'\n      }\n    );\n  }\n\n  configConfirmClearDataStore() {\n    this.#dataStore.clear();\n    this.restart().then(() => {\n      this.refreshUIConfig();\n      ytcr.toast('success', ytcr.getI18n('YTCR_RESTARTED'));\n    });\n  }\n\n  #checkSendersAndPromptBeforeRestart(onCheckPass: () => void, modalOnConfirmPayload: { endpoint: string, method: string, data?: Record<string, any> }) {\n    if (this.#hasConnectedSenders()) {\n      const modalData: any = {\n        title: ytcr.getI18n('YTCR_CONFIGURATION'),\n        size: 'lg',\n        buttons: [\n          {\n            name: ytcr.getI18n('YTCR_NO'),\n            class: 'btn btn-warning'\n          },\n          {\n            name: ytcr.getI18n('YTCR_YES'),\n            class: 'btn btn-info',\n            emit: 'callMethod',\n            payload: modalOnConfirmPayload\n          }\n        ]\n      };\n      const senders = this.#receiver.getConnectedSenders();\n      if (senders.length > 1) {\n        modalData.message = ytcr.getI18n('YTCR_CONF_RESTART_CONFIRM_M', senders[0].name, senders.length - 1);\n      }\n      else {\n        modalData.message = ytcr.getI18n('YTCR_CONF_RESTART_CONFIRM', senders[0].name);\n      }\n      this.#commandRouter.broadcastMessage('openModal', modalData);\n    }\n    else {\n      onCheckPass();\n    }\n  }\n\n  refreshUIConfig() {\n    this.#commandRouter.getUIConfigOnPlugin('music_service', 'ytcr', {}).then((config: any) => {\n      this.#commandRouter.broadcastMessage('pushUiConfig', config);\n    });\n  }\n\n  onStop() {\n    const defer = libQ.defer();\n\n    this.#receiver.removeAllListeners();\n    this.#receiver.stop().then(async () => {\n      this.#logger.debug('[ytcr] Receiver stopped');\n      this.unsetVolatile();\n      this.#volumeControl.unregisterVolumioVolumeChangeListener();\n      await this.#player.destroy();\n      ytcr.reset();\n      this.#nowPlayingMetadataProvider = null;\n      defer.resolve();\n    })\n      .catch((error: unknown) => {\n        this.#logger.error('[ytcr] Failed to stop receiver:', error);\n        defer.reject(error);\n      });\n\n    return defer.promise;\n  }\n\n  restart() {\n    return this.onStop().then(() => {\n      return this.onStart();\n    });\n  }\n\n  getConfigurationFiles(): string[] {\n    return [ 'config.json' ];\n  }\n\n  setVolatile() {\n    if (!this.#volatileCallback) {\n      this.#volatileCallback = this.onUnsetVolatile.bind(this);\n    }\n    if (!this.isCurrentService()) {\n      ytcr.getStateMachine().setVolatile({\n        service: this.#serviceName,\n        callback: this.#volatileCallback\n      });\n      ytcr.getMpdPlugin().ignoreUpdate(true);\n      ytcr.getStateMachine().setConsumeUpdateService(undefined);\n    }\n  }\n\n  unsetVolatile() {\n    ytcr.getStateMachine().unSetVolatile();\n  }\n\n  async onUnsetVolatile() {\n    this.pushIdleState();\n    ytcr.getMpdPlugin().ignoreUpdate(false);\n    return this.#player.stop();\n  }\n\n  pushIdleState() {\n    this.#logger.debug('[ytcr] Pushing idle state...');\n    // Need to first push empty state with pause status first so the empty volatileState gets registered\n    // By statemachine.\n    this.#commandRouter.servicePushState(Object.assign(IDLE_STATE, { status: 'pause' }), this.#serviceName);\n    // Then push empty state with stop status\n    this.#commandRouter.servicePushState(IDLE_STATE, this.#serviceName);\n  }\n\n  async pushState(state?: VolumioState) {\n    const volumioState = state || await this.#player.getVolumioState();\n    if (volumioState) {\n      this.#logger.debug('[ytcr] pushState(): ', volumioState);\n      this.#commandRouter.servicePushState(volumioState, this.#serviceName);\n    }\n  }\n\n  isCurrentService() {\n    // Check what is the current Volumio service\n    const currentstate = this.#commandRouter.volumioGetState();\n    if (currentstate !== undefined && currentstate.service !== undefined && currentstate.service !== this.#serviceName) {\n      return false;\n    }\n    return true;\n  }\n\n  stop() {\n    return utils.jsPromiseToKew(this.#player.stop());\n  }\n\n  play() {\n    return utils.jsPromiseToKew(this.#player.resume());\n  }\n\n  pause() {\n    return utils.jsPromiseToKew(this.#player.pause());\n  }\n\n  resume() {\n    return utils.jsPromiseToKew(this.#player.resume());\n  }\n\n  seek(position: number) {\n    return utils.jsPromiseToKew(this.#player.seek(Math.round(position / 1000)));\n  }\n\n  next() {\n    return utils.jsPromiseToKew(this.#player.next());\n  }\n\n  previous() {\n    if (this.#previousTrackTimer) {\n      clearTimeout(this.#previousTrackTimer);\n      this.#previousTrackTimer = null;\n      return utils.jsPromiseToKew(this.#player.previous());\n    }\n    if (this.#player.status === Constants.PLAYER_STATUSES.PLAYING ||\n      this.#player.status === Constants.PLAYER_STATUSES.PAUSED) {\n      this.#previousTrackTimer = setTimeout(() => {\n        this.#previousTrackTimer = null;\n      }, 3000);\n      return this.#player.seek(0);\n    }\n    return utils.jsPromiseToKew(this.#player.previous());\n  }\n\n  getNowPlayingMetadataProvider() {\n    return this.#nowPlayingMetadataProvider;\n  }\n}\n\nexport = ControllerYTCR;\n"]}