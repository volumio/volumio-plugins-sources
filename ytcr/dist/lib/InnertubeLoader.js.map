{"version":3,"file":"InnertubeLoader.js","sourceRoot":"","sources":["../../src/lib/InnertubeLoader.ts"],"names":[],"mappings":"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","sourcesContent":["import fetch from 'node-fetch';\nimport Innertube from 'volumio-youtubei.js';\nimport BG, { type BgConfig } from 'bgutils-js';\nimport { JSDOM } from 'jsdom';\nimport { type Logger } from 'yt-cast-receiver';\nimport ytcr from './YTCRContext';\nimport atob from 'atob';\nimport btoa from 'btoa';\n\n// Polyfill for BGUtils\nif (globalThis && !globalThis.atob) {\n  globalThis.atob = atob;\n}\nif (globalThis && !globalThis.btoa) {\n  globalThis.btoa = btoa;\n}\n\nexport interface InnertubeLoaderGetInstanceResult {\n  innertube: Innertube;\n}\n\nenum Stage {\n  Init = '1 - Init',\n  PO = '2 - PO'\n}\n\ninterface POToken {\n  params: {\n    visitorData?: string;\n  }\n  value: string;\n  ttl?: number;\n  refreshThreshold?: number;\n}\n\nexport default class InnertubeLoader {\n\n  #innertube: Innertube | null = null;\n  #pendingPromise: Promise<InnertubeLoaderGetInstanceResult> | null = null;\n  #poTokenRefreshTimer: NodeJS.Timeout | null = null;\n  #logger: Logger | null = null;\n  #onCreate?: (innertube: Innertube) => void;\n\n  constructor(logger: Logger, onCreate?: (innertube: Innertube) => void) {\n    this.#logger = logger;\n    this.#onCreate = onCreate;\n  }\n\n  async getInstance(): Promise<InnertubeLoaderGetInstanceResult> {\n    if (this.#innertube) {\n      return {\n        innertube: this.#innertube,\n      };\n    }\n\n    if (this.#pendingPromise) {\n      return this.#pendingPromise;\n    }\n\n    this.#pendingPromise = new Promise<InnertubeLoaderGetInstanceResult>((resolve, reject) => {\n      this.#createInstance(Stage.Init, resolve)\n        .catch((error: unknown) => {\n          reject(error instanceof Error ? error : Error(String(error)))\n        });\n    });\n\n    return this.#pendingPromise;\n  }\n\n  async #recreateWithPOToken(innertube: Innertube, resolve: (value: InnertubeLoaderGetInstanceResult) => void, lastToken?: POToken) {\n    const visitorData = lastToken?.params.visitorData || innertube.session.context.client.visitorData;\n    let poTokenResult;\n    if (visitorData) {\n      this.#logger?.info(`[ytcr] InnertubeLoader: obtaining po_token by visitorData...`);\n      try {\n        poTokenResult = await this.#generatePoToken(visitorData);\n        this.#logger?.info(`[ytcr] InnertubeLoader: obtained po_token (expires in ${poTokenResult.ttl} seconds)`);\n      }\n      catch (error: unknown) {\n        this.#logger?.error('[ytcr] InnertubeLoader: failed to get poToken:', error);\n      }\n      if (poTokenResult) {\n        this.#logger?.info(`[ytcr] InnertubeLoader: re-create Innertube instance with po_token`);\n        this.#createInstance(Stage.PO, resolve, {\n          params: {\n            visitorData\n          },\n          value: poTokenResult.token,\n          ttl: poTokenResult.ttl,\n          refreshThreshold: poTokenResult.refreshThreshold\n        })\n          .catch((error: unknown) => {\n            this.#logger?.error('[ytcr] InnertubeLoader: error creating Innertube instance:', error);\n          });\n        return;\n      }\n    }\n    this.#logger?.warn('[ytcr] InnertubeLoader: po_token was not used to create Innertube instance. Playback of YouTube content might fail.');\n    this.#resolveGetInstanceResult(innertube, resolve);\n  }\n\n  async #createInstance(stage: Stage.PO, resolve: (value: InnertubeLoaderGetInstanceResult) => void, poToken: POToken): Promise<void>;\n  async #createInstance(stage: Stage.Init, resolve: (value: InnertubeLoaderGetInstanceResult) => void, poToken?: undefined): Promise<void>;\n  async #createInstance(stage: Stage.Init | Stage.PO, resolve: (value: InnertubeLoaderGetInstanceResult) => void, poToken?: POToken) {\n    this.#logger?.info(`[ytcr] InnertubeLoader: creating Innertube instance${poToken?.value ? ' with po_token' : ''}...`);\n    const innertube = await Innertube.create({\n      visitor_data: poToken?.params.visitorData,\n      po_token: poToken?.value\n    });\n    switch (stage) {\n      case Stage.Init:\n        await this.#recreateWithPOToken(innertube, resolve);\n        break;\n      case Stage.PO:\n        this.#resolveGetInstanceResult(innertube, resolve, poToken);\n        break;\n    }\n  }\n\n  reset() {\n    this.#clearPOTokenRefreshTimer();\n    if (this.#pendingPromise) {\n      this.#pendingPromise = null;\n    }\n    this.#innertube = null;\n  }\n\n  #clearPOTokenRefreshTimer() {\n    if (this.#poTokenRefreshTimer) {\n      clearTimeout(this.#poTokenRefreshTimer);\n      this.#poTokenRefreshTimer = null;\n    }\n  }\n\n  hasInstance() {\n    return !!this.#innertube;\n  }\n\n  #resolveGetInstanceResult(innertube: Innertube, resolve: (value: InnertubeLoaderGetInstanceResult) => void, poToken?: POToken) {\n    this.#pendingPromise = null;\n    this.#innertube = innertube;\n    this.applyI18nConfig();\n    this.#clearPOTokenRefreshTimer();\n    if (poToken) {\n      const { ttl, refreshThreshold = 100 } = poToken;\n      if (ttl) {\n        const timeout = ttl - refreshThreshold;\n        this.#logger?.info(`[ytcr] InnertubeLoader: going to refresh po_token in ${timeout} seconds`);\n        this.#poTokenRefreshTimer = setTimeout(() => this.#refreshPOToken(poToken), timeout * 1000);\n      }\n    }\n    if (this.#onCreate) {\n      this.#onCreate(innertube);\n    }\n    resolve({\n      innertube,\n    });\n  }\n\n  #refreshPOToken(lastToken: POToken) {\n    const innertube = this.#innertube;\n    if (!innertube) {\n      return;\n    }\n    this.reset();\n    this.#pendingPromise = new Promise((resolve) => {\n      this.#logger?.info('[ytcr] InnertubeLoader: refresh po_token');\n      this.#recreateWithPOToken(innertube, resolve, lastToken)\n        .catch((error: unknown) => {\n          this.#logger?.error('[ytcr] InnertubeLoader: error creating Innertube instance (while refreshing po_token):', error);\n        });\n    });\n  }\n\n  applyI18nConfig() {\n    if (!this.#innertube) {\n      return;\n    }\n\n    const region = ytcr.getConfigValue('region', 'US');\n    const language = ytcr.getConfigValue('language', 'en');\n\n    this.#innertube.session.context.client.gl = region;\n    this.#innertube.session.context.client.hl = language;\n  }\n\n  /**\n   * Required for initializing innertube, otherwise videos will return 403\n   * Much of this taken from https://github.com/LuanRT/BgUtils/blob/main/examples/node/index.ts\n   * @returns\n   */\n  async #generatePoToken(identifier: string) {\n    const requestKey = 'O43z0dpjhgX20SCx4KAo';\n    const bgConfig: BgConfig = {\n      fetch: (url, options) => fetch(url as any, options as any) as any,\n      globalObj: globalThis,\n      identifier,\n      requestKey\n    };\n\n    const dom = new JSDOM();\n    Object.assign(globalThis, {\n      window: dom.window,\n      document: dom.window.document\n    });\n\n    const bgChallenge = await BG.Challenge.create(bgConfig);\n    if (!bgChallenge) {\n      throw new Error('Could not get challenge');\n    }\n\n    const interpreterJavascript = bgChallenge.interpreterJavascript.privateDoNotAccessOrElseSafeScriptWrappedValue;\n    if (interpreterJavascript) {\n      // eslint-disable-next-line @typescript-eslint/no-implied-eval\n      new Function(interpreterJavascript)();\n    }\n    else throw new Error('Could not load VM');\n\n    const poTokenResult = await BG.PoToken.generate({\n      program: bgChallenge.program,\n      globalName: bgChallenge.globalName,\n      bgConfig\n    });\n\n    return {\n      token: poTokenResult.poToken,\n      ttl: poTokenResult.integrityTokenData.estimatedTtlSecs,\n      refreshThreshold: poTokenResult.integrityTokenData.mintRefreshThreshold\n    };\n  }\n}\n"]}