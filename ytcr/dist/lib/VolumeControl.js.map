{"version":3,"file":"VolumeControl.js","sourceRoot":"","sources":["../../src/lib/VolumeControl.ts"],"names":[],"mappings":"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","sourcesContent":["import { type Logger, type Volume } from 'yt-cast-receiver';\nimport { kewToJSPromise } from './Utils.js';\n\nexport interface VolumioVolume {\n  vol: number;\n  mute: boolean;\n}\n\ninterface VolumioVolumeChangeListener {\n  (volume: VolumioVolume): Promise<void>;\n}\n\nexport default class VolumeControl {\n\n  #commandRouter: any;\n  #logger: Logger;\n  #currentVolume: Volume | null;\n  #volumioVolumeChangeListener: VolumioVolumeChangeListener | null;\n\n  constructor(commandRouter: any, logger: Logger) {\n    this.#commandRouter = commandRouter;\n    this.#logger = logger;\n    this.#currentVolume = null;\n    this.#volumioVolumeChangeListener = null;\n  }\n\n  async init() {\n    this.#currentVolume = await this.getVolume();\n    this.#logger.debug('[ytcr] VolumeControl initialized with current volume:', this.#currentVolume);\n  }\n\n  setVolume(volume: Volume, setInternalOnly = false) {\n    const oldVolume = this.#currentVolume;\n    this.#currentVolume = volume;\n    if (!setInternalOnly) {\n      try {\n        if (oldVolume?.level !== volume.level) {\n          this.#logger.debug(`[ytcr] VolumeControl setting Volumio's volume level to: ${volume.level}`);\n          this.#commandRouter.volumiosetvolume(volume.level);\n        }\n        if (oldVolume?.muted !== volume.muted) {\n          this.#logger.debug(`[ytcr] VolumeControl setting Volumio's mute status to: ${volume.muted}`);\n          this.#commandRouter.volumiosetvolume(volume.muted ? 'mute' : 'unmute');\n        }\n      }\n      catch (error) {\n        this.#logger.error('[ytcr] Failed to set Volumio\\'s volume:', error);\n        this.#currentVolume = null;\n      }\n    }\n  }\n\n  async getVolume(): Promise<Volume> {\n    if (this.#currentVolume === null) {\n      try {\n        const volumioVolume = await kewToJSPromise(this.#commandRouter.volumioretrievevolume());\n        this.#currentVolume = {\n          level: volumioVolume.vol,\n          muted: volumioVolume.mute\n        };\n      }\n      catch (error: any) {\n        this.#logger.error('[ytcr] VolumeControl failed to obtain volume from Volumio:', error);\n        this.#currentVolume = null;\n        return {\n          level: 0,\n          muted: false\n        };\n      }\n    }\n    return this.#currentVolume;\n  }\n\n  registerVolumioVolumeChangeListener(listener: VolumioVolumeChangeListener) {\n    if (this.#volumioVolumeChangeListener) {\n      this.unregisterVolumioVolumeChangeListener();\n    }\n    this.#volumioVolumeChangeListener = listener;\n    this.#commandRouter.addCallback('volumioupdatevolume', listener);\n  }\n\n  unregisterVolumioVolumeChangeListener() {\n    if (!this.#volumioVolumeChangeListener) {\n      return;\n    }\n    const callbacks = this.#commandRouter.callbacks['volumioupdatevolume'];\n    if (callbacks) {\n      const oldCount = callbacks.length;\n      this.#logger.debug(`[ytcr] VolumeControl removing Volumio callbacks for 'volumioupdatevolume'. Current count: ${oldCount}`);\n      this.#commandRouter.callbacks['volumioupdatevolume'] = callbacks.filter((l: any) => l !== this.#volumioVolumeChangeListener);\n      const newCount = this.#commandRouter.callbacks['volumioupdatevolume'].length;\n      this.#logger.debug(`[ytcr] VolumeControl removed ${oldCount - newCount} Volumio callbacks for 'volumioupdatevolume'.`);\n    }\n  }\n}\n"]}