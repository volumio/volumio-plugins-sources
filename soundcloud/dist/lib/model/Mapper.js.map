{"version":3,"file":"Mapper.js","sourceRoot":"","sources":["../../../src/lib/model/Mapper.ts"],"names":[],"mappings":"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","sourcesContent":["import { Album, EntityType, LibraryItem, Playlist, Selection, SystemPlaylist, Track, User } from 'soundcloud-fetch';\nimport UserEntity from '../entities/UserEntity';\nimport PlaylistEntity from '../entities/PlaylistEntity';\nimport TrackEntity from '../entities/TrackEntity';\nimport AlbumEntity from '../entities/AlbumEntity';\nimport { ArtworkImageUrls, AvatarImageUrls } from 'soundcloud-fetch/dist/mjs/lib/entities/Entity';\nimport SelectionEntity from '../entities/SelectionEntity';\n\nexport default class Mapper {\n\n  static async mapUser(data: User) {\n    const { id, names, location, permalink } = data;\n    let locationFull = '';\n    if (location?.city) {\n      locationFull = location.city;\n      if (location.country) {\n        locationFull += `, ${location.country}`;\n      }\n    }\n\n    const result: UserEntity = {\n      id,\n      username: names?.username,\n      firstName: names.first,\n      lastName: names.last,\n      fullName: names?.full,\n      thumbnail: await this.#getThumbnail(data),\n      permalink: permalink?.full,\n      location: locationFull\n    };\n\n    return result;\n  }\n\n  static async mapPlaylist(data: Playlist | SystemPlaylist) {\n    const { permalink, user, trackCount } = data;\n    let title, description;\n    let type: 'playlist' | 'system-playlist';\n\n    if (data instanceof SystemPlaylist) {\n      title = (data as SystemPlaylist).texts?.title?.full;\n      description = (data as SystemPlaylist).texts?.description?.full;\n      type = 'system-playlist';\n    }\n    else {\n      title = data.texts?.title;\n      description = data.texts?.description;\n      type = 'playlist';\n    }\n\n    const result: PlaylistEntity = {\n      type,\n      title,\n      description,\n      thumbnail: await this.#getThumbnail(data),\n      permalink: permalink?.full,\n      user: user ? await this.mapUser(user) : null,\n      tracks: [],\n      trackCount: trackCount,\n      isPublic: data.isPublic\n    };\n\n    if (result.type === 'system-playlist' && data instanceof SystemPlaylist) {\n      result.id = data.id;\n      result.urn = data.apiInfo.urn;\n    }\n    else if (result.type === 'playlist' && data instanceof Playlist) {\n      result.id = data.id;\n    }\n\n    return result;\n  }\n\n  static async mapTrack(data: Track) {\n    const { id, texts, publisher, mediaInfo, user } = data;\n    const album = publisher?.albumTitle || publisher?.releaseTitle || null;\n    const playableState =\n      data.isBlocked ? 'blocked' :\n        data.isSnipped ? 'snipped' :\n          'allowed';\n    const transcodings: TrackEntity['transcodings'] = mediaInfo?.transcodings?.map((t) => ({\n      url: t.url,\n      protocol: t.protocol,\n      mimeType: t.mimeType,\n      quality: t.quality\n    })) || [];\n\n    const result: TrackEntity = {\n      type: 'track',\n      id,\n      urn: data.apiInfo.urn,\n      title: texts?.title,\n      album,\n      thumbnail: await this.#getThumbnail(data),\n      playableState,\n      duration: data.durations.playback,\n      transcodings,\n      user: user ? await this.mapUser(user) : null\n    };\n\n    return result;\n  }\n\n  static async mapLibraryItem(data: LibraryItem): Promise<AlbumEntity | PlaylistEntity | null> {\n    const wrappedItem = data.item;\n    let mappedSet;\n    if (wrappedItem instanceof Album) {\n      mappedSet = await this.mapAlbum(wrappedItem);\n    }\n    else if (wrappedItem instanceof Playlist || wrappedItem instanceof SystemPlaylist) {\n      mappedSet = await this.mapPlaylist(wrappedItem);\n    }\n    else {\n      return null;\n    }\n    mappedSet.isLiked = data.itemType === 'AlbumLike' || data.itemType === 'PlaylistLike' || data.itemType === 'SystemPlaylistLike';\n\n    return mappedSet;\n  }\n\n  static async mapAlbum(data: Album) {\n    const { id, permalink, user, trackCount } = data;\n    const title = data.texts?.title;\n    const description = data.texts?.description;\n\n    const result: AlbumEntity = {\n      id,\n      type: 'album',\n      title,\n      description,\n      thumbnail: await this.#getThumbnail(data),\n      permalink: permalink?.full,\n      user: user ? await this.mapUser(user) : null,\n      tracks: [],\n      trackCount,\n      isPublic: data.isPublic\n    };\n\n    return result;\n  }\n\n  static async mapSelection(data: Selection) {\n    const items = await Promise.all(data.items.reduce<Promise<PlaylistEntity>[]>((result, item) => {\n      if (item instanceof Playlist || item instanceof SystemPlaylist) {\n        result.push(this.mapPlaylist(item));\n      }\n      return result;\n    }, []));\n\n    const result: SelectionEntity = {\n      type: 'selection',\n      id: data.id,\n      title: data.title,\n      items\n    };\n\n    return result;\n  }\n\n  static async #getThumbnail(data: EntityType): Promise<string | null> {\n    let artwork: ArtworkImageUrls | AvatarImageUrls | null | undefined;\n    if (data instanceof User) {\n      artwork = data.avatar;\n    }\n    else if (data instanceof SystemPlaylist) {\n      artwork = data.artwork?.original || data.artwork?.calculated;\n    }\n    else if (data instanceof Playlist || data instanceof Track) {\n      artwork = data.artwork;\n    }\n    else {\n      artwork = null;\n    }\n\n    if (artwork) {\n      return artwork.t500x500 || artwork.default;\n    }\n\n    if (data instanceof Playlist || data instanceof SystemPlaylist || data instanceof Album) {\n      const tracks = await data.getTracks();\n      if (tracks.length > 0) {\n        return this.#getThumbnail(tracks[0]);\n      }\n      if (data.user) {\n        return this.#getThumbnail(data.user);\n      }\n    }\n\n    if (data instanceof Track && data.user) {\n      return this.#getThumbnail(data.user);\n    }\n\n    return null;\n  }\n}\n"]}