{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/lib/model/index.ts"],"names":[],"mappings":";;;;;;AAAA,8DAAsC;AACtC,4DAAoC;AACpC,kEAA0C;AAC1C,wDAAgC;AAChC,oEAA4C;AAC5C,sEAA8C;AAC9C,8DAAsC;AACtC,4DAAoC;AAEpC,IAAY,SAQX;AARD,WAAY,SAAS;IACnB,4BAAe,CAAA;IACf,kCAAqB,CAAA;IACrB,oCAAuB,CAAA;IACvB,4BAAe,CAAA;IACf,0BAAa,CAAA;IACb,gCAAmB,CAAA;IACnB,sBAAS,CAAA;AACX,CAAC,EARW,SAAS,GAAT,iBAAS,KAAT,iBAAS,QAQpB;AAYD,MAAM,mBAAmB,GAA2B;IAClD,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,oBAAU;IAC7B,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,uBAAa;IACnC,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,wBAAc;IACrC,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,oBAAU;IAC7B,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,mBAAS;IAC3B,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,sBAAY;IACjC,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,iBAAO;CACxB,CAAC;AAEF,MAAqB,KAAK;IAExB,MAAM,CAAC,WAAW,CAAsB,IAAO;QAC7C,IAAI,mBAAmB,CAAC,IAAI,CAAC,EAAE;YAC7B,OAAO,IAAI,mBAAmB,CAAC,IAAI,CAAC,EAAE,CAAC;SACxC;QACD,MAAM,KAAK,CAAC,4BAA4B,SAAS,EAAE,CAAC,CAAC;IACvD,CAAC;IAED,MAAM,CAAC,cAAc,CAAC,KAAa;QACjC,mBAAS,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;IAED,MAAM,CAAC,SAAS,CAAC,KAAa;QAC5B,mBAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;CACF;AAhBD,wBAgBC","sourcesContent":["import AlbumModel from './AlbumModel';\nimport BaseModel from './BaseModel';\nimport HistoryModel from './HistoryModel';\nimport MeModel from './MeModel';\nimport PlaylistModel from './PlaylistModel';\nimport SelectionModel from './SelectionModel';\nimport TrackModel from './TrackModel';\nimport UserModel from './UserModel';\n\nexport enum ModelType {\n  Album = 'Album',\n  Playlist = 'Playlist',\n  Selection = 'Selection',\n  Track = 'Track',\n  User = 'User',\n  History = 'History',\n  Me = 'Me'\n}\n\nexport type ModelOf<T extends ModelType> =\n  T extends ModelType.Album ? AlbumModel :\n  T extends ModelType.Playlist ? PlaylistModel :\n  T extends ModelType.Selection ? SelectionModel :\n  T extends ModelType.Track ? TrackModel :\n  T extends ModelType.User ? UserModel :\n  T extends ModelType.History ? HistoryModel :\n  T extends ModelType.Me ? MeModel :\n  never;\n\nconst MODEL_TYPE_TO_CLASS: Record<ModelType, any> = {\n  [ModelType.Album]: AlbumModel,\n  [ModelType.Playlist]: PlaylistModel,\n  [ModelType.Selection]: SelectionModel,\n  [ModelType.Track]: TrackModel,\n  [ModelType.User]: UserModel,\n  [ModelType.History]: HistoryModel,\n  [ModelType.Me]: MeModel\n};\n\nexport default class Model {\n\n  static getInstance<T extends ModelType>(type: T): ModelOf<T> {\n    if (MODEL_TYPE_TO_CLASS[type]) {\n      return new MODEL_TYPE_TO_CLASS[type]();\n    }\n    throw Error(`Model not found for type ${ModelType}`);\n  }\n\n  static setAccessToken(value: string) {\n    BaseModel.setAccessToken(value);\n  }\n\n  static setLocale(value: string) {\n    BaseModel.setLocale(value);\n  }\n}\n"]}