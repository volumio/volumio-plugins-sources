{"version":3,"file":"SetViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/SetViewHandler.ts"],"names":[],"mappings":";;;;;AAAA,mFAA4C;AAC5C,0CAA2C;AAC3C,oFAAmF;AAGnF,2CAA2C;AAsB3C,MAA8B,cAAmF,SAAQ,+BAAwB;IAU/I,MAAM;QACJ,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;QAC9B,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAEnC,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACvC;aACI,IAAI,IAAI,CAAC,MAAM,EAAE;YACpB,OAAO,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;SAC/C;aACI,IAAI,EAAE,KAAK,IAAI,IAAI,EAAE,KAAK,SAAS,EAAE;YACxC,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;SAC3B;QAED,MAAM,KAAK,CAAC,kBAAkB,CAAC,CAAC;IAClC,CAAC;IAES,KAAK,CAAC,YAAY,CAAC,KAAa;QACxC,MAAM,EAAE,cAAc,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QACrD,MAAM,SAAS,GAAG,OAAO,EAAE,SAAS,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,EAAE,UAAU,CAAC;QACvC,MAAM,KAAK,GAAG,cAAc,CAAC,CAAC,CAAC,2BAAE,CAAC,cAAc,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,2BAAE,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAE9G,MAAM,WAAW,GAAwB,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;QAC3D,IAAI,SAAS,KAAK,SAAS,EAAE;YAC3B,WAAW,CAAC,SAAS,GAAG,SAAS,CAAC;SACnC;QACD,IAAI,UAAU,KAAK,SAAS,EAAE;YAC5B,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;SACrC;QACD,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;QAE1B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAE/C,OAAO,IAAI,CAAC,4BAA4B,CAAC,MAAM,EAAE;YAC/C,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE;YAC/B,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE;SAC/B,CAAC,CAAC;IACL,CAAC;IAES,KAAK,CAAC,YAAY,CAAC,MAAc;QACzC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAChD,MAAM,SAAS,GAAG,OAAO,EAAE,SAAS,CAAC;QACrC,MAAM,UAAU,GAAG,OAAO,EAAE,UAAU,CAAC;QACvC,MAAM,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,2BAAE,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,2BAAE,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;QAEnG,MAAM,WAAW,GAAwB,EAAE,MAAM,EAAE,CAAC;QACpD,IAAI,SAAS,KAAK,SAAS,EAAE;YAC3B,WAAW,CAAC,SAAS,GAAG,SAAS,CAAC;SACnC;QACD,IAAI,UAAU,KAAK,SAAS,EAAE;YAC5B,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;SACrC;QACD,WAAW,CAAC,KAAK,GAAG,KAAK,CAAC;QAE1B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAE/C,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,MAAM,EAAE;YACrD,QAAQ,EAAE,IAAI,CAAC,cAAc,EAAE;YAC/B,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE;SAC/B,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,EAAE;YACjC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACrE,IAAI,QAAQ,EAAE;gBACZ,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,wBAAY,CAAC,IAAI,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBAC5E,IAAI,MAAM,EAAE;oBACV,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,MAAM,CAAC;iBAC/B;aACF;SACF;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAES,KAAK,CAAC,SAAS,CAAC,EAAM;QAC9B,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,WAAW,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACjE,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;QACxC,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,wBAAY,CAAC,KAAK,CAAC,CAAC;QACtD,MAAM,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAqB,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;YACxE,MAAM,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC1D,IAAI,QAAQ,EAAE;gBACZ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACvB;YACD,OAAO,MAAM,CAAC;QAChB,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,IAAI,CAAC,2BAAE,CAAC,cAAc,CAAC,uBAAuB,CAAC,IAAI,WAAW,KAAK,SAAS,EAAE;YAC5E,MAAM,UAAU,GAAG,CAAC,YAAY,IAAI,CAAC,CAAC,GAAG,WAAW,CAAC;YACrD,IAAI,CAAC,GAAG,CAAC,UAAU,IAAI,CAAC,CAAC,GAAG,UAAU,EAAE;gBACtC,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC,CAAC;gBACpE,IAAI,WAAW,EAAE;oBACf,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,CAAC,CAAC;iBACzD;aACF;SACF;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,2BAAE,CAAC,OAAO,CAAC,8BAA8B,CAAC,CAAC;QACjF,IAAI,GAAG,CAAC,SAAS,EAAE;YACjB,KAAK,GAAG,IAAI,CAAC,kBAAkB,CAC7B,KAAK,EACL,GAAG,CAAC,SAAS,EACb,IAAI,CAAC,iBAAiB,EAAE,CACzB,CAAC;SACH;QAED,MAAM,IAAI,GAAiB;YACzB,KAAK;YACL,kBAAkB,EAAE,CAAE,MAAM,EAAE,MAAM,CAAE;YACtC,KAAK,EAAE,SAAS;SACjB,CAAC;QAEF,OAAO;YACL,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE;gBACtC,IAAI,EAAE,IAAI,CAAC,cAAc,EAAE,CAAC,cAAc,CAAC,GAAG,CAAC;gBAC/C,KAAK,EAAE,CAAE,IAAI,CAAE;aAChB;SACF,CAAC;IACJ,CAAC;IAES,KAAK,CAAC,kBAAkB;QAChC,MAAM,EAAE,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACnC,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI,EAAE;YACnC,MAAM,KAAK,CAAC,4BAA4B,CAAC,CAAC;SAC3C;QACD,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QACtC,MAAM,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAErD,MAAM,UAAU,GAAG,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE;YAC3C,MAAM,IAAI,GAAsB,EAAE,GAAG,KAAK,EAAE,CAAC;YAC7C,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;aACtB;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC,IAAI,EAAE,CAAC;QAET,OAAO,UAAU,CAAC;IACpB,CAAC;CACF;AArJD,iCAqJC","sourcesContent":["import sc from '../../../SoundCloudContext';\nimport { ModelType } from '../../../model';\nimport ExplodableViewHandler, { ExplodedTrackInfo } from './ExplodableViewHandler';\nimport View from './View';\nimport { RenderedList, RenderedPage } from './ViewHandler';\nimport { RendererType } from './renderers';\nimport BaseRenderer, { RenderedListItem } from './renderers/BaseRenderer';\nimport SetEntity from '../../../entities/SetEntity';\nimport { LoopFetchResult } from '../../../model/BaseModel';\nimport { TrackOrigin } from './TrackViewHandler';\n\nexport interface SetView extends View {\n  search?: string;\n  userId?: string;\n  title?: string;\n  // Flag\n  combinedSearch?: '1';\n}\n\nexport interface SetViewHandlerGetSetsParams {\n  userId?: number;\n  search?: string;\n  pageToken?: string;\n  pageOffset?: number;\n  limit?: number;\n}\n\nexport default abstract class SetViewHandler<T extends SetView, ID extends string | number, E extends SetEntity> extends ExplodableViewHandler<T> {\n\n  protected abstract getSetIdFromView(): ID | null | undefined;\n  protected abstract getSet(id: ID): Promise<{ set: E, tracksOffset?: number, tracksLimit?: number }>;\n  protected abstract getSets(modelParams: SetViewHandlerGetSetsParams): Promise<LoopFetchResult<E>>;\n  protected abstract getSetsListTitle(): string;\n  protected abstract getSetRenderer(): BaseRenderer<E>;\n  protected abstract getVisitLinkTitle(): string;\n  protected abstract getTrackOrigin(set: E): TrackOrigin | null;\n\n  browse(): Promise<RenderedPage> {\n    const view = this.currentView;\n    const id = this.getSetIdFromView();\n\n    if (view.search) {\n      return this.browseSearch(view.search);\n    }\n    else if (view.userId) {\n      return this.browseByUser(Number(view.userId));\n    }\n    else if (id !== null && id !== undefined) {\n      return this.browseSet(id);\n    }\n\n    throw Error('Unknown criteria');\n  }\n\n  protected async browseSearch(query: string): Promise<RenderedPage> {\n    const { combinedSearch, pageRef } = this.currentView;\n    const pageToken = pageRef?.pageToken;\n    const pageOffset = pageRef?.pageOffset;\n    const limit = combinedSearch ? sc.getConfigValue('combinedSearchResults') : sc.getConfigValue('itemsPerPage');\n\n    const modelParams: Record<string, any> = { search: query };\n    if (pageToken !== undefined) {\n      modelParams.pageToken = pageToken;\n    }\n    if (pageOffset !== undefined) {\n      modelParams.pageOffset = pageOffset;\n    }\n    modelParams.limit = limit;\n\n    const result = await this.getSets(modelParams);\n\n    return this.buildPageFromLoopFetchResult(result, {\n      renderer: this.getSetRenderer(),\n      title: this.getSetsListTitle()\n    });\n  }\n\n  protected async browseByUser(userId: number): Promise<RenderedPage> {\n    const { pageRef, inSection } = this.currentView;\n    const pageToken = pageRef?.pageToken;\n    const pageOffset = pageRef?.pageOffset;\n    const limit = inSection ? sc.getConfigValue('itemsPerSection') : sc.getConfigValue('itemsPerPage');\n\n    const modelParams: Record<string, any> = { userId };\n    if (pageToken !== undefined) {\n      modelParams.pageToken = pageToken;\n    }\n    if (pageOffset !== undefined) {\n      modelParams.pageOffset = pageOffset;\n    }\n    modelParams.limit = limit;\n\n    const result = await this.getSets(modelParams);\n\n    const page = this.buildPageFromLoopFetchResult(result, {\n      renderer: this.getSetRenderer(),\n      title: this.getSetsListTitle()\n    });\n\n    if (!inSection && page.navigation) {\n      const userData = await this.getModel(ModelType.User).getUser(userId);\n      if (userData) {\n        const header = this.getRenderer(RendererType.User).renderToHeader(userData);\n        if (header) {\n          page.navigation.info = header;\n        }\n      }\n    }\n\n    return page;\n  }\n\n  protected async browseSet(id: ID): Promise<RenderedPage> {\n    const { set, tracksOffset, tracksLimit } = await this.getSet(id);\n    const origin = this.getTrackOrigin(set);\n    const renderer = this.getRenderer(RendererType.Track);\n    const listItems = set.tracks.reduce<RenderedListItem[]>((result, track) => {\n      const rendered = renderer.renderToListItem(track, origin);\n      if (rendered) {\n        result.push(rendered);\n      }\n      return result;\n    }, []);\n\n    if (!sc.getConfigValue('loadFullPlaylistAlbum') && tracksLimit !== undefined) {\n      const nextOffset = (tracksOffset || 0) + tracksLimit;\n      if ((set.trackCount || 0) > nextOffset) {\n        const nextPageRef = this.constructPageRef(nextOffset.toString(), 0);\n        if (nextPageRef) {\n          listItems.push(this.constructNextPageItem(nextPageRef));\n        }\n      }\n    }\n\n    let title = this.currentView.title || sc.getI18n('SOUNDCLOUD_LIST_TITLE_TRACKS');\n    if (set.permalink) {\n      title = this.addLinkToListTitle(\n        title,\n        set.permalink,\n        this.getVisitLinkTitle()\n      );\n    }\n\n    const list: RenderedList = {\n      title,\n      availableListViews: [ 'list', 'grid' ],\n      items: listItems\n    };\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        info: this.getSetRenderer().renderToHeader(set),\n        lists: [ list ]\n      }\n    };\n  }\n\n  protected async getTracksOnExplode(): Promise<ExplodedTrackInfo | ExplodedTrackInfo[]> {\n    const id = this.getSetIdFromView();\n    if (id === undefined || id === null) {\n      throw Error('Id of target not specified');\n    }\n    const { set } = await this.getSet(id);\n    const origin = set ? this.getTrackOrigin(set) : null;\n\n    const trackInfos = set?.tracks.map((track) => {\n      const info: ExplodedTrackInfo = { ...track };\n      if (origin) {\n        info.origin = origin;\n      }\n      return info;\n    }) || [];\n\n    return trackInfos;\n  }\n}\n"]}