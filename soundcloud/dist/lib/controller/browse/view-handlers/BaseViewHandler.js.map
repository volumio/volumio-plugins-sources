{"version":3,"file":"BaseViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/BaseViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import sc from '../../../SoundCloudContext';\nimport Model, { ModelOf, ModelType } from '../../../model';\nimport BaseModel, { LoopFetchResult } from '../../../model/BaseModel';\nimport { QueueItem } from './ExplodableViewHandler';\nimport View, { PageRef } from './View';\nimport ViewHandler, { RenderedList, RenderedPage } from './ViewHandler';\nimport ViewHelper from './ViewHelper';\nimport Renderer, { RendererOf, RendererType } from './renderers';\nimport BaseRenderer, { RenderedListItem } from './renderers/BaseRenderer';\n\nexport type BuildPageFromLoopFetchResultParams<E> = ({\n  renderer: BaseRenderer<E>,\n  getRenderer?: undefined,\n  render?: undefined,\n} | {\n  renderer?: undefined,\n  getRenderer: (item: E) => BaseRenderer<E> | null,\n  render?: undefined,\n} | {\n  renderer?: undefined,\n  getRenderer?: undefined,\n  render: (item: E) => RenderedListItem | null,\n}) & {\n  title?: string\n}\n\nexport default class BaseViewHandler<V extends View> implements ViewHandler {\n\n  #uri: string;\n  #currentView: V;\n  #previousViews: View[];\n  #models: Partial<Record<ModelType, BaseModel>>;\n  #renderers: Partial<Record<RendererType, BaseRenderer<any>>>;\n\n  constructor(uri: string, currentView: V, previousViews: View[]) {\n    this.#uri = uri;\n    this.#currentView = currentView;\n    this.#previousViews = previousViews;\n    this.#models = {};\n    this.#renderers = {};\n  }\n\n  async browse(): Promise<RenderedPage> {\n    return {};\n  }\n\n  explode(): Promise<QueueItem[]> {\n    throw Error('Operation not supported');\n  }\n\n  get uri(): string {\n    return this.#uri;\n  }\n\n  get currentView(): V {\n    return this.#currentView;\n  }\n\n  get previousViews(): View[] {\n    return this.#previousViews;\n  }\n\n  protected getModel<T extends ModelType>(type: T): ModelOf<T> {\n    if (!this.#models[type]) {\n      let model;\n      switch (type) {\n        case ModelType.Album:\n          model = Model.getInstance(ModelType.Album);\n          break;\n        case ModelType.Selection:\n          model = Model.getInstance(ModelType.Selection);\n          break;\n        case ModelType.Track:\n          model = Model.getInstance(ModelType.Track);\n          break;\n        case ModelType.Playlist:\n          model = Model.getInstance(ModelType.Playlist);\n          break;\n        case ModelType.User:\n          model = Model.getInstance(ModelType.User);\n          break;\n        case ModelType.History:\n          model = Model.getInstance(ModelType.History);\n          break;\n        case ModelType.Me:\n          model = Model.getInstance(ModelType.Me);\n          break;\n        default:\n          throw Error(`Unknown model type: ${type}`);\n      }\n      this.#models[type] = model;\n    }\n\n    return this.#models[type] as ModelOf<T>;\n  }\n\n  protected getRenderer<T extends RendererType>(type: T): RendererOf<T> {\n    if (!this.#renderers[type]) {\n      let renderer: BaseRenderer<any, any>;\n      switch (type) {\n        case RendererType.Album:\n          renderer = Renderer.getInstance(RendererType.Album, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        case RendererType.Playlist:\n          renderer = Renderer.getInstance(RendererType.Playlist, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        case RendererType.Track:\n          renderer = Renderer.getInstance(RendererType.Track, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        case RendererType.User:\n          renderer = Renderer.getInstance(RendererType.User, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        default:\n          throw Error(`Unknown renderer type: ${type}`);\n      }\n      this.#renderers[type] = renderer;\n    }\n    return this.#renderers[type] as RendererOf<T>;\n  }\n\n  protected constructPrevUri() {\n    return ViewHelper.constructPrevUri(this.#currentView, this.#previousViews);\n  }\n\n  #constructNextUri(nextPageRef: PageRef) {\n    const segments = this.#previousViews.map((view) => ViewHelper.constructUriSegmentFromView(view));\n\n    const newView: View = {\n      ...this.#currentView,\n      pageRef: nextPageRef,\n      noExplode: '1'\n    };\n\n    const prevPageRefs = this.#currentView.prevPageRefs || [];\n    if (this.#currentView.pageRef) {\n      prevPageRefs.push(this.#currentView.pageRef);\n    }\n    if (prevPageRefs.length > 0) {\n      newView.prevPageRefs = prevPageRefs;\n    }\n    else {\n      delete newView.prevPageRefs;\n    }\n\n    segments.push(`${ViewHelper.constructUriSegmentFromView(newView, [ 'noExplode' ])}`);\n\n    return segments.join('/');\n  }\n\n  protected constructNextPageItem(data: PageRef | string): RenderedListItem {\n    return {\n      service: 'soundcloud',\n      type: 'item-no-menu',\n      'title': sc.getI18n('SOUNDCLOUD_MORE'),\n      'uri': typeof data === 'string' ? data : this.#constructNextUri(data),\n      'icon': 'fa fa-arrow-circle-right'\n    };\n  }\n\n  protected constructPageRef(pageToken?: string | null, pageOffset?: number): PageRef | null {\n    if (!pageToken && !pageOffset) {\n      return null;\n    }\n    return {\n      pageToken: pageToken || '',\n      pageOffset: pageOffset || 0\n    };\n  }\n\n  protected addLinkToListTitle(title = '', link: string, linkText: string) {\n    if (!ViewHelper.supportsEnhancedTitles()) {\n      return title;\n    }\n    return `<div style=\"display: flex; width: 100%; align-items: baseline;\">\n            <div>${title}</div>\n            <div style=\"flex-grow: 1; text-align: right; font-size: small;\">\n            <i class=\"fa fa-soundcloud\" style=\"position: relative; top: 1px; margin-right: 2px; font-size: 16px;\"></i>\n            <a target=\"_blank\" style=\"color: #50b37d;\" href=\"${link}\">\n                ${linkText}\n            </a>\n            </div>\n        </div>\n    `;\n  }\n\n  protected buildPageFromLoopFetchResult<E>(result: LoopFetchResult<E>, params: BuildPageFromLoopFetchResultParams<E>): RenderedPage {\n    const { title = '' } = params;\n    const listItems = result.items.reduce<RenderedListItem[]>((result, item) => {\n      let rendered: RenderedListItem | null = null;\n      if (params.getRenderer) {\n        const renderer = params.getRenderer(item);\n        rendered = renderer?.renderToListItem(item) || null;\n      }\n      else if (params.render) {\n        rendered = params.render(item);\n      }\n      else if (params.renderer) {\n        rendered = params.renderer.renderToListItem(item);\n      }\n      if (rendered) {\n        result.push(rendered);\n      }\n      return result;\n    }, []);\n    const nextPageRef = this.constructPageRef(result.nextPageToken, result.nextPageOffset);\n    if (nextPageRef) {\n      listItems.push(this.constructNextPageItem(nextPageRef));\n    }\n\n    const list: RenderedList = {\n      title: this.currentView.title || title,\n      availableListViews: [ 'list', 'grid' ],\n      items: listItems\n    };\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        lists: [ list ]\n      }\n    };\n  }\n}\n"]}