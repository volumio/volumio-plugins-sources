{"version":3,"file":"UserRenderer.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderers/UserRenderer.ts"],"names":[],"mappings":";;;;;AAAA,sFAA+C;AAG/C,+DAAuC;AACvC,kEAAgF;AAEhF,MAAqB,YAAa,SAAQ,sBAAwB;IAEhE,gBAAgB,CAAC,IAAgB;QAC/B,IAAI,OAAO,IAAI,CAAC,EAAE,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAC7D,OAAO,IAAI,CAAC;SACb;QAED,MAAM,QAAQ,GAAa;YACzB,IAAI,EAAE,OAAO;YACb,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;SAC3B,CAAC;QAEF,OAAO;YACL,OAAO,EAAE,YAAY;YACrB,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,IAAI,CAAC,QAAQ;YACpB,MAAM,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ;YACtC,KAAK,EAAE,2BAAE,CAAC,OAAO,CAAC,8BAA8B,CAAC;YACjD,QAAQ,EAAE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,EAAE;YAChD,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,oBAAU,CAAC,2BAA2B,CAAC,QAAQ,CAAC,EAAE;SACvE,CAAC;IACJ,CAAC;IAED,cAAc,CAAC,IAAgB;QAC7B,OAAO;YACL,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,OAAO,EAAE,YAAY;YACrB,IAAI,EAAE,OAAO;YACb,KAAK,EAAE,IAAI,CAAC,QAAQ;YACpB,MAAM,EAAE,IAAI,CAAC,QAAQ;YACrB,IAAI,EAAE,IAAI,CAAC,QAAQ;YACnB,QAAQ,EAAE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,aAAa,EAAE;SACjD,CAAC;IACJ,CAAC;CACF;AAlCD,+BAkCC","sourcesContent":["import sc from '../../../../SoundCloudContext';\nimport UserEntity from '../../../../entities/UserEntity';\nimport { UserView } from '../UserViewHandler';\nimport ViewHelper from '../ViewHelper';\nimport BaseRenderer, { RenderedHeader, RenderedListItem } from './BaseRenderer';\n\nexport default class UserRenderer extends BaseRenderer<UserEntity> {\n\n  renderToListItem(data: UserEntity): RenderedListItem | null {\n    if (typeof data.id !== 'number' || !data.id || !data.username) {\n      return null;\n    }\n\n    const userView: UserView = {\n      name: 'users',\n      userId: data.id.toString()\n    };\n\n    return {\n      service: 'soundcloud',\n      type: 'folder',\n      title: data.username,\n      artist: data.fullName || data.location,\n      album: sc.getI18n('SOUNDCLOUD_USER_PARSER_ALBUM'),\n      albumart: data.thumbnail || this.getAvatarIcon(),\n      uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(userView)}`\n    };\n  }\n\n  renderToHeader(data: UserEntity): RenderedHeader | null {\n    return {\n      uri: this.uri,\n      service: 'soundcloud',\n      type: 'album',\n      title: data.username,\n      artist: data.fullName,\n      year: data.location,\n      albumart: data.thumbnail || this.getAvatarIcon()\n    };\n  }\n}\n"]}