{"version":3,"file":"TrackRenderer.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderers/TrackRenderer.ts"],"names":[],"mappings":";;;;;AAAA,sFAA+C;AAG/C,+DAAuC;AACvC,kEAAgE;AAEhE,MAAqB,aAAc,SAAQ,sBAAyB;IAElE,gBAAgB,CAAC,IAAiB,EAAE,MAA2B;QAC7D,IAAI,OAAO,IAAI,CAAC,EAAE,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YAC1D,OAAO,IAAI,CAAC;SACb;QAED,IAAI,WAAsC,CAAC;QAC3C,IAAI,UAAU,GAAG,IAAI,CAAC,KAAK,IAAI,2BAAE,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;QAC3E,QAAQ,IAAI,CAAC,aAAa,EAAE;YAC1B,KAAK,SAAS;gBACZ,WAAW,GAAG,2BAAE,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;gBAC5D,UAAU,GAAG,EAAE,CAAC;gBAChB,MAAM;YACR,KAAK,SAAS;gBACZ,WAAW,GAAG,2BAAE,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;gBAC5D,IAAI,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE;oBACvB,WAAW,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACzC;gBACD,MAAM;YACR;gBACE,WAAW,GAAG,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC;SACrC;QAED,MAAM,SAAS,GAAc;YAC3B,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;SAC5B,CAAC;QACF,IAAI,MAAM,EAAE;YACV,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;SAC3B;QAED,MAAM,MAAM,GAAqB;YAC/B,OAAO,EAAE,YAAY;YACrB,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,MAAM,EAAE,WAAW;YACnB,KAAK,EAAE,UAAU;YACjB,QAAQ,EAAE,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,iBAAiB,EAAE;YACpD,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,oBAAU,CAAC,2BAA2B,CAAC,SAAS,CAAC,EAAE;SACxE,CAAC;QAEF,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;YAC/B,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC;SACpD;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAhDD,gCAgDC","sourcesContent":["import sc from '../../../../SoundCloudContext';\nimport TrackEntity from '../../../../entities/TrackEntity';\nimport { TrackOrigin, TrackView } from '../TrackViewHandler';\nimport ViewHelper from '../ViewHelper';\nimport BaseRenderer, { RenderedListItem } from './BaseRenderer';\n\nexport default class TrackRenderer extends BaseRenderer<TrackEntity> {\n\n  renderToListItem(data: TrackEntity, origin?: TrackOrigin | null): RenderedListItem | null {\n    if (typeof data.id !== 'number' || !data.id || !data.title) {\n      return null;\n    }\n\n    let artistLabel: string | null | undefined;\n    let albumLabel = data.album || sc.getI18n('SOUNDCLOUD_TRACK_PARSER_ALBUM');\n    switch (data.playableState) {\n      case 'blocked':\n        artistLabel = sc.getI18n('SOUNDCLOUD_TRACK_PARSER_BLOCKED');\n        albumLabel = '';\n        break;\n      case 'snipped':\n        artistLabel = sc.getI18n('SOUNDCLOUD_TRACK_PARSER_SNIPPED');\n        if (data.user?.username) {\n          artistLabel += ` ${data.user.username}`;\n        }\n        break;\n      default:\n        artistLabel = data.user?.username;\n    }\n\n    const trackView: TrackView = {\n      name: 'track',\n      trackId: data.id.toString()\n    };\n    if (origin) {\n      trackView.origin = origin;\n    }\n\n    const result: RenderedListItem = {\n      service: 'soundcloud',\n      type: 'song',\n      title: data.title,\n      artist: artistLabel,\n      album: albumLabel,\n      albumart: data.thumbnail || this.getSoundCloudIcon(),\n      uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(trackView)}`\n    };\n\n    if (data.duration !== undefined) {\n      result.duration = Math.round(data.duration / 1000);\n    }\n\n    return result;\n  }\n}\n"]}