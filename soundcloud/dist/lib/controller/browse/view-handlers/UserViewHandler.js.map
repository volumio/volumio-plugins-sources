{"version":3,"file":"UserViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/UserViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import sc from '../../../SoundCloudContext';\nimport { ModelType } from '../../../model';\nimport { UserModelGetUsersParams } from '../../../model/UserModel';\nimport { AlbumView } from './AlbumViewHandler';\nimport ExplodableViewHandler, { ExplodedTrackInfo } from './ExplodableViewHandler';\nimport { PlaylistView } from './PlaylistViewHandler';\nimport { TrackView } from './TrackViewHandler';\nimport View from './View';\nimport { RenderedList, RenderedPage } from './ViewHandler';\nimport ViewHandlerFactory from './ViewHandlerFactory';\nimport ViewHelper from './ViewHelper';\nimport { RendererType } from './renderers';\n\nexport interface UserView extends View {\n  name: 'users';\n  userId?: string;\n  search?: string;\n  myFollowing?: '1';\n  combinedSearch?: '1';\n  title?: string;\n}\n\nexport default class UserViewHandler extends ExplodableViewHandler<UserView> {\n\n  async browse(): Promise<RenderedPage> {\n    const view = this.currentView;\n\n    if (view.userId) {\n      return this.browseUser(Number(view.userId));\n    }\n\n    const { pageRef, search, myFollowing, combinedSearch } = view;\n    const pageToken = pageRef?.pageToken;\n    const pageOffset = pageRef?.pageOffset;\n\n    const modelParams: UserModelGetUsersParams = {};\n\n    if (pageToken) {\n      modelParams.pageToken = pageRef.pageToken;\n    }\n    if (pageOffset) {\n      modelParams.pageOffset = pageRef.pageOffset;\n    }\n\n    if (search) {\n      modelParams.search = search;\n    }\n    else if (myFollowing) {\n      modelParams.myFollowing = true;\n    }\n\n    if (search && combinedSearch) {\n      modelParams.limit = sc.getConfigValue('combinedSearchResults');\n    }\n    else {\n      modelParams.limit = sc.getConfigValue('itemsPerPage');\n    }\n\n    const title = myFollowing ? sc.getI18n('SOUNDCLOUD_LIST_TITLE_FOLLOWING') : sc.getI18n('SOUNDCLOUD_LIST_TITLE_USERS');\n    const result = await this.getModel(ModelType.User).getUsers(modelParams);\n    return this.buildPageFromLoopFetchResult(result, {\n      renderer: this.getRenderer(RendererType.User),\n      title\n    });\n  }\n\n  protected async browseUser(userId: number) {\n    const albumView: AlbumView = {\n      name: 'albums',\n      userId: userId.toString(),\n      inSection: '1',\n      title: sc.getI18n('SOUNDCLOUD_LIST_TITLE_ALBUMS')\n    };\n    const albumsUri = `${this.uri}/${ViewHelper.constructUriSegmentFromView(albumView, true)}`;\n    const playlistView: PlaylistView = {\n      name: 'playlists',\n      userId: userId.toString(),\n      inSection: '1',\n      title: sc.getI18n('SOUNDCLOUD_LIST_TITLE_PLAYLISTS')\n    };\n    const playlistsUri = `${this.uri}/${ViewHelper.constructUriSegmentFromView(playlistView, true)}`;\n    const trackView: TrackView = {\n      name: 'tracks',\n      userId: userId.toString(),\n      inSection: '1',\n      title: sc.getI18n('SOUNDCLOUD_LIST_TITLE_TRACKS')\n    };\n    const tracksUri = `${this.uri}/${ViewHelper.constructUriSegmentFromView(trackView, true)}`;\n\n    const fetches = [\n      this.#doFetch(albumsUri),\n      this.#doFetch(playlistsUri),\n      this.#doFetch(tracksUri)\n    ];\n\n    const subPages = await Promise.all(fetches);\n    const lists = subPages.reduce<RenderedList[]>((result, page) => {\n      const list = page.navigation?.lists?.[0];\n      if (list && list.items.length > 0) {\n        result.push(list);\n      }\n      return result;\n    }, []);\n\n    const page: RenderedPage = {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        lists\n      }\n    };\n\n    try {\n      const userData = await this.getModel(ModelType.User).getUser(userId);\n      if (userData) {\n        const header = this.getRenderer(RendererType.User).renderToHeader(userData);\n        if (header && page.navigation) {\n          page.navigation.info = header;\n          if (userData.permalink && userData.username && lists.length > 0) {\n            const title = lists[0].title;\n            lists[0].title = this.addLinkToListTitle(\n              title, userData.permalink, sc.getI18n('SOUNDCLOUD_VISIT_LINK_USER', userData.username));\n          }\n        }\n      }\n    }\n    catch (error: any) {\n      // Do nothing\n    }\n\n    return page;\n  }\n\n  #doFetch(uri: string) {\n    const handler = ViewHandlerFactory.getHandler(uri);\n    return handler.browse();\n  }\n\n  protected async getTracksOnExplode(): Promise<ExplodedTrackInfo | ExplodedTrackInfo[]> {\n    const { userId } = this.currentView;\n    if (userId === undefined) {\n      throw Error('User ID not specified');\n    }\n    const tracks = await this.getModel(ModelType.Track).getTracks({\n      userId: Number(userId),\n      limit: sc.getConfigValue('itemsPerPage')\n    });\n\n    return tracks.items;\n  }\n}\n"]}