{"version":3,"file":"BandViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/BandViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import bandcamp from '../../../BandcampContext';\nimport TrackEntity from '../../../entities/TrackEntity';\nimport { ModelType } from '../../../model';\nimport { BandModelGetDiscographyParams, BandModelGetLabelArtistsParams } from '../../../model/BandModel';\nimport UIHelper, { UILink } from '../../../util/UIHelper';\nimport ExplodableViewHandler from './ExplodableViewHandler';\nimport View from './View';\nimport { RenderedList, RenderedPage } from './ViewHandler';\nimport ViewHelper from './ViewHelper';\nimport { RendererType } from './renderers';\nimport { RenderedListItem } from './renderers/BaseRenderer';\n\nexport interface BandView extends View {\n  name: 'band';\n  bandUrl: string;\n  view?: 'discography' | 'artists';\n}\n\nexport default class BandViewHandler extends ExplodableViewHandler<BandView> {\n\n  async browse(): Promise<RenderedPage> {\n    const bandUrl = this.currentView.bandUrl;\n    const bandInfo = await this.getModel(ModelType.Band).getBand(bandUrl);\n    const header = this.getRenderer(RendererType.Band).renderToHeader(bandInfo);\n    let backToList: RenderedList | null = null;\n    if (bandInfo.type === 'artist' && bandInfo.label?.url) {\n      // Check if we're coming from the label:\n      // Label -> artist ; or\n      // Label -> album -> artist\n      const _getBackToUri = (labelUrl: string, matchLevel: number) => {\n        const prevViews = this.previousViews;\n        const viewToMatch = prevViews[prevViews.length - (matchLevel + 1)];\n        if (viewToMatch && viewToMatch.name === 'band' && viewToMatch.bandUrl === labelUrl) {\n          return ViewHelper.constructUriFromViews(prevViews.slice(0, prevViews.length - matchLevel));\n        }\n        return null;\n      };\n\n      let labelLinkListItem: RenderedListItem;\n      const backToUri = _getBackToUri(bandInfo.label.url, 0) || _getBackToUri(bandInfo.label.url, 1);\n      if (backToUri) {\n        labelLinkListItem = {\n          service: 'bandcamp',\n          type: 'item-no-menu',\n          title: bandcamp.getI18n('BANDCAMP_BACK_TO', bandInfo.label.name),\n          uri: backToUri\n        };\n      }\n      else {\n        const bandView: BandView = {\n          name: 'band',\n          bandUrl: bandInfo.label.url\n        };\n        labelLinkListItem = {\n          service: 'bandcamp',\n          type: 'item-no-menu',\n          title: bandInfo.label.name,\n          uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(bandView)}`\n        };\n      }\n      labelLinkListItem.icon = 'fa fa-link';\n\n      backToList = {\n        availableListViews: [ 'list' ],\n        items: [ labelLinkListItem ]\n      };\n    }\n\n    let contentLists: RenderedList[];\n    switch (bandInfo.type) {\n      case 'artist':\n        contentLists = await this.#getContentListsForArtist(bandUrl);\n        break;\n      case 'label':\n        contentLists = await this.#getContentListsForLabel(bandUrl);\n        break;\n      default:\n        contentLists = [];\n    }\n\n    if (backToList) {\n      contentLists.unshift(backToList);\n    }\n\n    const viewBandExternalLink: UILink = {\n      url: bandUrl,\n      text: this.#getViewLinkText(bandInfo.type),\n      icon: { type: 'bandcamp' },\n      target: '_blank'\n    };\n\n    if (contentLists.length > 1) {\n      contentLists[1].title = UIHelper.constructListTitleWithLink(contentLists[1].title || '', viewBandExternalLink, false);\n    }\n    else {\n      contentLists[0].title = UIHelper.constructListTitleWithLink(contentLists[0].title || '', viewBandExternalLink, true);\n    }\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        info: header,\n        lists: contentLists\n      }\n    };\n  }\n\n  async #getContentListsForArtist(artistUrl: string) {\n    return [ await this.#getDiscographyList(artistUrl) ];\n  }\n\n  async #getContentListsForLabel(labelUrl: string): Promise<RenderedList[]> {\n    let contentsList;\n    let viewLinkListItem: RenderedListItem;\n    if (this.currentView.view === 'artists') {\n      contentsList = await this.#getLabelArtistsList(labelUrl);\n      const bandView: BandView = {\n        name: 'band',\n        bandUrl: labelUrl,\n        view: 'discography'\n      };\n      viewLinkListItem = {\n        service: 'bandcamp',\n        type: 'item-no-menu',\n        icon: 'fa fa-music',\n        title: bandcamp.getI18n('BANDCAMP_DISCOGRAPHY'),\n        uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(bandView)}`\n      };\n    }\n    else {\n      contentsList = await this.#getDiscographyList(labelUrl);\n      const bandView: BandView = {\n        name: 'band',\n        bandUrl: labelUrl,\n        view: 'artists'\n      };\n      viewLinkListItem = {\n        service: 'bandcamp',\n        type: 'item-no-menu',\n        icon: 'fa fa-users',\n        title: bandcamp.getI18n('BANDCAMP_LABEL_ARTISTS'),\n        uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(bandView)}`\n      };\n    }\n    const linksList: RenderedList = {\n      availableListViews: [ 'list' ],\n      items: [ viewLinkListItem ]\n    };\n\n    return [ linksList, contentsList ];\n  }\n\n  async #getDiscographyList(bandUrl: string): Promise<RenderedList> {\n    const view = this.currentView;\n    const model = this.getModel(ModelType.Band);\n    const albumRenderer = this.getRenderer(RendererType.Album);\n    const trackRenderer = this.getRenderer(RendererType.Track);\n\n    const modelParams: BandModelGetDiscographyParams = {\n      bandUrl,\n      limit: bandcamp.getConfigValue('itemsPerPage', 47)\n    };\n\n    if (view.pageRef) {\n      modelParams.pageToken = view.pageRef.pageToken;\n      modelParams.pageOffset = view.pageRef.pageOffset;\n    }\n\n    const discog = await model.getDiscography(modelParams);\n    const listItems = discog.items.reduce<RenderedListItem[]>((result, discogItem) => {\n      let rendered;\n      if (discogItem.type === 'album') {\n        rendered = albumRenderer.renderToListItem(discogItem);\n      }\n      else { // Track\n        rendered = trackRenderer.renderToListItem(discogItem, true, true, false);\n      }\n      if (rendered) {\n        result.push(rendered);\n      }\n      return result;\n    }, []);\n\n    const nextPageRef = this.constructPageRef(discog.nextPageToken, discog.nextPageOffset);\n    if (nextPageRef) {\n      const nextUri = this.constructNextUri(nextPageRef);\n      listItems.push(this.constructNextPageItem(nextUri));\n    }\n\n    return {\n      title: bandcamp.getI18n('BANDCAMP_DISCOGRAPHY'),\n      availableListViews: [ 'list', 'grid' ],\n      items: listItems\n    };\n  }\n\n  async #getLabelArtistsList(labelUrl: string): Promise<RenderedList> {\n\n    const modelParams: BandModelGetLabelArtistsParams = {\n      labelUrl,\n      limit: bandcamp.getConfigValue('itemsPerPage', 47)\n    };\n\n    if (this.currentView.pageRef) {\n      modelParams.pageToken = this.currentView.pageRef.pageToken;\n      modelParams.pageOffset = this.currentView.pageRef.pageOffset;\n    }\n\n    const artists = await this.getModel(ModelType.Band).getLabelArtists(modelParams);\n    const artistRenderer = this.getRenderer(RendererType.Band);\n    const listItems = artists.items.reduce<RenderedListItem[]>((result, artist) => {\n      const rendered = artistRenderer.renderToListItem(artist);\n      if (rendered) {\n        result.push(rendered);\n      }\n      return result;\n    }, []);\n\n    const nextPageRef = this.constructPageRef(artists.nextPageToken, artists.nextPageOffset);\n    if (nextPageRef) {\n      const nextUri = this.constructNextUri(nextPageRef);\n      listItems.push(this.constructNextPageItem(nextUri));\n    }\n\n    return {\n      title: bandcamp.getI18n('BANDCAMP_LABEL_ARTISTS'),\n      availableListViews: [ 'list', 'grid' ],\n      items: listItems\n    };\n  }\n\n  #getViewLinkText(bandType: string) {\n    switch (bandType) {\n      case 'artist':\n        return bandcamp.getI18n('BANDCAMP_VIEW_LINK_ARTIST');\n      case 'label':\n        return bandcamp.getI18n('BANDCAMP_VIEW_LINK_LABEL');\n      default:\n        return '';\n    }\n  }\n\n  async getTracksOnExplode(): Promise<TrackEntity | TrackEntity[]> {\n    const bandUrl = this.currentView.bandUrl;\n    if (!bandUrl) {\n      throw Error('Band URL is missing');\n    }\n\n    const modelParams: BandModelGetDiscographyParams = {\n      limit: 1,\n      bandUrl\n    };\n\n    const discog = await this.getModel(ModelType.Band).getDiscography(modelParams);\n    const first = discog.items[0] || {};\n    if (first.type === 'track' && first.url) {\n      const trackModel = this.getModel(ModelType.Track);\n      return trackModel.getTrack(first.url);\n    }\n    else if (first.type === 'album' && first.url) {\n      const albumModel = this.getModel(ModelType.Album);\n      const album = await albumModel.getAlbum(first.url);\n      return album.tracks || [];\n    }\n\n    return [];\n\n  }\n}\n"]}