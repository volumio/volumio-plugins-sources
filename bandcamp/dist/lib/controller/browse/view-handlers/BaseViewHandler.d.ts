import { ModelType } from '../../../model';
import type AlbumModel from '../../../model/AlbumModel';
import type ArticleModel from '../../../model/ArticleModel';
import type BandModel from '../../../model/BandModel';
import type DiscoverModel from '../../../model/DiscoverModel';
import type FanModel from '../../../model/FanModel';
import type SearchModel from '../../../model/SearchModel';
import type ShowModel from '../../../model/ShowModel';
import type TagModel from '../../../model/TagModel';
import type TrackModel from '../../../model/TrackModel';
import { type ExplodedTrackInfo } from './ExplodableViewHandler';
import { type PageRef } from './View';
import type View from './View';
import { type RenderedPage } from './ViewHandler';
import type ViewHandler from './ViewHandler';
import { RendererType } from './renderers';
import type AlbumRenderer from './renderers/AlbumRenderer';
import type ArticleRenderer from './renderers/ArticleRenderer';
import type BandRenderer from './renderers/BandRenderer';
import { type RenderedListItem } from './renderers/BaseRenderer';
import type SearchResultRenderer from './renderers/SearchResultParser';
import type ShowRenderer from './renderers/ShowRenderer';
import type TagRenderer from './renderers/TagRenderer';
import type TrackRenderer from './renderers/TrackRenderer';
export default class BaseViewHandler<V extends View> implements ViewHandler {
    #private;
    constructor(uri: string, currentView: V, previousViews: View[]);
    browse(): Promise<RenderedPage>;
    explode(): Promise<ExplodedTrackInfo[]>;
    get uri(): string;
    get currentView(): V;
    get previousViews(): View[];
    getModel(type: ModelType.Album): AlbumModel;
    getModel(type: ModelType.Article): ArticleModel;
    getModel(type: ModelType.Band): BandModel;
    getModel(type: ModelType.Discover): DiscoverModel;
    getModel(type: ModelType.Fan): FanModel;
    getModel(type: ModelType.Search): SearchModel;
    getModel(type: ModelType.Show): ShowModel;
    getModel(type: ModelType.Tag): TagModel;
    getModel(type: ModelType.Track): TrackModel;
    getRenderer(type: RendererType.Album): AlbumRenderer;
    getRenderer(type: RendererType.Band): BandRenderer;
    getRenderer(type: RendererType.Article): ArticleRenderer;
    getRenderer(type: RendererType.SearchResult): SearchResultRenderer;
    getRenderer(type: RendererType.Show): ShowRenderer;
    getRenderer(type: RendererType.Tag): TagRenderer;
    getRenderer(type: RendererType.Track): TrackRenderer;
    constructPrevUri(): string;
    constructNextUri(nextPageRef: PageRef): string;
    constructNextPageItem(nextUri: string, title?: string): RenderedListItem;
    constructPageRef(pageToken?: string | null, pageOffset?: number): PageRef | null;
}
//# sourceMappingURL=BaseViewHandler.d.ts.map