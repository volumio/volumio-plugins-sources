{"version":3,"file":"BaseViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/BaseViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import Model, { ModelType } from '../../../model';\nimport AlbumModel from '../../../model/AlbumModel';\nimport ArticleModel from '../../../model/ArticleModel';\nimport BandModel from '../../../model/BandModel';\nimport BaseModel from '../../../model/BaseModel';\nimport DiscoverModel from '../../../model/DiscoverModel';\nimport FanModel from '../../../model/FanModel';\nimport SearchModel from '../../../model/SearchModel';\nimport ShowModel from '../../../model/ShowModel';\nimport TagModel from '../../../model/TagModel';\nimport TrackModel from '../../../model/TrackModel';\nimport UIHelper from '../../../util/UIHelper';\nimport { ExplodedTrackInfo } from './ExplodableViewHandler';\nimport View, { PageRef } from './View';\nimport ViewHandler, { RenderedPage } from './ViewHandler';\nimport ViewHelper from './ViewHelper';\nimport Renderer, { RendererType } from './renderers';\nimport AlbumRenderer from './renderers/AlbumRenderer';\nimport ArticleRenderer from './renderers/ArticleRenderer';\nimport BandRenderer from './renderers/BandRenderer';\nimport BaseRenderer, { RenderedListItem } from './renderers/BaseRenderer';\nimport SearchResultRenderer from './renderers/SearchResultParser';\nimport ShowRenderer from './renderers/ShowRenderer';\nimport TagRenderer from './renderers/TagRenderer';\nimport TrackRenderer from './renderers/TrackRenderer';\n\nexport default class BaseViewHandler<V extends View> implements ViewHandler {\n\n  #uri: string;\n  #currentView: V;\n  #previousViews: View[];\n  #models: Partial<Record<ModelType, BaseModel>>;\n  #renderers: Partial<Record<RendererType, BaseRenderer<any>>>;\n\n  constructor(uri: string, currentView: V, previousViews: View[]) {\n    this.#uri = uri;\n    this.#currentView = currentView;\n    this.#previousViews = previousViews;\n    this.#models = {};\n    this.#renderers = {};\n  }\n\n  async browse(): Promise<RenderedPage> {\n    return {};\n  }\n\n  explode(): Promise<ExplodedTrackInfo[]> {\n    throw Error('Operation not supported');\n  }\n\n  get uri(): string {\n    return this.#uri;\n  }\n\n  get currentView(): V {\n    return this.#currentView;\n  }\n\n  get previousViews(): View[] {\n    return this.#previousViews;\n  }\n\n  getModel(type: ModelType.Album): AlbumModel;\n  getModel(type: ModelType.Article): ArticleModel;\n  getModel(type: ModelType.Band): BandModel;\n  getModel(type: ModelType.Discover): DiscoverModel;\n  getModel(type: ModelType.Fan): FanModel;\n  getModel(type: ModelType.Search): SearchModel;\n  getModel(type: ModelType.Show): ShowModel;\n  getModel(type: ModelType.Tag): TagModel;\n  getModel(type: ModelType.Track): TrackModel;\n  getModel(type: ModelType) {\n    if (!this.#models[type]) {\n      let model;\n      switch (type) {\n        case ModelType.Album:\n          model = Model.getInstance(ModelType.Album);\n          break;\n        case ModelType.Article:\n          model = Model.getInstance(ModelType.Article);\n          break;\n        case ModelType.Band:\n          model = Model.getInstance(ModelType.Band);\n          break;\n        case ModelType.Discover:\n          model = Model.getInstance(ModelType.Discover);\n          break;\n        case ModelType.Fan:\n          model = Model.getInstance(ModelType.Fan);\n          break;\n        case ModelType.Search:\n          model = Model.getInstance(ModelType.Search);\n          break;\n        case ModelType.Show:\n          model = Model.getInstance(ModelType.Show);\n          break;\n        case ModelType.Tag:\n          model = Model.getInstance(ModelType.Tag);\n          break;\n        case ModelType.Track:\n          model = Model.getInstance(ModelType.Track);\n          break;\n        default:\n          throw Error(`Unknown model type: ${type}`);\n      }\n      this.#models[type] = model;\n    }\n\n    return this.#models[type];\n  }\n\n  getRenderer(type: RendererType.Album): AlbumRenderer;\n  getRenderer(type: RendererType.Band): BandRenderer;\n  getRenderer(type: RendererType.Article): ArticleRenderer;\n  getRenderer(type: RendererType.SearchResult): SearchResultRenderer;\n  getRenderer(type: RendererType.Show): ShowRenderer;\n  getRenderer(type: RendererType.Tag): TagRenderer;\n  getRenderer(type: RendererType.Track): TrackRenderer;\n  getRenderer(type: RendererType) {\n    if (!this.#renderers[type]) {\n      let renderer;\n      switch (type) {\n        case RendererType.Album:\n          renderer = Renderer.getInstance(RendererType.Album, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        case RendererType.Band:\n          renderer = Renderer.getInstance(RendererType.Band, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        case RendererType.Article:\n          renderer = Renderer.getInstance(RendererType.Article, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        case RendererType.SearchResult:\n          renderer = Renderer.getInstance(RendererType.SearchResult, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        case RendererType.Show:\n          renderer = Renderer.getInstance(RendererType.Show, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        case RendererType.Tag:\n          renderer = Renderer.getInstance(RendererType.Tag, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        case RendererType.Track:\n          renderer = Renderer.getInstance(RendererType.Track, this.#uri,\n            this.#currentView, this.#previousViews);\n          break;\n        default:\n          throw Error(`Unknown renderer type: ${type}`);\n      }\n      this.#renderers[type] = renderer;\n    }\n    return this.#renderers[type];\n  }\n\n  constructPrevUri(): string {\n    const segments = this.#previousViews.map(((view) => ViewHelper.constructUriSegmentFromView(view)));\n\n    const currentView = this.#currentView;\n    if (currentView.pageRef) {\n      const newView = { ...currentView };\n      delete newView.pageRef;\n      delete newView.prevPageRefs;\n\n      if (currentView.prevPageRefs) {\n        const prevPageRefs = [ ...currentView.prevPageRefs ];\n        const prevPageRef = prevPageRefs.pop();\n        if (prevPageRef && prevPageRefs.length > 0) {\n          newView.prevPageRefs = prevPageRefs;\n        }\n        if (prevPageRef) {\n          newView.pageRef = prevPageRef;\n        }\n      }\n\n      segments.push(ViewHelper.constructUriSegmentFromView(newView));\n    }\n\n    return segments.join('/');\n  }\n\n  constructNextUri(nextPageRef: PageRef): string {\n    const segments = this.#previousViews.map(((view) => ViewHelper.constructUriSegmentFromView(view)));\n\n    const newView = { ...this.#currentView };\n    if (this.#currentView.prevPageRefs) {\n      newView.prevPageRefs = [ ...this.#currentView.prevPageRefs ];\n    }\n    else {\n      newView.prevPageRefs = [];\n    }\n    if (newView.pageRef) {\n      newView.prevPageRefs.push(newView.pageRef);\n    }\n    newView.pageRef = nextPageRef;\n\n    segments.push(ViewHelper.constructUriSegmentFromView(newView));\n\n    return segments.join('/');\n  }\n\n  constructNextPageItem(nextUri: string, title?: string): RenderedListItem {\n    if (!title) {\n      title = UIHelper.getMoreText();\n    }\n    return {\n      service: 'bandcamp',\n      type: 'item-no-menu',\n      title,\n      uri: `${nextUri}@noExplode=1`,\n      icon: 'fa fa-arrow-circle-right'\n    };\n  }\n\n  constructPageRef(pageToken?: string | null, pageOffset?: number): PageRef | null {\n    if (!pageToken && !pageOffset) {\n      return null;\n    }\n    return {\n      pageToken: pageToken || '',\n      pageOffset: pageOffset || 0\n    };\n  }\n}\n"]}