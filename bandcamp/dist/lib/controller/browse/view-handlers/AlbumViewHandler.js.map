{"version":3,"file":"AlbumViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/AlbumViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import bandcamp from '../../../BandcampContext';\nimport { ModelType } from '../../../model';\nimport UIHelper, { UILink } from '../../../util/UIHelper';\nimport { BandView } from './BandViewHandler';\nimport ExplodableViewHandler from './ExplodableViewHandler';\nimport View from './View';\nimport { RenderedList, RenderedPage, RenderedPageContents } from './ViewHandler';\nimport ViewHelper from './ViewHelper';\nimport { RendererType } from './renderers';\nimport { RenderedListItem } from './renderers/BaseRenderer';\n\nexport interface AlbumView extends View {\n  name: 'album';\n  albumUrl: string;\n  track?: string;\n  // For explode track URIs (used by `goto()`)\n  artistUrl?: string;\n}\n\nexport default class AlbumViewHandler extends ExplodableViewHandler<AlbumView> {\n\n  async browse(): Promise<RenderedPage> {\n    const albumUrl = this.currentView.albumUrl;\n\n    if (!albumUrl) {\n      throw Error('Album URL missing');\n    }\n\n    return this.browseAlbum(albumUrl);\n  }\n\n  protected async browseAlbum(albumUrl: string) {\n    const model = this.getModel(ModelType.Album);\n    const albumRenderer = this.getRenderer(RendererType.Album);\n    const trackRenderer = this.getRenderer(RendererType.Track);\n\n    const albumInfo = await model.getAlbum(albumUrl);\n\n    const trackItems = albumInfo.tracks?.reduce<RenderedListItem[]>((result, track) => {\n      const parsed = trackRenderer.renderToListItem({...track, type: 'track'});\n      if (parsed) {\n        result.push(parsed);\n      }\n      return result;\n    }, []);\n\n    const header = albumRenderer.renderToHeader(albumInfo);\n\n    const page: RenderedPage = {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        info: header,\n        lists: [ {\n          availableListViews: [ 'list' ],\n          items: trackItems || []\n        } ]\n      }\n    };\n\n    await this.#addArtistLink(page.navigation, albumInfo.artist?.url);\n\n    const link: UILink = {\n      url: albumUrl,\n      text: bandcamp.getI18n('BANDCAMP_VIEW_LINK_ALBUM'),\n      icon: { type: 'bandcamp' },\n      target: '_blank'\n    };\n    if (page.navigation?.lists) {\n      if (page.navigation?.lists.length > 1) { // Artist link added\n        page.navigation.lists[1].title = UIHelper.constructListTitleWithLink('', link, false);\n      }\n      else {\n        page.navigation.lists[0].title = UIHelper.constructListTitleWithLink('', link, true);\n      }\n    }\n\n    return page;\n  }\n\n  async #addArtistLink(nav?: RenderedPageContents, artistUrl?: string) {\n    if (!nav || !artistUrl) {\n      return;\n    }\n\n    // Check if we're coming from band view.\n    // If not, include artist link.\n    const comingFrom = this.previousViews[this.previousViews.length - 1]?.name;\n    if (comingFrom !== 'band') {\n      const model = this.getModel(ModelType.Band);\n      const bandInfo = await model.getBand(artistUrl);\n      if (!bandInfo.url) {\n        return;\n      }\n      const bandView: BandView = {\n        name: 'band',\n        bandUrl: bandInfo.url\n      };\n      const artistLinkItem: RenderedListItem = {\n        service: 'bandcamp',\n        type: 'item-no-menu',\n        icon: 'fa fa-user',\n        title: bandcamp.getI18n('BANDCAMP_MORE_FROM', bandInfo.name),\n        uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(bandView)}`\n      };\n      const linksList: RenderedList = {\n        availableListViews: [ 'list' ],\n        items: [ artistLinkItem ]\n      };\n      if (!nav.lists) {\n        nav.lists = [];\n      }\n      nav.lists.unshift(linksList);\n    }\n  }\n\n  async getTracksOnExplode() {\n    const albumUrl = this.currentView.albumUrl;\n\n    if (!albumUrl) {\n      throw Error('No albumUrl specified');\n    }\n\n    const model = this.getModel(ModelType.Album);\n    const albumInfo = await model.getAlbum(albumUrl);\n    const albumTracks = albumInfo.tracks;\n    const trackPosition = this.currentView.track;\n\n    if (albumTracks && trackPosition) {\n      return albumTracks[parseInt(trackPosition, 10) - 1] || [];\n    }\n\n    return albumTracks || [];\n  }\n}\n"]}