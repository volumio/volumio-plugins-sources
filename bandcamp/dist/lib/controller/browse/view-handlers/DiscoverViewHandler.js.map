{"version":3,"file":"DiscoverViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/DiscoverViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { DiscoverOptions, DiscoverParams } from 'bandcamp-fetch';\nimport bandcamp from '../../../BandcampContext';\nimport BaseViewHandler from './BaseViewHandler';\nimport View from './View';\nimport { RenderedList, RenderedPage } from './ViewHandler';\nimport { ModelType } from '../../../model';\nimport ViewHelper from './ViewHelper';\nimport { RendererType } from './renderers';\nimport { RenderedListItem } from './renderers/BaseRenderer';\nimport { DiscoverLoopFetchResult, DiscoveryModelGetDiscoverResultParams } from '../../../model/DiscoverModel';\nimport UIHelper, { UILink, UI_STYLES } from '../../../util/UIHelper';\n\nexport interface DiscoverView extends View {\n  name: 'discover';\n  select?: 'genre' | 'subgenre' | 'sortBy' | 'artistRecommendationType' |\n  'location' | 'format' | 'time';\n  genre?: string;\n  subgenre?: string;\n  sortBy?: string;\n  artistRecommendationType?: string;\n  location?: string;\n  format?: string;\n  time?: string;\n}\n\nconst DISCOVER_OPTION_ICONS: Record<string, string> = {\n  genre: 'fa fa-music',\n  subgenre: 'fa fa-filter',\n  sortBy: 'fa fa-sort',\n  artistRecommendationType: 'fa fa-thumbs-o-up',\n  location: 'fa fa-map-marker',\n  format: 'fa fa-archive',\n  time: 'fa fa-clock-o'\n};\n\nexport default class DiscoverViewHandler extends BaseViewHandler<DiscoverView> {\n\n  browse(): Promise<RenderedPage> {\n    if (this.currentView.select) {\n      return this.#browseDiscoverOptions();\n    }\n\n    return this.#browseDiscoverResult();\n\n  }\n\n  async #browseDiscoverResult(): Promise<RenderedPage> {\n    const view = this.currentView;\n    const modelParams: DiscoveryModelGetDiscoverResultParams = {\n      discoverParams: this.#getDiscoverParamsFromUriOrDefault(),\n      limit: view.inSection ? bandcamp.getConfigValue('itemsPerSectionDiscover', 11) : bandcamp.getConfigValue('itemsPerPage', 47)\n    };\n\n    if (view.pageRef) {\n      modelParams.pageToken = view.pageRef.pageToken;\n      modelParams.pageOffset = view.pageRef.pageOffset;\n    }\n\n    const model = this.getModel(ModelType.Discover);\n    const discoverResults = await model.getDiscoverResult(modelParams);\n    const discoverOptions = await model.getDiscoverOptions();\n    const lists = [\n      this.#getParamsListFromDiscoverResult(discoverResults.params, discoverOptions),\n      this.#getAlbumsListFromDiscoverResult(discoverResults)\n    ];\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        lists\n      }\n    };\n  }\n\n  #getDiscoverParamsFromUriOrDefault(): DiscoverParams {\n    const view = this.currentView;\n    const params: DiscoverParams = {};\n    if (view.genre) {\n      params.genre = view.genre;\n\n      if (view.subgenre) {\n        params.subgenre = view.subgenre;\n      }\n    }\n    if (view.sortBy) {\n      params.sortBy = view.sortBy;\n\n      if (view.artistRecommendationType) {\n        params.artistRecommendationType = view.artistRecommendationType;\n      }\n    }\n    if (view.location) {\n      params.location = view.location;\n    }\n    if (view.format) {\n      params.format = view.format;\n    }\n    if (view.time) {\n      params.time = parseInt(view.time, 10);\n    }\n\n    if (Object.keys(params).length) {\n      return params;\n    }\n\n    const defaultParams = bandcamp.getConfigValue('defaultDiscoverParams', null, true);\n    return defaultParams || {};\n  }\n\n  #getParamsListFromDiscoverResult(params: DiscoverParams, discoverOptions: DiscoverOptions): RenderedList {\n    const baseUri = this.#constructUriWithParams(params);\n    const listItems: RenderedListItem[] = [];\n    [ 'genre', 'subgenre', 'sortBy', 'artistRecommendationType', 'location', 'format', 'time' ].forEach((o) => {\n      const paramValue = params[o as keyof DiscoverParams];\n      if (paramValue !== undefined) {\n        let optArr = discoverOptions[`${o}s` as keyof DiscoverOptions] || [];\n        if (o === 'subgenre') {\n          optArr = params.genre ? (optArr as DiscoverOptions['subgenres'])[params.genre] || [] : [];\n        }\n        if (optArr.length) {\n          const opts = optArr as Array<any>;\n          const opt = opts.find((o: any) => o.value == paramValue);\n          const title = opt ? opt.name : opts[0].name;\n          listItems.push({\n            service: 'bandcamp',\n            type: 'item-no-menu',\n            title,\n            icon: DISCOVER_OPTION_ICONS[o],\n            uri: `${baseUri}@select=${o}`\n          });\n        }\n      }\n    });\n    const setDefaultJS = `\n                const params = ${JSON.stringify(params)};\n                const payload = {\n                    'endpoint': 'music_service/bandcamp',\n                    'method': 'saveDefaultDiscoverParams',\n                    'data': params\n                };\n                angular.element('#browse-page').scope().browse.socketService.emit('callMethod', payload);`;\n    const setDefaultLink: UILink = {\n      url: '#',\n      icon: { type: 'fa', class: 'fa fa-cog' },\n      text: bandcamp.getI18n('BANDCAMP_SET_DEFAULT_DISCOVER_PARAMS'),\n      onclick: setDefaultJS.replace(/\"/g, '&quot;').replace(/\\r?\\n|\\r/g, '')\n    };\n\n    const links = [\n      setDefaultLink,\n      this.#getBrowseByTagsLink()\n    ];\n\n    const title = UIHelper.constructListTitleWithLink(UIHelper.addBandcampIconToListTitle(bandcamp.getI18n(this.currentView.inSection ? 'BANDCAMP_DISCOVER_SHORT' : 'BANDCAMP_DISCOVER')), links, true);\n\n    if (!UIHelper.supportsEnhancedTitles()) {\n      // Compensate for loss of 'browse by tags' link\n      const browseByTagsLinkData = this.#getBrowseByTagsLinkData();\n      listItems.push({\n        service: 'bandcamp',\n        type: 'item-no-menu',\n        uri: browseByTagsLinkData.uri,\n        title: browseByTagsLinkData.text,\n        icon: 'fa fa-arrow-circle-right'\n      });\n    }\n\n    return {\n      title,\n      availableListViews: [ 'list' ],\n      items: listItems\n    };\n  }\n\n  #getBrowseByTagsLink(): UILink {\n    const linkData = this.#getBrowseByTagsLinkData();\n\n    return {\n      url: '#',\n      text: linkData.text,\n      onclick: `angular.element('#browse-page').scope().browse.fetchLibrary({uri: '${linkData.uri}'})`,\n      icon: {\n        type: 'fa',\n        class: 'fa fa-arrow-circle-right',\n        float: 'right',\n        color: '#54c688'\n      }\n    };\n  }\n\n  #getBrowseByTagsLinkData() {\n    return {\n      uri: `${this.uri}/tag`,\n      text: bandcamp.getI18n('BANDCAMP_BROWSE_BY_TAGS')\n    };\n  }\n\n  #getAlbumsListFromDiscoverResult(discoverResult: DiscoverLoopFetchResult): RenderedList {\n    const albumRenderer = this.getRenderer(RendererType.Album);\n    const listItems = discoverResult.items.reduce<RenderedListItem[]>((result, album) => {\n      const rendered = albumRenderer.renderToListItem(album);\n      if (rendered) {\n        result.push(rendered);\n      }\n      return result;\n    }, []);\n\n    const nextPageRef = this.constructPageRef(discoverResult.nextPageToken, discoverResult.nextPageOffset);\n    if (nextPageRef) {\n      const nextUri = this.constructNextUri(nextPageRef);\n      listItems.push(this.constructNextPageItem(nextUri));\n    }\n\n    return {\n      availableListViews: [ 'list', 'grid' ],\n      items: listItems\n    };\n  }\n\n  async #browseDiscoverOptions(): Promise<RenderedPage> {\n    const view = this.currentView;\n    const targetOption = view.select;\n    if (!targetOption) {\n      throw Error('Target option missing');\n    }\n\n    const discoverOptions = await this.getModel(ModelType.Discover).getDiscoverOptions();\n    let optArr = discoverOptions[`${view.select}s` as keyof DiscoverOptions] || [];\n    if (view.select === 'subgenre' && optArr) {\n      optArr = view.genre ? (optArr as DiscoverOptions['subgenres'])[view.genre] || [] : [];\n    }\n    const listItems = (optArr as Array<any>).map<RenderedListItem>((opt) => {\n      const isSelected = opt.value == view[view.select as keyof DiscoverView];\n      let title = opt.name;\n      if (isSelected) {\n        title = UIHelper.styleText(title, UI_STYLES.LIST_ITEM_SELECTED);\n      }\n\n      return {\n        service: 'bandcamp',\n        type: 'item-no-menu',\n        title,\n        icon: isSelected ? 'fa fa-check' : 'fa',\n        uri: this.#constructDiscoverOptionUri(targetOption, opt.value)\n      };\n    });\n\n    let title = bandcamp.getI18n(`BANDCAMP_SELECT_${targetOption.toUpperCase()}`);\n    title = UIHelper.addIconToListTitle(DISCOVER_OPTION_ICONS[targetOption], title);\n    const lists: RenderedList[] = [ {\n      title,\n      availableListViews: [ 'list' ],\n      items: listItems\n    } ];\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        lists\n      }\n    };\n  }\n\n  #constructDiscoverOptionUri(option: string, value: string) {\n    const targetView = {\n      ...this.currentView\n    };\n    if (this.currentView[option] !== value) {\n      delete targetView.pageRef;\n      delete targetView.prevPageRefs;\n      targetView[option] = value;\n    }\n    delete targetView.select;\n\n    return ViewHelper.constructUriFromViews([\n      ...this.previousViews,\n      targetView\n    ]);\n  }\n\n  #constructUriWithParams(params: object) {\n    const targetView = {\n      ...this.currentView,\n      ...params\n    };\n    return ViewHelper.constructUriFromViews([\n      ...this.previousViews,\n      targetView\n    ]);\n  }\n}\n"]}