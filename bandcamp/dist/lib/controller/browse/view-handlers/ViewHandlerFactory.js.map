{"version":3,"file":"ViewHandlerFactory.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/ViewHandlerFactory.ts"],"names":[],"mappings":";;;;;AAAA,0EAAkD;AAClD,8EAAsD;AACtD,wEAAgD;AAEhD,gFAAwD;AACxD,sEAA8C;AAC9C,wEAAgD;AAChD,4EAAoD;AACpD,wEAAgD;AAChD,sEAA8C;AAC9C,0EAAkD;AAElD,8DAAsC;AAKtC,MAAM,kBAAkB,GAA2C;IACjE,MAAM,EAAE,yBAAe;IACvB,UAAU,EAAE,6BAAmB;IAC/B,MAAM,EAAE,yBAAe;IACvB,OAAO,EAAE,0BAAgB;IACzB,OAAO,EAAE,0BAAgB;IACzB,QAAQ,EAAE,2BAAiB;IAC3B,MAAM,EAAE,yBAAe;IACvB,SAAS,EAAE,4BAAkB;IAC7B,KAAK,EAAE,wBAAc;IACrB,KAAK,EAAE,wBAAc;CACtB,CAAC;AAEF,MAAqB,kBAAkB;IAErC,MAAM,CAAC,UAAU,CAAiB,GAAW;QAC3C,MAAM,KAAK,GAAG,oBAAU,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAC9C,MAAM,WAAW,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QAChC,MAAM,aAAa,GAAG,KAAK,CAAC;QAE5B,IAAI,CAAC,WAAW,EAAE;YAChB,MAAM,KAAK,CAAC,iCAAiC,CAAC,CAAC;SAChD;QAED;;;;WAIG;QACH,IAAI,WAAW,CAAC,IAAI,KAAK,QAAQ,IAAI,WAAW,CAAC,IAAI,KAAK,OAAO,EAAE;YACjE,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC;YAE1B,IAAI,WAAW,CAAC,SAAS,EAAE;gBACzB,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,SAAS,CAAC;gBAC5C,OAAO,WAAW,CAAC,SAAS,CAAC;aAC9B;YAED,IAAI,WAAW,CAAC,QAAQ,EAAE;gBACxB,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,QAAQ,CAAC;gBAC3C,OAAO,WAAW,CAAC,QAAQ,CAAC;aAC7B;SACF;QACD;;WAEG;aACE,IAAI,WAAW,CAAC,IAAI,KAAK,UAAU,EAAE;YACxC,WAAW,CAAC,IAAI,GAAG,SAAS,CAAC;SAC9B;aACI,IAAI,WAAW,CAAC,IAAI,KAAK,OAAO,EAAE;YACrC,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC;SAC3B;QAED,OAAO,IAAI,kBAAkB,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC;IACnF,CAAC;CACF;AAzCD,qCAyCC","sourcesContent":["import AlbumViewHandler from './AlbumViewHandler';\nimport ArticleViewHandler from './ArticleViewHandler';\nimport BandViewHandler from './BandViewHandler';\nimport BaseViewHandler from './BaseViewHandler';\nimport DiscoverViewHandler from './DiscoverViewHandler';\nimport FanViewHandler from './FanViewHandler';\nimport RootViewHandler from './RootViewHandler';\nimport SearchViewHandler from './SearchViewHandler';\nimport ShowViewHandler from './ShowViewHandler';\nimport TagViewHandler from './TagViewHandler';\nimport TrackViewHandler from './TrackViewHandler';\nimport View from './View';\nimport ViewHelper from './ViewHelper';\n\ntype HandlerClass<V extends View, T extends BaseViewHandler<V>> =\n  new (uri: string, currentView: V, previousViews: View[]) => T;\n\nconst VIEW_NAME_TO_CLASS: Record<string, HandlerClass<any, any>> = {\n  'root': RootViewHandler,\n  'discover': DiscoverViewHandler,\n  'band': BandViewHandler,\n  'album': AlbumViewHandler,\n  'track': TrackViewHandler,\n  'search': SearchViewHandler,\n  'show': ShowViewHandler,\n  'article': ArticleViewHandler,\n  'tag': TagViewHandler,\n  'fan': FanViewHandler\n};\n\nexport default class ViewHandlerFactory {\n\n  static getHandler<V extends View>(uri: string): BaseViewHandler<V> {\n    const views = ViewHelper.getViewsFromUri(uri);\n    const currentView = views.pop();\n    const previousViews = views;\n\n    if (!currentView) {\n      throw Error('Invalid URI: no parseable view.');\n    }\n\n    /**\n     * 'artist' and 'label' views are obsolete (replaced by single 'band' view),\n     * but may still exist in Volumio playlists or favourites. We still want to be able\n     * to play them, so we translate these URIs into their 'band' equivalent.\n     */\n    if (currentView.name === 'artist' || currentView.name === 'label') {\n      currentView.name = 'band';\n\n      if (currentView.artistUrl) {\n        currentView.bandUrl = currentView.artistUrl;\n        delete currentView.artistUrl;\n      }\n\n      if (currentView.labelUrl) {\n        currentView.bandUrl = currentView.labelUrl;\n        delete currentView.labelUrl;\n      }\n    }\n    /**\n     * 'articles' and 'shows' are also absolute (replaced by singular form)\n     */\n    else if (currentView.name === 'articles') {\n      currentView.name = 'article';\n    }\n    else if (currentView.name === 'shows') {\n      currentView.name = 'show';\n    }\n\n    return new VIEW_NAME_TO_CLASS[currentView.name](uri, currentView, previousViews);\n  }\n}\n"]}