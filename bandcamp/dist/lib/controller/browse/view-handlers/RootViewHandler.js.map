{"version":3,"file":"RootViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/RootViewHandler.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,+EAAgD;AAChD,wEAAgD;AAGhD,8EAAsD;AAMtD,MAAqB,eAAgB,SAAQ,yBAAyB;IAAtE;;;IAgDA,CAAC;IA9CC,KAAK,CAAC,MAAM;QACV,MAAM,UAAU,GAAG,yBAAQ,CAAC,cAAc,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QAC/D,MAAM,OAAO,GAA8B,UAAU,CAAC,CAAC,CAAC,CAAE,uBAAA,IAAI,kEAAe,MAAnB,IAAI,EAAgB,UAAU,CAAC,CAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QAEjG,OAAO,CAAC,IAAI,CACV,uBAAA,IAAI,gEAAa,MAAjB,IAAI,CAAe,EACnB,uBAAA,IAAI,6DAAU,MAAd,IAAI,CAAY,EAChB,uBAAA,IAAI,uEAAoB,MAAxB,IAAI,CAAsB,CAC3B,CAAC;QAEF,MAAM,YAAY,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAEhD,MAAM,cAAc,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;YAC1D,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC;YACrB,OAAO,MAAM,CAAC;QAChB,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,OAAO;YACL,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;gBAClB,KAAK,EAAE,cAAc;aACtB;SACF,CAAC;IACJ,CAAC;CAuBF;AAhDD,kCAgDC;qHArBgB,QAAgB;IAC7B,OAAO,uBAAA,IAAI,oEAAiB,MAArB,IAAI,EAAkB,GAAG,IAAI,CAAC,GAAG,iBAAiB,QAAQ,EAAE,CAAC,CAAC;AACvE,CAAC;IAGC,OAAO,uBAAA,IAAI,oEAAiB,MAArB,IAAI,EAAkB,GAAG,IAAI,CAAC,GAAG,sBAAsB,CAAC,CAAC;AAClE,CAAC;IAGC,OAAO,uBAAA,IAAI,oEAAiB,MAArB,IAAI,EAAkB,GAAG,IAAI,CAAC,GAAG,mBAAmB,CAAC,CAAC;AAC/D,CAAC;IAGC,OAAO,uBAAA,IAAI,oEAAiB,MAArB,IAAI,EAAkB,GAAG,IAAI,CAAC,GAAG,uBAAuB,CAAC,CAAC;AACnE,CAAC,qCAED,KAAK,2CAAkB,GAAW;IAChC,MAAM,OAAO,GAAG,4BAAkB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACnD,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,MAAM,EAAE,CAAC;IACpC,OAAO,IAAI,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC;AACtC,CAAC","sourcesContent":["import bandcamp from '../../../BandcampContext';\nimport BaseViewHandler from './BaseViewHandler';\nimport View from './View';\nimport { RenderedList, RenderedPage } from './ViewHandler';\nimport ViewHandlerFactory from './ViewHandlerFactory';\n\nexport interface RootView extends View {\n  name: 'root';\n}\n\nexport default class RootViewHandler extends BaseViewHandler<RootView> {\n\n  async browse(): Promise<RenderedPage> {\n    const myUsername = bandcamp.getConfigValue('myUsername', null);\n    const fetches: Promise<RenderedList[]>[] = myUsername ? [ this.#getFanSummary(myUsername) ] : [];\n\n    fetches.push(\n      this.#getArticles(),\n      this.#getShows(),\n      this.#getDiscoverResults()\n    );\n\n    const sectionLists = await Promise.all(fetches);\n\n    const flattenedLists = sectionLists.reduce((result, list) => {\n      result.push(...list);\n      return result;\n    }, []);\n\n    return {\n      navigation: {\n        prev: { uri: '/' },\n        lists: flattenedLists\n      }\n    };\n  }\n\n  #getFanSummary(username: string) {\n    return this.#getSectionLists(`${this.uri}/fan@username=${username}`);\n  }\n\n  #getArticles() {\n    return this.#getSectionLists(`${this.uri}/article@inSection=1`);\n  }\n\n  #getShows() {\n    return this.#getSectionLists(`${this.uri}/show@inSection=1`);\n  }\n\n  #getDiscoverResults() {\n    return this.#getSectionLists(`${this.uri}/discover@inSection=1`);\n  }\n\n  async #getSectionLists(uri: string) {\n    const handler = ViewHandlerFactory.getHandler(uri);\n    const page = await handler.browse();\n    return page.navigation?.lists || [];\n  }\n}\n"]}