{"version":3,"file":"RootViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/RootViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import bandcamp from '../../../BandcampContext';\nimport { ModelType } from '../../../model';\nimport BaseViewHandler from './BaseViewHandler';\nimport type View from './View';\nimport { type RenderedList, type RenderedPage } from './ViewHandler';\nimport ViewHandlerFactory from './ViewHandlerFactory';\n\nexport interface RootView extends View {\n  name: 'root';\n}\n\nexport default class RootViewHandler extends BaseViewHandler<RootView> {\n\n  async browse(): Promise<RenderedPage> {\n    const fetches: Promise<RenderedList[]>[] = [];\n\n    const myBandcampType = bandcamp.getConfigValue('myBandcampType', 'cookie');\n    let myUsername: string | null = null;\n    if (myBandcampType === 'cookie') {\n      const myCookie = bandcamp.getConfigValue('myCookie', '');\n      if (myCookie) {\n        const fanModel = this.getModel(ModelType.Fan);\n        try {\n          const myFanInfo = await fanModel.getInfo();\n          myUsername = myFanInfo.username;\n        }\n        catch (error) {\n          bandcamp.getLogger().error(`[bandcamp] Error getting fan info by cookie${error instanceof Error ? `: ${error.message}` : '.'}`);\n          bandcamp.toast('error', bandcamp.getI18n('BANDCAMP_ERR_MY_FAN_INFO'));\n        }\n      }\n    }\n    else if (myBandcampType === 'username') {\n      myUsername = bandcamp.getConfigValue('myUsername', '');\n    }\n\n    if (myUsername) {\n      fetches.push(this.#getFanSummary(myUsername));\n    }\n\n    fetches.push(\n      this.#getArticles(),\n      this.#getShows(),\n      this.#getDiscoverResults()\n    );\n\n    const sectionLists = await Promise.all(fetches);\n\n    const flattenedLists = sectionLists.reduce((result, list) => {\n      result.push(...list);\n      return result;\n    }, []);\n\n    return {\n      navigation: {\n        prev: { uri: '/' },\n        lists: flattenedLists\n      }\n    };\n  }\n\n  #getFanSummary(username: string) {\n    return this.#getSectionLists(`${this.uri}/fan@username=${username}`);\n  }\n\n  #getArticles() {\n    return this.#getSectionLists(`${this.uri}/article@inSection=1`);\n  }\n\n  #getShows() {\n    return this.#getSectionLists(`${this.uri}/show@inSection=1`);\n  }\n\n  #getDiscoverResults() {\n    return this.#getSectionLists(`${this.uri}/discover@inSection=1`);\n  }\n\n  async #getSectionLists(uri: string) {\n    const handler = ViewHandlerFactory.getHandler(uri);\n    const page = await handler.browse();\n    return page.navigation?.lists || [];\n  }\n}\n"]}