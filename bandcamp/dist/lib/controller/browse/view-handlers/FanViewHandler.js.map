{"version":3,"file":"FanViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/FanViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import { Fan } from 'bandcamp-fetch';\nimport bandcamp from '../../../BandcampContext';\nimport { ModelType } from '../../../model';\nimport BaseViewHandler from './BaseViewHandler';\nimport View from './View';\nimport { RenderedList, RenderedPage } from './ViewHandler';\nimport { RendererType } from './renderers';\nimport { RenderedListItem } from './renderers/BaseRenderer';\nimport UIHelper, { UILink } from '../../../util/UIHelper';\nimport { FanModelGetFanItemsParams } from '../../../model/FanModel';\nimport ViewHelper from './ViewHelper';\n\nexport interface FanView extends View {\n  name: 'fan';\n  username: string;\n  view?: 'collection' | 'wishlist' | 'followingArtistsAndLabels' | 'followingGenres';\n}\n\nexport default class FanViewHandler extends BaseViewHandler<FanView> {\n\n  browse(): Promise<RenderedPage> {\n    if (!this.currentView.username) {\n      throw Error('Username missing');\n    }\n    switch (this.currentView.view) {\n      case 'collection':\n      case 'wishlist':\n      case 'followingArtistsAndLabels':\n      case 'followingGenres':\n        return this.#browseList();\n      default:\n        return this.#browseSummary();\n    }\n  }\n\n  async #browseList(): Promise<RenderedPage> {\n    const view = this.currentView;\n    const modelParams: FanModelGetFanItemsParams = {\n      username: view.username,\n      limit: bandcamp.getConfigValue('itemsPerPage', 47)\n    };\n\n    if (view.pageRef) {\n      modelParams.pageToken = view.pageRef.pageToken;\n      modelParams.pageOffset = view.pageRef.pageOffset;\n    }\n\n    let fanItems;\n    const model = this.getModel(ModelType.Fan);\n    switch (view.view) {\n      case 'collection':\n        fanItems = await model.getCollection(modelParams);\n        break;\n      case 'wishlist':\n        fanItems = await model.getWishlist(modelParams);\n        break;\n      case 'followingArtistsAndLabels':\n        fanItems = await model.getFollowingArtistsAndLabels(modelParams);\n        break;\n      case 'followingGenres':\n        fanItems = await model.getFollowingGenres(modelParams);\n        break;\n      default:\n        throw Error(`Unknown view type: ${view.view}`);\n    }\n\n    const albumRenderer = this.getRenderer(RendererType.Album);\n    const trackRenderer = this.getRenderer(RendererType.Track);\n    const bandRenderer = this.getRenderer(RendererType.Band);\n    const tagRenderer = this.getRenderer(RendererType.Tag);\n\n    const listItems: RenderedListItem[] = [];\n    fanItems.items.forEach((item) => {\n      let rendered;\n      switch (item.type) {\n        case 'album':\n          rendered = albumRenderer.renderToListItem(item);\n          break;\n        case 'artistOrLabel':\n          rendered = bandRenderer.renderToListItem(item);\n          break;\n        case 'tag':\n          rendered = tagRenderer.renderGenreListItem(item);\n          break;\n        case 'track':\n          rendered = trackRenderer.renderToListItem(item, true, true);\n          break;\n        default:\n          rendered = null;\n      }\n      if (rendered) {\n        listItems.push(rendered);\n      }\n    });\n\n    const nextPageRef = this.constructPageRef(fanItems.nextPageToken, fanItems.nextPageOffset);\n    if (nextPageRef) {\n      const nextUri = this.constructNextUri(nextPageRef);\n      listItems.push(this.constructNextPageItem(nextUri));\n    }\n\n    const fanItemsList: RenderedList = {\n      availableListViews: [ 'list', 'grid' ],\n      items: listItems\n    };\n    const fanInfo = await model.getInfo(view.username);\n    const fanItemsListTitle = this.#getTitle(fanInfo);\n    if (fanItemsListTitle) {\n      fanItemsList.title = fanItemsListTitle;\n    }\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        lists: [ fanItemsList ]\n      }\n    };\n  }\n\n  async #browseSummary(): Promise<RenderedPage> {\n    const username = this.currentView.username;\n    const baseUri = this.uri;\n    const baseImgPath = 'music_service/mpd/';\n    const fanInfo = await this.getModel(ModelType.Fan).getInfo(username);\n    const fanView: FanView = {\n      name: 'fan',\n      username\n    };\n    const summaryItems: RenderedListItem[] = [\n      {\n        'service': 'bandcamp',\n        'type': 'item-no-menu',\n        'title': bandcamp.getI18n('BANDCAMP_COLLECTION', fanInfo.collectionItemCount),\n        'albumart': `/albumart?sourceicon=${baseImgPath}musiclibraryicon.png`,\n        'uri': `${baseUri}/${ViewHelper.constructUriSegmentFromView({...fanView, view: 'collection'})}`\n      },\n      {\n        'service': 'bandcamp',\n        'type': 'item-no-menu',\n        'title': bandcamp.getI18n('BANDCAMP_WISHLIST', fanInfo.wishlistItemCount),\n        'albumart': `/albumart?sourceicon=${baseImgPath}favouritesicon.png`,\n        'uri': `${baseUri}/${ViewHelper.constructUriSegmentFromView({...fanView, view: 'wishlist'})}`\n      },\n      {\n        'service': 'bandcamp',\n        'type': 'item-no-menu',\n        'title': bandcamp.getI18n('BANDCAMP_FOLLOWING_ARTISTS_AND_LABELS', fanInfo.followingArtistsAndLabelsCount),\n        'albumart': `/albumart?sourceicon=${baseImgPath}artisticon.png`,\n        'uri': `${baseUri}/${ViewHelper.constructUriSegmentFromView({...fanView, view: 'followingArtistsAndLabels'})}`\n      },\n      {\n        'service': 'bandcamp',\n        'type': 'item-no-menu',\n        'title': bandcamp.getI18n('BANDCAMP_FOLLOWING_GENRES', fanInfo.followingGenresCount),\n        'albumart': `/albumart?sourceicon=${baseImgPath}genreicon.png`,\n        'uri': `${baseUri}/${ViewHelper.constructUriSegmentFromView({...fanView, view: 'followingGenres'})}`\n      }\n    ];\n    const summaryItemsList: RenderedList = {\n      availableListViews: [ 'list', 'grid' ],\n      items: summaryItems\n    };\n    const listTitle = this.#getTitle(fanInfo);\n    if (listTitle) {\n      summaryItemsList.title = listTitle;\n    }\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        lists: [ summaryItemsList ]\n      }\n    };\n  }\n\n  #getTitle(fanInfo: Fan) {\n    if (!fanInfo.url) {\n      return null;\n    }\n    const viewProfileLink: UILink = {\n      url: fanInfo.url,\n      text: bandcamp.getI18n('BANDCAMP_VIEW_LINK_MY_PROFILE'),\n      icon: { type: 'fa', class: 'fa fa-user' },\n      target: '_blank'\n    };\n    let titleKey;\n    switch (this.currentView.view) {\n      case 'collection':\n        titleKey = 'BANDCAMP_MY_COLLECTION';\n        break;\n      case 'wishlist':\n        titleKey = 'BANDCAMP_MY_WISHLIST';\n        break;\n      case 'followingArtistsAndLabels':\n        titleKey = 'BANDCAMP_MY_FOLLOWING_ARTISTS_AND_LABELS';\n        break;\n      case 'followingGenres':\n        titleKey = 'BANDCAMP_MY_FOLLOWING_GENRES';\n        break;\n      default:\n        titleKey = 'BANDCAMP_MY_BANDCAMP';\n    }\n    const mainTitle = bandcamp.getI18n(titleKey);\n    const secondaryTitle = fanInfo.location ?\n      bandcamp.getI18n('BANDCAMP_MY_BANDCAMP_NAME_LOCATION', fanInfo.name, fanInfo.location) :\n      fanInfo.name;\n\n    return UIHelper.constructDoubleLineTitleWithImageAndLink({\n      imgSrc: fanInfo.imageUrl,\n      title: mainTitle,\n      secondaryTitle,\n      link: viewProfileLink\n    });\n  }\n}\n"]}