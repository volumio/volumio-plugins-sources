{"version":3,"file":"TrackRenderer.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderers/TrackRenderer.ts"],"names":[],"mappings":";;;;;AAAA,kEAAgF;AAChF,yEAAiD;AAGjD,+DAAuC;AAEvC,MAAqB,aAAc,SAAQ,sBAAyB;IAElE,gBAAgB,CAAC,IAAiB,EAAE,OAAO,GAAG,KAAK,EAAE,SAAS,GAAG,KAAK,EAAE,kBAAkB,GAAG,IAAI;QAC/F,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,OAAO,IAAI,CAAC;SACb;QAED,MAAM,SAAS,GAAc;YAC3B,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE,IAAI,CAAC,GAAG;SACnB,CAAC;QACF,MAAM,MAAM,GAAqB;YAC/B,OAAO,EAAE,UAAU;YACnB,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM;YACnC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI;YAC7D,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI;YACzB,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI;YACvB,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,oBAAU,CAAC,2BAA2B,CAAC,SAAS,CAAC,EAAE;YACvE,QAAQ,EAAE,IAAI,CAAC,SAAS;SACzB,CAAC;QAEF,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;SACjC;QACD,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,kBAAkB,EAAE;YACzC,MAAM,CAAC,KAAK,GAAG,kBAAQ,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC1D;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,cAAc,CAAC,IAAiB;QAC9B,OAAO;YACL,OAAO,EAAE,UAAU;YACnB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,IAAI,CAAC,IAAI;YAChB,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI;YACzB,QAAQ,EAAE,IAAI,CAAC,SAAS;SACzB,CAAC;IACJ,CAAC;CACF;AAzCD,gCAyCC","sourcesContent":["import BaseRenderer, { RenderedHeader, RenderedListItem } from './BaseRenderer';\nimport UIHelper from '../../../../util/UIHelper';\nimport TrackEntity from '../../../../entities/TrackEntity';\nimport { TrackView } from '../TrackViewHandler';\nimport ViewHelper from '../ViewHelper';\n\nexport default class TrackRenderer extends BaseRenderer<TrackEntity> {\n\n  renderToListItem(data: TrackEntity, addType = false, fakeAlbum = false, addNonPlayableText = true): RenderedListItem | null {\n    if (!data.url) {\n      return null;\n    }\n\n    const trackView: TrackView = {\n      name: 'track',\n      trackUrl: data.url\n    };\n    const result: RenderedListItem = {\n      service: 'bandcamp',\n      type: fakeAlbum ? 'folder' : 'song',\n      title: addType ? this.addType('track', data.name) : data.name,\n      artist: data.artist?.name,\n      album: data.album?.name,\n      uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(trackView)}`,\n      albumart: data.thumbnail\n    };\n\n    if (!fakeAlbum) {\n      result.duration = data.duration;\n    }\n    if (!data.streamUrl && addNonPlayableText) {\n      result.title = UIHelper.addNonPlayableText(result.title);\n    }\n\n    return result;\n  }\n\n  renderToHeader(data: TrackEntity): RenderedHeader | null {\n    return {\n      service: 'bandcamp',\n      uri: this.uri,\n      type: 'song',\n      album: data.name,\n      artist: data.artist?.name,\n      albumart: data.thumbnail\n    };\n  }\n}\n"]}