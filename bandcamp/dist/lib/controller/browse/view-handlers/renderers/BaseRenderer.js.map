{"version":3,"file":"BaseRenderer.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderers/BaseRenderer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kFAAmD;AACnD,sEAAgE;AA6BhE,MAA8B,YAAY;IAMxC,YAAY,GAAW,EAAE,WAAiB,EAAE,aAAqB;QAJjE,oCAAa;QACb,4CAAmB;QACnB,8CAAuB;QAGrB,uBAAA,IAAI,qBAAQ,GAAG,MAAA,CAAC;QAChB,uBAAA,IAAI,6BAAgB,WAAW,MAAA,CAAC;QAChC,uBAAA,IAAI,+BAAkB,aAAa,MAAA,CAAC;IACtC,CAAC;IAID,6DAA6D;IAC7D,cAAc,CAAC,IAAO;QACpB,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,GAAG;QACL,OAAO,uBAAA,IAAI,yBAAK,CAAC;IACnB,CAAC;IAED,IAAI,WAAW;QACb,OAAO,uBAAA,IAAI,iCAAa,CAAC;IAC3B,CAAC;IAED,IAAI,aAAa;QACf,OAAO,uBAAA,IAAI,mCAAe,CAAC;IAC7B,CAAC;IAES,OAAO,CAAC,IAAY,EAAE,IAAY;QAC1C,OAAO,kBAAQ,CAAC,aAAa,CAAC,IAAI,EAAE,yBAAQ,CAAC,OAAO,CAAC,YAAY,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,EAAE,oBAAS,CAAC,aAAa,CAAC,CAAC;IACnH,CAAC;IAED,qGAAqG;IAC3F,UAAU,CAAC,IAAmB;QACtC,IAAI,IAAI,EAAE;YACR,6BAA6B;YAC7B,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;YAC5B,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;YACpC,MAAM,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;YACzB,iDAAiD;YACjD,IAAI,GAAG,GAAG,EAAE,CAAC;YACb,IAAI,GAAG,GAAG,CAAC,EAAE;gBACX,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;aACzC;YACD,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;YACzC,GAAG,IAAI,GAAG,IAAI,EAAE,CAAC;YACjB,OAAO,GAAG,CAAC;SACZ;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,uBAAuB,CAAC,IAAoC;QAC1D,OAAO,IAAI,CAAC,MAAM,CAAW,CAAC,KAAK,EAAE,CAAC,EAAE,EAAE;YACxC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACnB,OAAO,KAAK,CAAC;QACf,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;CACF;AA5DD,+BA4DC","sourcesContent":["import bandcamp from '../../../../BandcampContext';\nimport UIHelper, { UI_STYLES } from '../../../../util/UIHelper';\nimport View from '../View';\n\nexport interface RenderedListItem {\n  service: 'bandcamp';\n  type: 'folder' | 'song' | 'item-no-menu';\n  title: string;\n  albumart?: string | null;\n  artist?: string | null;\n  album?: string | null;\n  duration?: number | null;\n  uri: string;\n  icon?: string;\n  favorite?: boolean;\n}\n\nexport interface RenderedHeader {\n  service: 'bandcamp';\n  type: 'album' | 'song';\n  uri: string;\n  albumart?: string | null;\n  title?: string | null;\n  album?: string | null;\n  artist?: string | null;\n  year?: number | string | null;\n  duration?: string | null;\n  genre?: string | null;\n}\n\nexport default abstract class BaseRenderer<T> {\n\n  #uri: string;\n  #currentView: View;\n  #previousViews: View[];\n\n  constructor(uri: string, currentView: View, previousViews: View[]) {\n    this.#uri = uri;\n    this.#currentView = currentView;\n    this.#previousViews = previousViews;\n  }\n\n  abstract renderToListItem(data: T, ...args: any[]): RenderedListItem | null;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  renderToHeader(data: T): RenderedHeader | null {\n    return null;\n  }\n\n  get uri(): string {\n    return this.#uri;\n  }\n\n  get currentView(): View {\n    return this.#currentView;\n  }\n\n  get previousViews(): View[] {\n    return this.#previousViews;\n  }\n\n  protected addType(type: string, text: string) {\n    return UIHelper.addTextBefore(text, bandcamp.getI18n(`BANDCAMP_${type.toUpperCase()}`), UI_STYLES.RESOURCE_TYPE);\n  }\n\n  // https://github.com/volumio/Volumio2-UI/blob/master/src/app/browse-music/browse-music.controller.js\n  protected timeFormat(time: number | null): string | null {\n    if (time) {\n      // Hours, minutes and seconds\n      const hrs = ~~(time / 3600);\n      const mins = ~~((time % 3600) / 60);\n      const secs = ~~time % 60;\n      // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\n      let ret = '';\n      if (hrs > 0) {\n        ret += `${hrs}:${mins < 10 ? '0' : ''}`;\n      }\n      ret += `${mins}:${secs < 10 ? '0' : ''}`;\n      ret += `${secs}`;\n      return ret;\n    }\n    return null;\n  }\n\n  getStringFromIdNamePair(data: { id: string, name: string }[]): string {\n    return data.reduce<string[]>((parts, d) => {\n      parts.push(d.name);\n      return parts;\n    }, []).join(', ');\n  }\n}\n"]}