{"version":3,"file":"BandRenderer.js","sourceRoot":"","sources":["../../../../../../src/lib/controller/browse/view-handlers/renderers/BandRenderer.ts"],"names":[],"mappings":";;;;;AAAA,kFAAmD;AACnD,kEAAgF;AAKhF,+DAAuC;AAEvC,MAAqB,YAAa,SAAQ,sBAAwC;IAEhF,gBAAgB,CAAC,IAA6C;QAC5D,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE;YACb,OAAO,IAAI,CAAC;SACb;QACD,MAAM,QAAQ,GAAa;YACzB,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,IAAI,CAAC,GAAG;SAClB,CAAC;QACF,MAAM,MAAM,GAAqB;YAC/B,OAAO,EAAE,UAAU;YACnB,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,IAAI,CAAC,IAAI;YAChB,QAAQ,EAAE,IAAI,CAAC,SAAS;YACxB,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,oBAAU,CAAC,2BAA2B,CAAC,QAAQ,CAAC,EAAE;SACvE,CAAC;QACF,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC/B;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,cAAc,CAAC,IAAgC;QAC7C,MAAM,MAAM,GAAmB;YAC7B,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,OAAO,EAAE,UAAU;YACnB,IAAI,EAAE,MAAM;YACZ,KAAK,EAAE,IAAI,CAAC,IAAI;YAChB,QAAQ,EAAE,IAAI,CAAC,SAAS;SACzB,CAAC;QACF,QAAQ,IAAI,CAAC,IAAI,EAAE;YACjB,KAAK,QAAQ;gBACX,MAAM,CAAC,MAAM,GAAG,yBAAQ,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC;gBAC3D,MAAM;YACR,KAAK,OAAO;gBACV,MAAM,CAAC,MAAM,GAAG,yBAAQ,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;gBAC1D,MAAM;YACR,QAAQ;SACT;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC;SAC7B;QACD,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,IAAI,IAAI,CAAC,KAAK,EAAE;YACxC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;SACnC;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;CACF;AAhDD,+BAgDC","sourcesContent":["import bandcamp from '../../../../BandcampContext';\nimport BaseRenderer, { RenderedHeader, RenderedListItem } from './BaseRenderer';\nimport LabelEntity from '../../../../entities/LabelEntity';\nimport ArtistEntity from '../../../../entities/ArtistEntity';\nimport BandEntity from '../../../../entities/BandEntity';\nimport { BandView } from '../BandViewHandler';\nimport ViewHelper from '../ViewHelper';\n\nexport default class BandRenderer extends BaseRenderer<ArtistEntity | LabelEntity> {\n\n  renderToListItem(data: ArtistEntity | LabelEntity | BandEntity): RenderedListItem | null {\n    if (!data.url) {\n      return null;\n    }\n    const bandView: BandView = {\n      name: 'band',\n      bandUrl: data.url\n    };\n    const result: RenderedListItem = {\n      service: 'bandcamp',\n      type: 'folder',\n      title: data.name,\n      albumart: data.thumbnail,\n      uri: `${this.uri}/${ViewHelper.constructUriSegmentFromView(bandView)}`\n    };\n    if (data.location) {\n      result.artist = data.location;\n    }\n    return result;\n  }\n\n  renderToHeader(data: ArtistEntity | LabelEntity): RenderedHeader | null {\n    const result: RenderedHeader = {\n      uri: this.uri,\n      service: 'bandcamp',\n      type: 'song',\n      title: data.name,\n      albumart: data.thumbnail\n    };\n    switch (data.type) {\n      case 'artist':\n        result.artist = bandcamp.getI18n('BANDCAMP_HEADER_ARTIST');\n        break;\n      case 'label':\n        result.artist = bandcamp.getI18n('BANDCAMP_HEADER_LABEL');\n        break;\n      default:\n    }\n    if (data.location) {\n      result.year = data.location;\n    }\n    if (data.type === 'artist' && data.label) {\n      result.duration = data.label.name;\n    }\n    return result;\n  }\n}\n"]}