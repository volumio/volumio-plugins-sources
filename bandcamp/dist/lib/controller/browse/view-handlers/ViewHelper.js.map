{"version":3,"file":"ViewHelper.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/ViewHelper.ts"],"names":[],"mappings":"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","sourcesContent":["import View from './View';\n\nexport default class ViewHelper {\n\n  static getViewsFromUri(uri: string): View[] {\n    const segments = uri.split('/');\n    if (segments[0] !== 'bandcamp') {\n      return [];\n    }\n\n    const result: View[] = [];\n\n    segments.forEach((segment, index) => {\n      let view: View;\n      if (index === 0) { // 'bandcamp/...'\n        view = {\n          name: 'root'\n        };\n      }\n      else {\n        view = this.#getViewFromUriSegment(segment);\n      }\n      result.push(view);\n    });\n\n    return result;\n  }\n\n  static constructUriSegmentFromView<V extends View>(view: V) {\n    let segment: string;\n    if (view.name === 'root') {\n      segment = 'bandcamp';\n    }\n    else {\n      segment = view.name;\n    }\n\n    const skip = [ 'name', 'pageRef', 'prevPageRefs', 'noExplode', 'combinedSearch', 'inSection' ];\n    Object.keys(view).filter((key) => !skip.includes(key)).forEach((key) => {\n      if (view[key] !== undefined) {\n        segment += `@${key}=${encodeURIComponent(view[key])}`;\n      }\n    });\n\n    if (view.prevPageRefs) {\n      segment += `@$prevPageRefs=${encodeURIComponent(JSON.stringify(view.prevPageRefs))}`;\n    }\n\n    if (view.pageRef) {\n      segment += `@pageRef=${encodeURIComponent(JSON.stringify(view.pageRef))}`;\n    }\n\n    return segment;\n  }\n\n  static #getViewFromUriSegment(segment: string): View {\n    const result: View = {\n      name: '',\n      startIndex: 0\n    };\n    segment.split('@').forEach((s) => {\n      const equalIndex = s.indexOf('=');\n      if (equalIndex < 0) {\n        result.name = s;\n      }\n      else {\n        const key = s.substring(0, equalIndex);\n        const value = s.substring(equalIndex + 1);\n        if (key === 'pageRef' || key === 'prevPageRefs') {\n          result[key] = JSON.parse(decodeURIComponent(value));\n        }\n        else {\n          result[key] = decodeURIComponent(value);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  static constructUriFromViews(views: View[]) {\n    const segments = views.map((view) => this.constructUriSegmentFromView(view));\n    return segments.join('/');\n  }\n}\n"]}