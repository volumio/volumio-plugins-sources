{"version":3,"file":"SearchController.js","sourceRoot":"","sources":["../../../../src/lib/controller/search/SearchController.ts"],"names":[],"mappings":";;;;;AAAA,4EAA6C;AAC7C,yDAAyD;AAGzD,oGAA4E;AAC5E,oFAA4D;AAM5D,MAAqB,gBAAgB;IAEnC,KAAK,CAAC,MAAM,CAAC,KAAkB;QAC7B,MAAM,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACnD,MAAM,UAAU,GAAe;YAC7B,IAAI,EAAE,QAAQ;YACd,KAAK,EAAE,SAAS;SACjB,CAAC;QAEF,MAAM,cAAc,GAAG,EAAE,CAAC;QAC1B,IAAI,yBAAQ,CAAC,cAAc,CAAC,kBAAkB,EAAE,IAAI,CAAC,EAAE;YACrD,CAAE,4BAAc,CAAC,gBAAgB,EAAE,4BAAc,CAAC,MAAM,EAAE,4BAAc,CAAC,MAAM,CAAE,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE;gBACrG,MAAM,gBAAgB,GAAe;oBACnC,GAAG,UAAU;oBACb,QAAQ;iBACT,CAAC;gBACF,MAAM,OAAO,GAAG,4BAAkB,CAAC,UAAU,CAAC,YAAY,oBAAU,CAAC,2BAA2B,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAAC;gBACvI,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;SACJ;aACI;YACH,MAAM,OAAO,GAAG,4BAAkB,CAAC,UAAU,CAAC,YAAY,oBAAU,CAAC,2BAA2B,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;YACjI,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;SACvC;QAED,MAAM,iBAAiB,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC5D,MAAM,QAAQ,GAAG,iBAAiB,CAAC,MAAM,CAAiB,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE;YACzE,IAAI,IAAI,CAAC,UAAU,EAAE,KAAK,EAAE;gBAC1B,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;aAC/E;YACD,OAAO,MAAM,CAAC;QAChB,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;AAnCD,mCAmCC","sourcesContent":["import bandcamp from '../../BandcampContext';\nimport { SearchItemType } from '../../model/SearchModel';\nimport { SearchView } from '../browse/view-handlers/SearchViewHandler';\nimport { RenderedList } from '../browse/view-handlers/ViewHandler';\nimport ViewHandlerFactory from '../browse/view-handlers/ViewHandlerFactory';\nimport ViewHelper from '../browse/view-handlers/ViewHelper';\n\nexport interface SearchQuery {\n  value: string;\n}\n\nexport default class SearchController {\n\n  async search(query: SearchQuery) {\n    const safeQuery = query.value.replace(/\"/g, '\\\\\"');\n    const searchView: SearchView = {\n      name: 'search',\n      query: safeQuery\n    };\n\n    const browsePromises = [];\n    if (bandcamp.getConfigValue('searchByItemType', true)) {\n      [ SearchItemType.ArtistsAndLabels, SearchItemType.Albums, SearchItemType.Tracks ].forEach((itemType) => {\n        const searchByTypeView: SearchView = {\n          ...searchView,\n          itemType\n        };\n        const handler = ViewHandlerFactory.getHandler(`bandcamp/${ViewHelper.constructUriSegmentFromView(searchByTypeView)}@combinedSearch=1`);\n        browsePromises.push(handler.browse());\n      });\n    }\n    else {\n      const handler = ViewHandlerFactory.getHandler(`bandcamp/${ViewHelper.constructUriSegmentFromView(searchView)}@combinedSearch=1`);\n      browsePromises.push(handler.browse());\n    }\n\n    const searchResultPages = await Promise.all(browsePromises);\n    const allLists = searchResultPages.reduce<RenderedList[]>((result, page) => {\n      if (page.navigation?.lists) {\n        result.push(...page.navigation.lists.filter((list) => list.items.length > 0));\n      }\n      return result;\n    }, []);\n\n    return allLists;\n  }\n}\n"]}