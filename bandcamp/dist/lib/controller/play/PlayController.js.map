{"version":3,"file":"PlayController.js","sourceRoot":"","sources":["../../../../src/lib/controller/play/PlayController.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport libQ from 'kew';\n\nimport bandcamp from '../../BandcampContext';\nimport { ExplodedTrackInfo } from '../browse/view-handlers/ExplodableViewHandler';\nimport ViewHelper from '../browse/view-handlers/ViewHelper';\nimport Model, { ModelType } from '../../model';\nimport { TrackView } from '../browse/view-handlers/TrackViewHandler';\nimport { ShowView } from '../browse/view-handlers/ShowViewHandler';\nimport { ArticleView } from '../browse/view-handlers/ArticleViewHandler';\nimport AlbumEntity from '../../entities/AlbumEntity';\nimport { ArticleEntityMediaItem } from '../../entities/ArticleEntity';\nimport TrackEntity from '../../entities/TrackEntity';\nimport { AlbumView } from '../browse/view-handlers/AlbumViewHandler';\nimport { kewToJSPromise } from '../../util';\n\nexport default class PlayController {\n\n  #mpdPlugin: any;\n\n  constructor() {\n    this.#mpdPlugin = bandcamp.getMpdPlugin();\n  }\n\n  /**\n   * Track uri:\n   * - bandcamp/track@trackUrl={trackUrl}@artistUrl={...}@albumUrl={...}\n   * - bandcamp/show@showUrl={showUrl}\n   * - bandcamp/article@articleUrl={articleUrl}@mediaItemRef={...}@track={trackPosition}@artistUrl={...}@albumUrl={...}\n   * - bandcamp/album@albumUrl={...}@track={...}@artistUrl={...}@albumUrl={...}\n   */\n  async clearAddPlayTrack(track: ExplodedTrackInfo) {\n    bandcamp.getLogger().info(`[bandcamp-play] clearAddPlayTrack: ${track.uri}`);\n\n    let streamUrl;\n    try {\n      streamUrl = await this.#getStreamUrl(track);\n    }\n    catch (error: any) {\n      bandcamp.getLogger().error(`[bandcamp-play] Error getting stream: ${error}`);\n      throw error;\n    }\n\n    return this.#doPlay(streamUrl, track);\n  }\n\n  // Returns kew promise!\n  stop() {\n    bandcamp.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.stop();\n  }\n\n  // Returns kew promise!\n  pause() {\n    bandcamp.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.pause();\n  }\n\n  // Returns kew promise!\n  resume() {\n    bandcamp.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.resume();\n  }\n\n  // Returns kew promise!\n  seek(position: number) {\n    bandcamp.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.seek(position);\n  }\n\n  // Returns kew promise!\n  next() {\n    bandcamp.getStateMachine().setConsumeUpdateService('mpd', true, false);\n    return this.#mpdPlugin.next();\n  }\n\n  // Returns kew promise!\n  previous() {\n    bandcamp.getStateMachine().setConsumeUpdateService(undefined);\n    return bandcamp.getStateMachine().previous();\n  }\n\n  async prefetch(track: ExplodedTrackInfo) {\n    const prefetchEnabled = bandcamp.getConfigValue('prefetch', true);\n    if (!prefetchEnabled) {\n      /**\n       * Volumio doesn't check whether `prefetch()` is actually performed or\n       * successful (such as inspecting the result of the function call) -\n       * it just sets its internal state variable `prefetchDone`\n       * to `true`. This results in the next track being skipped in cases\n       * where prefetch is not performed or fails. So when we want to signal\n       * that prefetch is not done, we would have to directly falsify the\n       * statemachine's `prefetchDone` variable.\n       */\n      bandcamp.getLogger().info('[bandcamp-play] Prefetch disabled');\n      bandcamp.getStateMachine().prefetchDone = false;\n      return;\n    }\n    let streamUrl;\n    try {\n      streamUrl = await this.#getStreamUrl(track, true);\n    }\n    catch (error: any) {\n      bandcamp.getLogger().error(`[bandcamp] Prefetch failed: ${error}`);\n      bandcamp.getStateMachine().prefetchDone = false;\n      return;\n    }\n\n    const mpdPlugin = this.#mpdPlugin;\n    return kewToJSPromise(mpdPlugin.sendMpdCommand(`addid \"${streamUrl}\"`, [])\n      .then((addIdResp: { Id: string }) => this.#mpdAddTags(addIdResp, track))\n      .then(() => {\n        bandcamp.getLogger().info(`[bandcamp-play] Prefetched and added track to MPD queue: ${track.name}`);\n        return mpdPlugin.sendMpdCommand('consume 1', []);\n      }));\n  }\n\n  async #getStreamUrl(track: ExplodedTrackInfo, isPrefetching = false): Promise<string> {\n\n    const _toast = (type: 'error' | 'warning', msg: string) => {\n      if (!isPrefetching) {\n        bandcamp.toast(type, msg);\n      }\n    };\n\n    const views = ViewHelper.getViewsFromUri(track.uri);\n    let trackView = views[1];\n    if (!trackView) {\n      trackView = { name: '' };\n    }\n    if (trackView.name === 'track') {\n      const { trackUrl } = trackView as TrackView;\n      if (!trackUrl) {\n        _toast('error', bandcamp.getI18n('BANDCAMP_ERR_INVALID_PLAY_REQUEST'));\n        throw Error('Track URL not specified');\n      }\n      const model = Model.getInstance(ModelType.Track);\n      const trackInfo = await model.getTrack(trackUrl);\n      if (!trackInfo.streamUrl) {\n        _toast('warning', bandcamp.getI18n('BANDCAMP_SKIP_NON_PLAYABLE_TRACK', trackInfo.name));\n        if (!isPrefetching) {\n          bandcamp.getStateMachine().next();\n        }\n        throw Error('Skipping non-playable track');\n      }\n      else {\n        const safeUri = trackInfo.streamUrl.replace(/\"/g, '\\\\\"');\n        return safeUri;\n      }\n    }\n    else if (trackView.name === 'show') {\n      const { showUrl } = trackView as ShowView;\n      if (!showUrl) {\n        _toast('error', bandcamp.getI18n('BANDCAMP_ERR_INVALID_PLAY_REQUEST'));\n        throw Error('Show URL not specified');\n      }\n      const model = Model.getInstance(ModelType.Show);\n      const showInfo = await model.getShow(showUrl);\n      const streamUrl = showInfo.streamUrl;\n      if (!streamUrl) {\n        _toast('error', bandcamp.getI18n('BANDCAMP_ERR_STREAM_NOT_FOUND', showInfo.name));\n        throw Error(`Stream not found for show URL: ${showUrl}`);\n      }\n      const safeUri = streamUrl.replace(/\"/g, '\\\\\"');\n      return safeUri;\n    }\n    else if (trackView.name === 'article') {\n      const { articleUrl, mediaItemRef, track: trackPosition } = trackView as ArticleView;\n      if (!articleUrl || !mediaItemRef) {\n        _toast('error', bandcamp.getI18n('BANDCAMP_ERR_INVALID_PLAY_REQUEST'));\n        throw Error('Article URL, mediaItemRef or track position not specified');\n      }\n      const model = Model.getInstance(ModelType.Article);\n      const article = await model.getArticle(articleUrl);\n      const mediaItem = article.mediaItems?.find((mi) => mi.mediaItemRef === mediaItemRef);\n      if (!mediaItem) {\n        _toast('error', bandcamp.getI18n('BANDCAMP_ERR_STREAM_NOT_FOUND', track.name));\n        throw Error(`Target mediaItemRef '${mediaItemRef}' not found for article URL: ${articleUrl}`);\n      }\n      let matchedTrack: TrackEntity | undefined;\n      if (mediaItem.type === 'album') {\n        if (!trackPosition) {\n          _toast('error', bandcamp.getI18n('BANDCAMP_ERR_INVALID_PLAY_REQUEST'));\n          throw Error(`Track position not specified for mediaItemRef '${mediaItemRef}' (article URL: ${articleUrl})`);\n        }\n        matchedTrack = (mediaItem as ArticleEntityMediaItem<AlbumEntity>).tracks?.find((tr) => tr.position?.toString() === trackPosition);\n        if (!matchedTrack) {\n          _toast('error', bandcamp.getI18n('BANDCAMP_ERR_STREAM_NOT_FOUND', track.name));\n          throw Error(`No track at position ${trackPosition} for mediaItemRef '${mediaItemRef}' (article URL: ${articleUrl})`);\n        }\n      }\n      else {\n        matchedTrack = mediaItem as ArticleEntityMediaItem<TrackEntity>;\n      }\n      if (matchedTrack.streamUrl) {\n        const safeUri = matchedTrack.streamUrl.replace(/\"/g, '\\\\\"');\n        return safeUri;\n      }\n\n      _toast('error', bandcamp.getI18n('BANDCAMP_ERR_STREAM_NOT_FOUND', matchedTrack.name));\n      throw Error(`Stream URL missing for track matching ${trackPosition ? `${trackPosition}@` : ''}${mediaItemRef} (article URL: ${articleUrl})`);\n\n    }\n    else if (trackView.name === 'album') {\n      const { albumUrl, track: trackPosition } = trackView as AlbumView;\n      if (!albumUrl || !trackPosition) {\n        throw Error('Album URL or track position not specified');\n      }\n      const model = Model.getInstance(ModelType.Album);\n      const album = await model.getAlbum(albumUrl);\n      const albumTrack = album.tracks?.[parseInt(trackPosition, 10) - 1];\n      if (albumTrack?.streamUrl) {\n        const safeUri = albumTrack.streamUrl.replace(/\"/g, '\\\\\"');\n        return safeUri;\n      }\n      _toast('error', bandcamp.getI18n('BANDCAMP_ERR_STREAM_NOT_FOUND', albumTrack?.name || track.name));\n      throw Error(`Track or stream URL missing at position ${trackPosition} for album URL: ${albumUrl}`);\n    }\n\n    _toast('error', bandcamp.getI18n('BANDCAMP_ERR_INVALID_PLAY_REQUEST'));\n    throw Error(`Invalid track URI: ${track.uri}`);\n  }\n\n  // Returns kew promise!\n  #doPlay(streamUrl: string, track: ExplodedTrackInfo) {\n    const mpdPlugin = this.#mpdPlugin;\n\n    return mpdPlugin.sendMpdCommand('stop', [])\n      .then(() => {\n        return mpdPlugin.sendMpdCommand('clear', []);\n      })\n      .then(() => {\n        return mpdPlugin.sendMpdCommand(`addid \"${streamUrl}\"`, []);\n      })\n      .then((addIdResp: { Id: string }) => this.#mpdAddTags(addIdResp, track))\n      .then(() => {\n        bandcamp.getStateMachine().setConsumeUpdateService('mpd', true, false);\n        return mpdPlugin.sendMpdCommand('play', []);\n      });\n  }\n\n  // Returns kew promise!\n  #mpdAddTags(mpdAddIdResponse: { Id: string }, track: ExplodedTrackInfo) {\n    const songId = mpdAddIdResponse?.Id;\n    if (songId !== undefined) {\n      const cmds = [];\n      cmds.push({\n        command: 'addtagid',\n        parameters: [ songId, 'title', track.title ]\n      });\n      if (track.album) {\n        cmds.push({\n          command: 'addtagid',\n          parameters: [ songId, 'album', track.album ]\n        });\n      }\n      cmds.push({\n        command: 'addtagid',\n        parameters: [ songId, 'artist', track.artist ]\n      });\n\n      return this.#mpdPlugin.sendMpdCommandArray(cmds);\n    }\n    return libQ.resolve();\n  }\n}\n"]}