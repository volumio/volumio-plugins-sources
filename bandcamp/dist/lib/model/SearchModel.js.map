{"version":3,"file":"SearchModel.js","sourceRoot":"","sources":["../../../src/lib/model/SearchModel.ts"],"names":[],"mappings":"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","sourcesContent":["import bcfetch, { SearchAPISearchParams, SearchResultAny, SearchResults } from 'bandcamp-fetch';\nimport bandcamp from '../BandcampContext';\nimport BaseModel, { LoopFetchCallbackParams, LoopFetchResult } from './BaseModel';\nimport EntityConverter from '../util/EntityConverter';\nimport ArtistEntity from '../entities/ArtistEntity';\nimport LabelEntity from '../entities/LabelEntity';\nimport AlbumEntity from '../entities/AlbumEntity';\nimport TrackEntity from '../entities/TrackEntity';\n\nexport enum SearchItemType {\n  All = 'All',\n  ArtistsAndLabels = 'ArtistsAndLabels',\n  Albums = 'Albums',\n  Tracks = 'Tracks'\n}\n\nexport interface SearchModelGetSearchResultsParams {\n  query: string;\n  itemType: SearchItemType;\n  pageToken?: string;\n  pageOffset?: number;\n  limit: number;\n}\n\ninterface GetSearchResultsLoopFetchCallbackParams extends LoopFetchCallbackParams {\n  query: string;\n  itemType: SearchItemType;\n}\n\nexport default class SearchModel extends BaseModel {\n\n  getSearchResults(params: SearchModelGetSearchResultsParams & { itemType: SearchItemType.All }): Promise<LoopFetchResult<ArtistEntity | LabelEntity | AlbumEntity | TrackEntity>>;\n  getSearchResults(params: SearchModelGetSearchResultsParams & { itemType: SearchItemType.ArtistsAndLabels }): Promise<LoopFetchResult<ArtistEntity | LabelEntity>>;\n  getSearchResults(params: SearchModelGetSearchResultsParams & { itemType: SearchItemType.Albums }): Promise<LoopFetchResult<AlbumEntity>>;\n  getSearchResults(params: SearchModelGetSearchResultsParams & { itemType: SearchItemType.Tracks }): Promise<LoopFetchResult<TrackEntity>>;\n  getSearchResults(params: SearchModelGetSearchResultsParams & { itemType: SearchItemType }): Promise<LoopFetchResult<ArtistEntity | LabelEntity | AlbumEntity | TrackEntity>>;\n  getSearchResults(params: SearchModelGetSearchResultsParams): Promise<LoopFetchResult<ArtistEntity | LabelEntity | AlbumEntity | TrackEntity>> {\n    return this.loopFetch({\n      callbackParams: { ...params },\n      getFetchPromise: this.#getSearchResultsFetchPromise.bind(this),\n      getItemsFromFetchResult: this.#getSearchResultItemsFromFetchResult.bind(this),\n      getNextPageTokenFromFetchResult: this.#getNextPageTokenFromSearchFetchResult.bind(this),\n      filterFetchedItem: this.#filterSearchResultItem.bind(this),\n      convertToEntity: this.#convertFetchedSearchResultItemToEntity.bind(this),\n      pageOffset: params.pageOffset,\n      pageToken: params.pageToken,\n      limit: params.limit\n    });\n  }\n\n  #getSearchResultsFetchPromise(params: GetSearchResultsLoopFetchCallbackParams) {\n    const page = params.pageToken ? parseInt(params.pageToken, 10) : 1;\n    const queryParams: SearchAPISearchParams = {\n      page,\n      query: params.query,\n      albumImageFormat: this.getAlbumImageFormat(),\n      artistImageFormat: this.getArtistImageFormat()\n    };\n    switch (params.itemType) {\n      case SearchItemType.ArtistsAndLabels:\n        return bandcamp.getCache().getOrSet(\n          this.getCacheKeyForFetch('searchArtistsAndLabels', queryParams),\n          () => bcfetch.limiter.search.artistsAndLabels(queryParams));\n\n      case SearchItemType.Albums:\n        return bandcamp.getCache().getOrSet(\n          this.getCacheKeyForFetch('searchAlbums', queryParams),\n          () => bcfetch.limiter.search.albums(queryParams));\n\n      case SearchItemType.Tracks:\n        return bandcamp.getCache().getOrSet(\n          this.getCacheKeyForFetch('searchTracks', queryParams),\n          () => bcfetch.limiter.search.tracks(queryParams));\n\n      default:\n      case SearchItemType.All:\n        return bandcamp.getCache().getOrSet(\n          this.getCacheKeyForFetch('searchAll', queryParams),\n          () => bcfetch.limiter.search.all(queryParams));\n    }\n  }\n\n  #getSearchResultItemsFromFetchResult(result: SearchResults<SearchResultAny>) {\n    return result.items.slice(0);\n  }\n\n  #getNextPageTokenFromSearchFetchResult(result: SearchResults<SearchResultAny>, params: GetSearchResultsLoopFetchCallbackParams) {\n    const page = params.pageToken ? parseInt(params.pageToken, 10) : 1;\n    if (page < result.totalPages) {\n      return (page + 1).toString();\n    }\n\n    return null;\n  }\n\n  #filterSearchResultItem(item: SearchResultAny, params: GetSearchResultsLoopFetchCallbackParams) {\n    switch (params.itemType) {\n      case SearchItemType.ArtistsAndLabels:\n        return item.type === 'artist' || item.type === 'label';\n      case SearchItemType.Albums:\n        return item.type === 'album';\n      case SearchItemType.Tracks:\n        return item.type === 'track';\n      case SearchItemType.All:\n        return item.type === 'album' || item.type === 'artist' || item.type === 'label' || item.type === 'track';\n      default:\n        return false;\n    }\n  }\n\n  #convertFetchedSearchResultItemToEntity(item: SearchResultAny) {\n    if (item.type === 'album' || item.type === 'artist' || item.type === 'label' || item.type === 'track') {\n      return EntityConverter.convertSearchResultItem(item);\n    }\n\n    return null;\n  }\n}\n"]}