{"version":3,"file":"BandModel.js","sourceRoot":"","sources":["../../../src/lib/model/BandModel.ts"],"names":[],"mappings":"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","sourcesContent":["import bcfetch, { Album, LabelArtist, Track } from 'bandcamp-fetch';\nimport bandcamp from '../BandcampContext';\nimport BaseModel, { LoopFetchCallbackParams } from './BaseModel';\nimport ArtistEntity from '../entities/ArtistEntity';\nimport EntityConverter from '../util/EntityConverter';\nimport AlbumEntity from '../entities/AlbumEntity';\nimport TrackEntity from '../entities/TrackEntity';\nimport LabelEntity from '../entities/LabelEntity';\n\nexport interface BandModelGetLabelArtistsParams {\n  labelUrl: string;\n  pageToken?: string;\n  pageOffset?: number;\n  limit: number;\n}\n\nexport interface BandModelGetDiscographyParams {\n  bandUrl: string;\n  pageToken?: string;\n  pageOffset?: number;\n  limit: number;\n}\n\ninterface GetLabelArtistsLoopFetchCallbackParams extends LoopFetchCallbackParams {\n  labelUrl: string;\n}\n\ninterface GetDiscographyLoopFetchCallbackParams extends LoopFetchCallbackParams {\n  bandUrl: string;\n}\n\nexport default class BandModel extends BaseModel {\n\n  getLabelArtists(params: BandModelGetLabelArtistsParams) {\n    return this.loopFetch({\n      callbackParams: { ...params },\n      getFetchPromise: this.#getLabelArtistsFetchPromise.bind(this),\n      getItemsFromFetchResult: this.#getLabelArtistsFromFetchResult.bind(this),\n      convertToEntity: this.#convertFetchedLabelArtistToEntity.bind(this),\n      pageOffset: params.pageOffset,\n      pageToken: params.pageToken,\n      limit: params.limit\n    });\n  }\n\n  #getLabelArtistsFetchPromise(params: GetLabelArtistsLoopFetchCallbackParams) {\n    const queryParams = {\n      labelUrl: params.labelUrl,\n      imageFormat: this.getArtistImageFormat()\n    };\n    return bandcamp.getCache().getOrSet(\n      this.getCacheKeyForFetch('artists', queryParams),\n      () => bcfetch.limiter.band.getLabelArtists(queryParams));\n  }\n\n  #getLabelArtistsFromFetchResult(result: LabelArtist[]) {\n    return result.slice(0);\n  }\n\n  #convertFetchedLabelArtistToEntity(item: LabelArtist): ArtistEntity {\n    return EntityConverter.convertArtist(item);\n  }\n\n  getDiscography(params: BandModelGetDiscographyParams) {\n    return this.loopFetch({\n      callbackParams: { ...params },\n      getFetchPromise: this.#getDiscographyFetchPromise.bind(this),\n      getItemsFromFetchResult: this.#getDiscographyItemsFromFetchResult.bind(this),\n      convertToEntity: this.#convertFetchedDiscographyItemToEntity.bind(this),\n      pageOffset: params.pageOffset,\n      pageToken: params.pageToken,\n      limit: params.limit\n    });\n  }\n\n  #getDiscographyFetchPromise(params: GetDiscographyLoopFetchCallbackParams) {\n    const queryParams = {\n      bandUrl: params.bandUrl,\n      imageFormat: this.getAlbumImageFormat()\n    };\n    return bandcamp.getCache().getOrSet(\n      this.getCacheKeyForFetch('discography', queryParams),\n      () => bcfetch.limiter.band.getDiscography(queryParams));\n  }\n\n  #getDiscographyItemsFromFetchResult(result: Array<Album | Track>) {\n    return result.slice(0);\n  }\n\n  #convertFetchedDiscographyItemToEntity(item: Album | Track): AlbumEntity | TrackEntity {\n    if (item.type === 'album') {\n      return EntityConverter.convertAlbum(item);\n    }\n\n    return EntityConverter.convertTrack(item);\n  }\n\n  async getBand(bandUrl: string): Promise<ArtistEntity | LabelEntity> {\n    const queryParams = {\n      bandUrl,\n      imageFormat: this.getArtistImageFormat()\n    };\n\n    const band = await bandcamp.getCache().getOrSet(\n      this.getCacheKeyForFetch('band', queryParams),\n      () => bcfetch.limiter.band.getInfo(queryParams));\n\n    if (band.type === 'artist') {\n      return EntityConverter.convertArtist(band);\n    }\n\n    return EntityConverter.convertLabel(band);\n  }\n}\n"]}