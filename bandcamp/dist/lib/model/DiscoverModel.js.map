{"version":3,"file":"DiscoverModel.js","sourceRoot":"","sources":["../../../src/lib/model/DiscoverModel.ts"],"names":[],"mappings":"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","sourcesContent":["import bcfetch, { type Album, type DiscoverParams, type DiscoverResult, type DiscoverResultContinuation } from 'bandcamp-fetch';\nimport bandcamp from '../BandcampContext';\nimport BaseModel, { type LoopFetchCallbackParams, type LoopFetchResult } from './BaseModel';\nimport type AlbumEntity from '../entities/AlbumEntity';\nimport EntityConverter from '../util/EntityConverter';\n\nexport interface DiscoveryModelGetDiscoverResultParams {\n  discoverParams: DiscoverParams;\n  pageToken?: string;\n  pageOffset?: number;\n  limit: number;\n}\n\ninterface GetDiscoverResultLoopFetchCallbackParams extends LoopFetchCallbackParams {\n  discoverParams: DiscoverParams;\n}\n\nexport interface DiscoverLoopFetchResult extends LoopFetchResult<AlbumEntity> {\n  params: DiscoverParams;\n}\n\nexport default class DiscoverModel extends BaseModel {\n\n  getDiscoverResult(params: DiscoveryModelGetDiscoverResultParams) {\n    return this.loopFetch({\n      callbackParams: { ...params },\n      getFetchPromise: this.#getDiscoverResultFetchPromise.bind(this),\n      getItemsFromFetchResult: this.#getDiscoverItemsFromFetchResult.bind(this),\n      getNextPageTokenFromFetchResult: this.#getNextPageTokenFromDiscoverFetchResult.bind(this),\n      convertToEntity: this.#convertFetchedDiscoverItemToEntity.bind(this),\n      onEnd: this.#onDiscoverLoopFetchEnd.bind(this),\n      pageOffset: params.pageOffset,\n      pageToken: params.pageToken,\n      limit: params.limit\n    });\n  }\n\n  #getDiscoverResultFetchPromise(params: GetDiscoverResultLoopFetchCallbackParams) {\n    const queryParams = ((): DiscoverParams | DiscoverResultContinuation => {\n      if (params.pageToken) {\n        const parsedPageToken = JSON.parse(params.pageToken);\n        const continuation = parsedPageToken?.continuation;\n        if (continuation) {\n          return continuation;\n        }\n      }\n      return {\n        ...params.discoverParams,\n        albumImageFormat: this.getAlbumImageFormat(),\n        artistImageFormat: this.getArtistImageFormat()\n      };\n    })();\n\n    return bandcamp.getCache().getOrSet(\n      this.getCacheKeyForFetch('discover', queryParams),\n      () => bcfetch.limiter.discovery.discover(queryParams));\n  }\n\n  #getDiscoverItemsFromFetchResult(result: DiscoverResult) {\n    return result.items.filter((value) => value.type === 'album');\n  }\n\n  #getNextPageTokenFromDiscoverFetchResult(result: DiscoverResult, params: GetDiscoverResultLoopFetchCallbackParams) {\n    let indexRef = 0;\n    if (params.pageToken) {\n      const parsedPageToken = JSON.parse(params.pageToken);\n      indexRef = parsedPageToken?.indexRef || 0;\n    }\n    if (result.continuation && result.items.length > 0 && result.total > indexRef + result.items.length) {\n      const nextPageToken = {\n        continuation: result.continuation,\n        indexRef: indexRef + result.items.length\n      };\n      return JSON.stringify(nextPageToken);\n    }\n\n    return null;\n  }\n\n  #convertFetchedDiscoverItemToEntity(item: Album): AlbumEntity {\n    return EntityConverter.convertAlbum(item);\n  }\n\n  #onDiscoverLoopFetchEnd(result: LoopFetchResult<AlbumEntity>, lastFetchResult: DiscoverResult) {\n    const r: DiscoverLoopFetchResult = {\n      ...result,\n      params: lastFetchResult.params\n    };\n    return r;\n  }\n\n\n  getDiscoverOptions() {\n    return bandcamp.getCache().getOrSet(\n      this.getCacheKeyForFetch('discoverOptions'),\n      async () => {\n        const opts = await bcfetch.limiter.discovery.getAvailableOptions();\n        opts.categories = opts.categories.filter((cat) => cat.slug !== 'tshirt');\n        return opts;\n      }\n    );\n  }\n}\n"]}