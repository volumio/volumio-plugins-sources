{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport libQ from 'kew';\n\nimport js from './lib/JellyfinServerContext';\nimport { jsPromiseToKew, kewToJSPromise } from './lib/Util';\nimport * as System from './lib/System';\n\nclass ControllerJellyfinServer {\n  #context: any;\n  #commandRouter: any;\n  #serverStatus: 'started' | 'stopped';\n\n  constructor(context: any) {\n    this.#context = context;\n    this.#commandRouter = this.#context.coreCommand;\n    this.#serverStatus = 'stopped';\n  }\n\n  getUIConfig() {\n    return jsPromiseToKew(this.#doGetUIConfig())\n      .fail((error: any) => {\n        js.getLogger().error(`[jellyfin_server] getUIConfig(): Cannot populate configuration - ${error}`);\n        throw error;\n      });\n  }\n\n  async #doGetUIConfig() {\n    const langCode = this.#commandRouter.sharedVars.get('language_code');\n    const uiconf = await kewToJSPromise(this.#commandRouter.i18nJson(\n      `${__dirname}/i18n/strings_${langCode}.json`,\n      `${__dirname}/i18n/strings_en.json`,\n      `${__dirname}/UIConfig.json`));\n    const status = await System.getServiceStatus();\n    const config = await System.getConfig();\n\n    const infoSectionConf = uiconf.sections[0];\n\n    // Info section\n    switch (status) {\n      case 'active':\n        infoSectionConf.description = js.getI18n('JELLYFIN_SERVER_INFO_DESC_ACTIVE');\n        break;\n      case 'activating':\n        infoSectionConf.description = js.getI18n('JELLYFIN_SERVER_INFO_DESC_ACTIVATING');\n        break;\n      default:\n        infoSectionConf.description = js.getI18n('JELLYFIN_SERVER_INFO_DESC_INACTIVE');\n    }\n\n    if (status !== 'active') {\n      const viewReadme = infoSectionConf.content[2];\n      infoSectionConf.content = [ viewReadme ];\n    }\n    else {\n      const thisDevice = js.getDeviceInfo();\n      const networkConfig = config?.NetworkConfiguration || {};\n      const requireHttps = networkConfig.RequireHttps || false;\n      const host = requireHttps ?\n        `https://${thisDevice.host.substring(7)}` : thisDevice.host;\n      const port = requireHttps ?\n        (networkConfig.PublicHttpsPort || '8920')\n        :\n        (networkConfig.PublicPort || '8096');\n      const url = `${host}:${port}`;\n      infoSectionConf.content[0].value = url;\n      infoSectionConf.content[1].onClick.url = url;\n    }\n\n    return uiconf;\n  }\n\n  onVolumioStart() {\n    return libQ.resolve(true);\n  }\n\n  onStart() {\n    const defer = libQ.defer();\n\n    js.init(this.#context);\n\n    js.toast('info', js.getI18n('JELLYFIN_SERVER_STARTING'));\n    System.startService()\n      .then(() => {\n        js.toast('success', js.getI18n('JELLYFIN_SERVER_STARTED'));\n        this.#serverStatus = 'started';\n        defer.resolve();\n      })\n      .catch((e) => {\n        js.toast('error', js.getI18n('JELLYFIN_SERVER_ERR_START', js.getErrorMessage('', e, false)));\n        defer.reject(e);\n      });\n\n    return defer.promise;\n  }\n\n  onStop() {\n    if (this.#serverStatus === 'stopped') {\n      return libQ.resolve(true);\n    }\n\n    const defer = libQ.defer();\n\n    js.toast('info', js.getI18n('JELLYFIN_SERVER_STOPPING'));\n    System.stopService()\n      .then(() => {\n        js.toast('success', js.getI18n('JELLYFIN_SERVER_STOPPED'));\n        this.#serverStatus = 'stopped';\n        defer.resolve();\n      })\n      .catch((e) => {\n        js.toast('error', js.getI18n('JELLYFIN_SERVER_ERR_STOP', js.getErrorMessage('', e, false)));\n        // Do not reject, in case user is uninstalling a possibly broken installation - rejecting will abort the process.\n        defer.resolve();\n      });\n\n    return defer.promise;\n  }\n}\n\nexport = ControllerJellyfinServer;\n"]}