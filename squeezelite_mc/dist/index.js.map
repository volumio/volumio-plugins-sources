{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport libQ from 'kew';\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport vconf from 'v-conf';\n\nimport os from 'os';\nimport sm from './lib/SqueezeliteMCContext';\nimport { basicPlayerStartupParamsToSqueezeliteOpts, getNetworkInterfaces, jsPromiseToKew, kewToJSPromise, PlaybackTimer } from './lib/Util';\nimport { getAlsaFormats, getSqueezeliteServiceStatus, initSqueezeliteService, stopSqueezeliteService, SystemError, SystemErrorCode } from './lib/System';\nimport PlayerStatusMonitor from './lib/PlayerStatusMonitor';\nimport serverDiscovery from 'lms-discovery';\nimport CommandDispatcher from './lib/CommandDispatcher';\nimport Proxy, { ProxyStatus } from './lib/Proxy';\nimport PlayerFinder, { PlayerFinderStatus } from './lib/PlayerFinder';\nimport equal from 'fast-deep-equal';\nimport { ServerCredentials } from './lib/types/Server';\nimport Player, { BasicPlayerStartupParams, PlayerRunState, PlayerStartupParams, PlayerStatus } from './lib/types/Player';\nimport { BasicPlayerConfig, ManualPlayerConfig, PlayerConfig } from './lib/Config';\n\ninterface VolumioState {\n  service: string;\n  status: 'play' | 'pause' | 'stop';\n  title?: string;\n  artist?: string;\n  album?: string;\n  albumart?: string;\n  uri: '';\n  trackType?: string;\n  seek?: number;\n  duration?: number;\n  samplerate?: string;\n  bitdepth?: string;\n  bitrate?: string;\n  channels?: number;\n  volume?: number;\n  mute?: boolean;\n  isStreaming?: boolean;\n  repeat?: boolean;\n  repeatSingle?: boolean;\n  random?: boolean;\n}\n\nconst EMPTY_STATE = {\n  status: 'stop',\n  service: 'squeezelite_mc',\n  title: undefined,\n  artist: undefined,\n  album: undefined,\n  albumart: '/albumart',\n  uri: '',\n  trackType: undefined,\n  seek: 0,\n  duration: 0,\n  samplerate: undefined,\n  bitdepth: undefined,\n  bitrate: undefined,\n  channels: undefined\n};\n\nconst LMS_TRACK_TYPE_TO_VOLUMIO: Record<string, string> = {\n  'flc': 'flac',\n  'alc': 'alac',\n  'wvp': 'wv',\n  'aif': 'aiff',\n  'ops': 'opus'\n};\n\nconst LMS_REPEAT_OFF = 0;\nconst LMS_REPEAT_CURRENT_SONG = 1;\nconst LMS_REPEAT_PLAYLIST = 2;\nconst LMS_SHUFFLE_OFF = 0;\nconst LMS_SHUFFLE_BY_SONG = 1;\nconst LMS_SHUFFLE_BY_ALBUM = 2;\n\nconst DSD_FORMATS = [\n  'DSD_U8',\n  'DSD_U16_LE',\n  'DSD_U16_BE',\n  'DSD_U32_LE',\n  'DSD_U32_BE'\n];\n\nclass ControllerSqueezeliteMC {\n  #serviceName: string;\n  #context: any;\n  #config: any;\n  #commandRouter: any;\n  #playerRunState: PlayerRunState | undefined;\n  #playerStatusMonitor: PlayerStatusMonitor | null;\n  #playbackTimer: PlaybackTimer | null;\n  #lastState: VolumioState | null;\n  #volatileCallback: (() => void) | null;\n  #volumioSetVolumeCallback: ((volume: { vol: number }) => void) | null;\n  #commandDispatcher: CommandDispatcher | null;\n  #proxy: Proxy | null;\n  #playerFinder: PlayerFinder | null;\n  #volumioVolume: number | undefined;\n  #playerConfigChangeDelayTimer: NodeJS.Timeout | null;\n  #playerConfigChangeHandler: (() => void) | null;\n  #playerStartupParams: PlayerStartupParams | null;\n  #previousDoubleClickTimeout: NodeJS.Timeout | null;\n\n  constructor(context: any) {\n    this.#context = context;\n    this.#commandRouter = this.#context.coreCommand;\n    this.#serviceName = 'squeezelite_mc';\n    this.#playerStatusMonitor = null;\n    this.#playbackTimer = null;\n    this.#lastState = null;\n    this.#volatileCallback = null;\n    this.#volumioSetVolumeCallback = null;\n    this.#commandDispatcher = null;\n    this.#playerFinder = null;\n    this.#playerConfigChangeDelayTimer = null;\n    this.#playerConfigChangeHandler = null;\n    this.#playerStartupParams = null;\n    this.#previousDoubleClickTimeout = null;\n  }\n\n  getUIConfig() {\n    return jsPromiseToKew(this.#doGetUIConfig())\n      .fail((error: any) => {\n        sm.getLogger().error(`[squeezelite_mc] getUIConfig(): Cannot populate configuration - ${error}`);\n        throw error;\n      });\n  }\n\n  async #doGetUIConfig() {\n    const langCode = this.#commandRouter.sharedVars.get('language_code');\n    const uiconf = await kewToJSPromise(this.#commandRouter.i18nJson(\n      `${__dirname}/i18n/strings_${langCode}.json`,\n      `${__dirname}/i18n/strings_en.json`,\n      `${__dirname}/UIConfig.json`));\n    const status = await getSqueezeliteServiceStatus();\n\n    const statusUIConf = uiconf.sections[0];\n    const squeezeliteBasicUIConf = uiconf.sections[1];\n    const squeezeliteManualUIConf = uiconf.sections[2];\n    const serverCredentialsUIConf = uiconf.sections[3];\n\n    const playerConfig = this.#getPlayerConfig();\n    if (playerConfig.type === 'basic') {\n      uiconf.sections.splice(2, 1);\n    }\n    else { // `manual` playerConfigType\n      uiconf.sections.splice(1, 1);\n    }\n\n    /**\n     * Status conf\n     */\n    let statusDesc, statusButtonType;\n    if (status === 'active' && this.#playerRunState !== PlayerRunState.ConfigRequireRestart) {\n      const player = this.#playerStatusMonitor ? this.#playerStatusMonitor.getPlayer() : null;\n      statusDesc = player ?\n        sm.getI18n('SQUEEZELITE_MC_DESC_STATUS_CONNECTED', player.server.name, player.server.ip) :\n        sm.getI18n('SQUEEZELITE_MC_DESC_STATUS_STARTED');\n    }\n    else if (this.#playerRunState === PlayerRunState.StartError) {\n      statusDesc = sm.getI18n('SQUEEZELITE_MC_DESC_STATUS_ERR_START');\n      statusButtonType = 'start';\n    }\n    else if (this.#playerRunState === PlayerRunState.ConfigRequireRestart) {\n      statusDesc = (status === 'active') ?\n        sm.getI18n('SQUEEZELITE_MC_DESC_STATUS_ERR_RESTART_CONFIG') :\n        sm.getI18n('SQUEEZELITE_MC_DESC_STATUS_ERR_START');\n      statusButtonType = (status === 'active') ? 'restart' : 'start';\n    }\n    else if (this.#playerRunState === PlayerRunState.ConfigRequireRevalidate) {\n      statusDesc = sm.getI18n('SQUEEZELITE_MC_DESC_STATUS_ERR_REVALIDATE');\n      statusButtonType = 'revalidate';\n    }\n    else {\n      statusDesc = sm.getI18n('SQUEEZELITE_MC_DESC_STATUS_STOPPED');\n      statusButtonType = 'start';\n    }\n    let statusButton: any = {\n      'id': 'startSqueezelite',\n      'element': 'button',\n      'onClick': {\n        'type': 'emit',\n        'message': 'callMethod',\n        'data': {\n          'endpoint': 'music_service/squeezelite_mc',\n          'method': 'configStartSqueezelite',\n          'data': {\n            force: true\n          }\n        }\n      }\n    };\n    switch (statusButtonType) {\n      case 'start':\n        statusButton.label = sm.getI18n('SQUEEZELITE_MC_BTN_START');\n        break;\n      case 'restart':\n        statusButton.label = sm.getI18n('SQUEEZELITE_MC_BTN_RESTART');\n        break;\n      case 'revalidate':\n        statusButton.label = sm.getI18n('SQUEEZELITE_MC_BTN_REVALIDATE');\n        break;\n      default:\n        statusButton = null;\n    }\n    statusUIConf.description = statusDesc;\n    if (statusButton) {\n      statusUIConf.content = [ statusButton ];\n    }\n\n    /**\n     * Squeezelite conf\n     */\n    if (playerConfig.type === 'basic') {\n      const { playerNameType, playerName, dsdPlayback, fadeOnPauseResume } = playerConfig;\n      // Player name\n      squeezeliteBasicUIConf.content[1].value = {\n        value: playerNameType\n      };\n      switch (playerNameType) {\n        case 'custom':\n          squeezeliteBasicUIConf.content[1].value.label = sm.getI18n('SQUEEZELITE_MC_PLAYER_NAME_CUSTOM');\n          break;\n        default: // 'hostname'\n          squeezeliteBasicUIConf.content[1].value.label = sm.getI18n('SQUEEZELITE_MC_PLAYER_NAME_HOSTNAME');\n      }\n      squeezeliteBasicUIConf.content[2].value = playerName;\n\n      // DSD playback\n      squeezeliteBasicUIConf.content[3].value = {\n        value: dsdPlayback\n      };\n      switch (dsdPlayback) {\n        case 'pcm':\n          squeezeliteBasicUIConf.content[3].value.label = sm.getI18n('SQUEEZELITE_MC_DSD_PLAYBACK_PCM');\n          break;\n        case 'dop':\n          squeezeliteBasicUIConf.content[3].value.label = sm.getI18n('SQUEEZELITE_MC_DSD_PLAYBACK_DOP');\n          break;\n        case 'DSD_U8':\n          squeezeliteBasicUIConf.content[3].value.label = sm.getI18n('SQUEEZELITE_MC_DSD_PLAYBACK_U8');\n          break;\n        case 'DSD_U16_LE':\n          squeezeliteBasicUIConf.content[3].value.label = sm.getI18n('SQUEEZELITE_MC_DSD_PLAYBACK_U16_LE');\n          break;\n        case 'DSD_U16_BE':\n          squeezeliteBasicUIConf.content[3].value.label = sm.getI18n('SQUEEZELITE_MC_DSD_PLAYBACK_U16_BE');\n          break;\n        case 'DSD_U32_LE':\n          squeezeliteBasicUIConf.content[3].value.label = sm.getI18n('SQUEEZELITE_MC_DSD_PLAYBACK_U32_LE');\n          break;\n        case 'DSD_U32_BE':\n          squeezeliteBasicUIConf.content[3].value.label = sm.getI18n('SQUEEZELITE_MC_DSD_PLAYBACK_U32_BE');\n          break;\n        default: // 'auto'\n          squeezeliteBasicUIConf.content[3].value.label = sm.getI18n('SQUEEZELITE_MC_DSD_PLAYBACK_AUTO');\n      }\n      // Fade on pause / resume\n      squeezeliteBasicUIConf.content[4].value = fadeOnPauseResume;\n    }\n    else { // 'manual' playerConfigType\n      squeezeliteManualUIConf.content[1].value = playerConfig.fadeOnPauseResume;\n      squeezeliteManualUIConf.content[2].value = playerConfig.startupOptions;\n\n      // Get suggested startup options\n      let suggestedStartupOptions;\n      try {\n        const defaultStartupParams = await this.#getPlayerStartupParams(true);\n        suggestedStartupOptions = basicPlayerStartupParamsToSqueezeliteOpts(defaultStartupParams);\n      }\n      catch (error) {\n        if (error instanceof SystemError && error.code === SystemErrorCode.DeviceBusy) {\n          squeezeliteManualUIConf.description = sm.getI18n('SQUEEZELITE_MC_ERR_SUGGESTED_STARTUP_OPTS_DEV_BUSY');\n        }\n        else {\n          squeezeliteManualUIConf.description = sm.getI18n('SQUEEZELITE_MC_ERR_SUGGESTED_STARTUP_OPTS');\n        }\n      }\n      squeezeliteManualUIConf.content[3].value = suggestedStartupOptions;\n      // Apply suggested button payload\n      squeezeliteManualUIConf.content[4].onClick.data.data = {\n        startupOptions: suggestedStartupOptions\n      };\n    }\n\n    /**\n     * Server Credentials conf\n     */\n    const serverCredentials = sm.getConfigValue('serverCredentials');\n    const discoveredServers = serverDiscovery.getAllDiscovered();\n    discoveredServers.sort((s1, s2) => s1.name.localeCompare(s2.name));\n    // Server field\n    const serversSelectData = discoveredServers.map((server) => {\n      const label = `${server.name} (${server.ip})`;\n      return {\n        value: server.name,\n        label: serverCredentials[server.name] ? `${label} (*)` : label\n      };\n    });\n    // Add servers with assigned credentials but not currently discovered\n    Object.keys(serverCredentials).forEach((serverName) => {\n      const discovered = discoveredServers.find((server) => server.name === serverName);\n      if (!discovered) {\n        serversSelectData.push({\n          value: serverName,\n          label: `${serverName} (*)(x)`\n        });\n      }\n    });\n    serverCredentialsUIConf.content[0].options = serversSelectData;\n    if (serversSelectData.length > 0) {\n      serverCredentialsUIConf.content[0].value = serversSelectData[0] || null;\n      // Username and password fields\n      serversSelectData.map((select) => select.value).forEach((serverName) => {\n        const { username = '', password = '' } = serverCredentials[serverName] || {};\n        const usernameField = {\n          id: `${serverName}_username`,\n          type: 'text',\n          element: 'input',\n          label: sm.getI18n('SQUEEZELITE_MC_USERNAME'),\n          value: username,\n          visibleIf: {\n            field: 'server',\n            value: serverName\n          }\n        };\n        const passwordField = {\n          id: `${serverName}_password`,\n          type: 'password',\n          element: 'input',\n          label: sm.getI18n('SQUEEZELITE_MC_PASSWORD'),\n          value: password,\n          visibleIf: {\n            field: 'server',\n            value: serverName\n          }\n        };\n        serverCredentialsUIConf.content.push(usernameField, passwordField);\n        serverCredentialsUIConf.saveButton.data.push(usernameField.id, passwordField.id);\n      });\n    }\n    else {\n      serverCredentialsUIConf.description = sm.getI18n('SQUEEZELITE_MC_NO_SERVERS');\n      delete serverCredentialsUIConf.content[0];\n      delete serverCredentialsUIConf.saveButton;\n    }\n\n    return uiconf;\n  }\n\n  getConfigurationFiles() {\n    return [ 'config.json' ];\n  }\n\n  /**\n   * Plugin lifecycle\n   */\n\n  onVolumioStart() {\n    const configFile = this.#commandRouter.pluginManager.getConfigurationFile(this.#context, 'config.json');\n    this.#config = new vconf();\n    this.#config.loadFile(configFile);\n    return libQ.resolve(true);\n  }\n\n  onStart() {\n    const defer = libQ.defer();\n\n    sm.init(this.#context, this.#config);\n    this.#lastState = null;\n    this.#playbackTimer = new PlaybackTimer();\n\n    // Listen for volume change in Volumio\n    if (!this.#volumioSetVolumeCallback) {\n      this.#volumioSetVolumeCallback = (volume) => {\n        this.#volumioVolume = volume.vol;\n        if (this.#playbackTimer && this.#commandDispatcher) {\n          /**\n           * Volumioupdatevolume() triggers #pushState() in statemachine after calling\n           * this callback - but volatile state with old 'seek' value (from last push) will be used.\n           * this is undesirable if current status is 'play', so we update the statemachine's volatile state\n           * with seek value obtained from our internal playbackTimer.\n           */\n          sm.getLogger().info(`[squeezelite_mc] Setting Squeezelite volume to ${volume.vol}`);\n          if (this.#lastState && this.#lastState.status === 'play' && this.#lastState.seek !== undefined) {\n            this.#pushState({ ...this.#lastState, seek: this.#playbackTimer.getSeek() });\n          }\n          this.#commandDispatcher.sendVolume(this.#volumioVolume);\n        }\n      };\n      this.#commandRouter.addCallback('volumioupdatevolume', this.#volumioSetVolumeCallback);\n    }\n\n    this.#proxy = new Proxy(sm.getConfigValue('serverCredentials'));\n    this.#proxy.start()\n      .catch(() => {\n        sm.getLogger().warn('[squeezelite_mc] Unable to start proxy server - requests for artwork on password-protected servers will be denied');\n      })\n      .then(() => this.#getVolumioVolume())\n      .then((volume) => {\n        this.#volumioVolume = volume;\n        return this.#initAndStartPlayerFinder();\n      })\n      .then(() => {\n        this.#playerConfigChangeHandler = this.#handlePlayerConfigChange.bind(this);\n        this.#commandRouter.sharedVars.registerCallback('alsa.outputdevice', this.#playerConfigChangeHandler);\n        this.#commandRouter.sharedVars.registerCallback('alsa.outputdevicemixer', this.#playerConfigChangeHandler);\n        sm.getMpdPlugin().config.registerCallback('dop', this.#playerConfigChangeHandler);\n      })\n      .then(() => this.#getPlayerStartupParams())\n      .then((config) => {\n        this.#playerStartupParams = config;\n        sm.getLogger().info(`[squeezelite_mc] Starting Squeezelite service with params: ${JSON.stringify(this.#playerStartupParams)}`);\n        sm.toast('info', sm.getI18n('SQUEEZELITE_MC_STARTING'));\n        return initSqueezeliteService(config);\n      })\n      .then(() => {\n        sm.toast('success', sm.getI18n('SQUEEZELITE_MC_STARTED'));\n        this.#playerRunState = PlayerRunState.Normal;\n        defer.resolve();\n      })\n      .catch((error) => {\n        this.#playerRunState = PlayerRunState.StartError;\n        if (error instanceof SystemError && error.code === SystemErrorCode.DeviceBusy) {\n          sm.toast('error', sm.getI18n('SQUEEZELITE_MC_ERR_START_DEV_BUSY'));\n          defer.resolve();\n        }\n        else {\n          sm.toast('error', sm.getErrorMessage(sm.getI18n('SQUEEZELITE_MC_ERR_START'), error, false));\n          defer.reject(error);\n        }\n      });\n\n    return defer.promise;\n  }\n\n  onStop() {\n    const defer = libQ.defer();\n\n    this.#playerStartupParams = null;\n    this.#commandDispatcher = null;\n    if (this.#playbackTimer) {\n      this.#playbackTimer.stop();\n    }\n\n    // Hack to remove volume change listener\n    const callbacks = this.#commandRouter.callbacks['volumioupdatevolume'];\n    if (callbacks && Array.isArray(callbacks)) {\n      const cbIndex = callbacks.indexOf(this.#volumioSetVolumeCallback);\n      if (cbIndex >= 0) {\n        callbacks.splice(cbIndex, 1);\n      }\n    }\n\n    // Hack to remove player config change handler\n    if (this.#playerConfigChangeHandler) {\n      this.#commandRouter.sharedVars.callbacks.delete('alsa.outputdevice', this.#playerConfigChangeHandler);\n      this.#commandRouter.sharedVars.callbacks.delete('alsa.outputdevicemixer', this.#playerConfigChangeHandler);\n      sm.getMpdPlugin().config.callbacks.delete('dop', this.#playerConfigChangeHandler);\n      this.#playerConfigChangeHandler = null;\n    }\n\n    if (this.#proxy && this.#proxy.getStatus() !== ProxyStatus.Stopped) {\n      this.#proxy.stop();\n    }\n\n    const promises = [\n      this.#clearPlayerStatusMonitor(),\n      this.#clearPlayerFinder(),\n      stopSqueezeliteService()\n    ];\n\n    sm.toast('info', sm.getI18n('SQUEEZELITE_MC_STOPPING'));\n\n    Promise.all(promises).then(() => {\n      sm.toast('success', sm.getI18n('SQUEEZELITE_MC_STOPPED'));\n      sm.reset();\n      defer.resolve();\n    })\n      .catch((error) => {\n        sm.toast('error', sm.getErrorMessage(sm.getI18n('SQUEEZELITE_MC_ERR_STOP'), error, false));\n        defer.reject(error);\n      });\n\n    return defer.promise;\n  }\n\n  /**\n   * Workflow logic\n   */\n\n  async #initAndStartPlayerFinder() {\n    if (!this.#playerFinder) {\n      this.#playerFinder = new PlayerFinder();\n\n      this.#playerFinder.on('found', async (data) => {\n        const serverCredentials = sm.getConfigValue('serverCredentials');\n        const player = data[0];\n        sm.getLogger().info(`[squeezelite_mc] Player found: ${JSON.stringify(player)}`);\n        this.#commandDispatcher = new CommandDispatcher(player, serverCredentials);\n\n        // Set Squeezelite's volume to Volumio's\n        if (this.#volumioVolume !== undefined) {\n          await this.#commandDispatcher.sendVolume(this.#volumioVolume);\n        }\n\n        await this.#applyFadeOnPauseResume();\n\n        await this.#clearPlayerStatusMonitor(); // Ensure there is only one monitor instance\n        const playerStatusMonitor = new PlayerStatusMonitor(player, serverCredentials);\n        this.#playerStatusMonitor = playerStatusMonitor;\n        playerStatusMonitor.on('update', this.#handlePlayerStatusUpdate.bind(this));\n        playerStatusMonitor.on('disconnect', this.#handlePlayerDisconnect.bind(this));\n        await playerStatusMonitor.start();\n\n        sm.toast('info', sm.getI18n('SQUEEZELITE_MC_CONNECTED', player.server.name, player.server.ip));\n      });\n\n      this.#playerFinder.on('lost', this.#handlePlayerDisconnect.bind(this));\n      this.#playerFinder.on('error', this.#handlePlayerDiscoveryError.bind(this));\n    }\n\n    if (this.#playerFinder.getStatus() === PlayerFinderStatus.Stopped) {\n      const networkAddresses = Object.values(getNetworkInterfaces());\n      const ipAddresses: string[] = [];\n      const macAddresses: string[] = [];\n      for (const addresses of networkAddresses) {\n        for (const data of addresses) {\n          if (data.address && !ipAddresses.includes(data.address)) {\n            ipAddresses.push(data.address);\n          }\n          if (data.mac && !macAddresses.includes(data.mac)) {\n            macAddresses.push(data.mac);\n          }\n        }\n      }\n      return this.#playerFinder.start({\n        serverCredentials: sm.getConfigValue('serverCredentials'),\n        eventFilter: { // Only notify when found or lost player matches Volumio device IP and player ID matches mac addr\n          playerIP: ipAddresses,\n          playerId: macAddresses\n        }\n      });\n    }\n  }\n\n  #applyFadeOnPauseResume() {\n    const { fadeOnPauseResume } = this.#getPlayerConfig();\n    if (this.#commandDispatcher && fadeOnPauseResume) {\n      /**\n       * Set LMS Player Settings -> Audio -> Volume Control to 'Output level is fixed at 100%'.\n       * This is to avoid Squeezelite from zero-ing out the volume on pause, which obviously\n       * causes problems with native DSD playback. Also, after Squeezelite mutes the volume on pause,\n       * playing from another Volumio source will not restore the volume to its previous level (i.e.\n       * it stays muted).\n       */\n      return this.#commandDispatcher.sendPref('digitalVolumeControl', 0);\n    }\n  }\n\n  async #clearPlayerStatusMonitor() {\n    if (this.#playerStatusMonitor) {\n      await this.#playerStatusMonitor.stop();\n      this.#playerStatusMonitor.removeAllListeners();\n      this.#playerStatusMonitor = null;\n    }\n  }\n\n  async #clearPlayerFinder() {\n    if (this.#playerFinder) {\n      await this.#playerFinder.stop();\n      this.#playerFinder.removeAllListeners();\n      this.#playerFinder = null;\n    }\n  }\n\n  async #handlePlayerDisconnect() {\n    if (this.#playerStatusMonitor) {\n      const player = this.#playerStatusMonitor.getPlayer();\n      sm.toast('info', sm.getI18n('SQUEEZELITE_MC_DISCONNECTED', player.server.name, player.server.ip));\n    }\n    await this.#clearPlayerStatusMonitor();\n    this.#commandDispatcher = null;\n    this.#lastState = null;\n    if (this.#playbackTimer) {\n      this.#playbackTimer.stop();\n    }\n    if (this.#isCurrentService()) {\n      this.unsetVolatile();\n    }\n  }\n\n  #handlePlayerDiscoveryError(message: string) {\n    sm.toast('error', sm.getI18n('SQUEEZELITE_MC_ERR_PLAYER_DISCOVER', message));\n  }\n\n  async #handlePlayerStatusUpdate(data: {player: Player; status: PlayerStatus}) {\n    const { player, status } = data;\n    const isCurrentService = this.#isCurrentService();\n\n    if (!status.currentTrack) {\n      if (isCurrentService) {\n        this.#pushEmptyState();\n      }\n      return;\n    }\n\n    const track = status.currentTrack;\n    const albumartUrl = (() => {\n      let url: string | null = null;\n      let useProxy = false;\n      if (track.artworkUrl) {\n        if (track.artworkUrl.startsWith('/imageproxy')) {\n          url = `http://${player.server.ip}:${player.server.jsonPort}${track.artworkUrl}`;\n          useProxy = true;\n        }\n        else {\n          url = track.artworkUrl;\n        }\n      }\n      else if (track.coverArt) {\n        url = `http://${player.server.ip}:${player.server.jsonPort}/music/current/cover.jpg?player=${encodeURIComponent(player.id)}&ms=${Date.now()}`;\n        useProxy = true;\n      }\n\n      if (!url) {\n        return '/albumart';\n      }\n\n      let proxyIP = null;\n      if (useProxy && this.#proxy?.getStatus() === ProxyStatus.Started) {\n        const volumioIPs = this.#commandRouter.getCachedPAddresses ? this.#commandRouter.getCachedPAddresses() : this.#commandRouter.getCachedIPAddresses();\n        if (volumioIPs) {\n          if (volumioIPs.eth0) {\n            proxyIP = volumioIPs.eth0;\n          }\n          else if (volumioIPs.wlan0 && volumioIPs.wlan0 !== '192.168.211.1') {\n            proxyIP = volumioIPs.wlan0;\n          }\n        }\n      }\n\n      if (!proxyIP) {\n        return url;\n      }\n\n      const proxyPort = this.#proxy?.getAddress()?.port;\n      const proxyAddr = proxyPort ? `${proxyIP}:${proxyPort}` : proxyIP;\n\n      const qs = new URLSearchParams({\n        server_name: player.server.name,\n        url,\n        fallback: `http://${proxyIP}/albumart`\n      });\n\n      return `http://${proxyAddr}/?${qs.toString()}`;\n\n    })();\n\n    const isStreaming = track.duration === 0 || !status.canSeek;\n    const volumioState: VolumioState = {\n      status: status.mode,\n      service: 'squeezelite_mc',\n      title: track.title,\n      artist: track.artist || track.trackArtist || track.albumArtist,\n      album: track.album || track.remoteTitle,\n      albumart: albumartUrl,\n      uri: '',\n      trackType: track.type ? LMS_TRACK_TYPE_TO_VOLUMIO[track.type] || track.type : undefined,\n      seek: !isStreaming && status.time !== undefined ? Math.ceil(status.time * 1000) : undefined,\n      duration: track.duration ? Math.ceil(track.duration) : undefined,\n      samplerate: track.sampleRate ? `${track.sampleRate / 1000} kHz` : undefined,\n      bitdepth: track.sampleSize ? `${track.sampleSize} bit` : undefined,\n      channels: undefined,\n      isStreaming,\n      volume: status.volume\n    };\n\n    // Volatile state does not support the 'bitrate' field!\n    // If samplerate or bitdepth is not available, set bitrate as samplerate.\n    if ((!volumioState.samplerate || !volumioState.bitdepth) && track.bitrate) {\n      volumioState.samplerate = track.bitrate;\n      volumioState.bitdepth = undefined;\n    }\n\n    switch (status.repeatMode) {\n      case LMS_REPEAT_PLAYLIST:\n        volumioState.repeat = true;\n        volumioState.repeatSingle = false;\n        break;\n      case LMS_REPEAT_CURRENT_SONG:\n        volumioState.repeat = true;\n        volumioState.repeatSingle = true;\n        break;\n      default: // LMS_REPEAT_OFF\n        volumioState.repeat = false;\n        volumioState.repeatSingle = false;\n    }\n\n    switch (status.shuffleMode) {\n      case LMS_SHUFFLE_BY_SONG:\n      case LMS_SHUFFLE_BY_ALBUM:\n        volumioState.random = true;\n        break;\n      default: // LMS_SHUFFLE_OFF\n        volumioState.random = false;\n    }\n\n    // Sometimes, the artwork_url stays unchanged on new song (perhaps not yet loaded?),\n    // So we request another status update after a short timeout period.\n    if (this.#lastState) {\n      const isNewSong = this.#lastState.title !== volumioState.title;\n      if (isNewSong && track.artworkUrl) {\n        setTimeout(() => {\n          this.#requestPlayerStatusUpdate();\n        }, 3000);\n      }\n    }\n    this.#lastState = volumioState;\n\n    if (!isCurrentService && volumioState.status === 'play') {\n      sm.getLogger().info('[squeezelite_mc] \\'play\\' status received while not being the current service.');\n      await this.#stopCurrentServiceAndSetVolatile();\n      this.#pushState(volumioState);\n\n      // Squeezelite might not be able to start playing immediately, such as when\n      // The previous service has not yet released the audio output device. So we request another\n      // Status update after a short while - hopefully Squeezelite will be playing by then.\n      setTimeout(() => {\n        this.#requestPlayerStatusUpdate();\n      }, 3000);\n    }\n    else if (isCurrentService) {\n      if (volumioState.status === 'stop') {\n        /**\n         * Statemachine does weird things when the volatile status is 'stop'. The result is that\n         * the state appears as if the track is still playing.\n         * We just push empty state here and hope for the best. At least with what we do\n         * in #pushEmptyState(), playback will appear to have stopped.\n         */\n        this.#pushEmptyState();\n      }\n      else {\n        this.#pushState(volumioState);\n\n        if (this.#playbackTimer) {\n          // Start or stop internal playbackTimer\n          if (!volumioState.isStreaming && volumioState.status === 'play') {\n            this.#playbackTimer.start(volumioState.seek);\n          }\n          else {\n            this.#playbackTimer.stop();\n          }\n        }\n      }\n    }\n\n    // Set Volumio's volume to Squeezelite's\n    if (isCurrentService && this.#volumioVolume !== volumioState.volume) {\n      this.#commandRouter.volumiosetvolume(volumioState.volume);\n    }\n  }\n\n  #pushState(state: VolumioState) {\n    sm.getLogger().info(`[squeezelite_mc] #pushState(): ${JSON.stringify(state)}`);\n    this.#commandRouter.servicePushState(state, this.#serviceName);\n  }\n\n  async #stopCurrentServiceAndSetVolatile() {\n    if (this.#isCurrentService()) {\n      return;\n    }\n\n    const stopCurrentServicePlayback = async () => {\n      try {\n        const currentService = this.#getCurrentService();\n        const statemachine = sm.getStateMachine();\n        const isPlaybackByMpd = currentService === 'mpd' || (statemachine.isConsume && statemachine.consumeUpdateService === 'mpd');\n        if (isPlaybackByMpd) {\n          /**\n           * MpdPlugin pushes 'stop' states which do not get ignored by the statemachine even after we have called setVolatile().\n           * The statemachine just combines the volatile state with the mpdplugin's 'stop' states and completely messes itself up.\n           * We need to tell mpdPlugin to ignore updates after stopping. Note, however, if the current service / state consumption\n           * is not handled by mpdPlugin, but similarly pushes states after stopping, then this will also screw up the statemachine...\n           */\n          sm.getMpdPlugin().ignoreUpdate(true);\n        }\n        return kewToJSPromise(this.#commandRouter.volumioStop());\n      }\n      catch (error) {\n        sm.getLogger().error(sm.getErrorMessage('[squeezelite_mc] An error occurred while stopping playback by current service:', error));\n        sm.getLogger().error('[squeezelite_mc] Continuing anyway...');\n      }\n    };\n\n    // Stop any playback by the currently active service\n    sm.getLogger().info('[squeezelite_mc] Stopping playback by current service...');\n    sm.getStateMachine().setConsumeUpdateService(undefined);\n    await stopCurrentServicePlayback();\n\n    // Unset any volatile state of currently active service\n    const statemachine = sm.getStateMachine();\n    if (statemachine.isVolatile) {\n      statemachine.unSetVolatile();\n    }\n\n    // Set volatile\n    sm.getLogger().info('[squeezelite_mc] Setting ourselves as the current service...');\n    if (!this.#volatileCallback) {\n      this.#volatileCallback = this.onUnsetVolatile.bind(this);\n    }\n    sm.getStateMachine().setVolatile({\n      service: this.#serviceName,\n      callback: this.#volatileCallback\n    });\n    sm.getStateMachine().setConsumeUpdateService(undefined);\n  }\n\n  unsetVolatile() {\n    sm.getStateMachine().unSetVolatile();\n  }\n\n  // Callback that gets called by statemachine when unsetting volatile state\n  onUnsetVolatile() {\n    this.#pushEmptyState();\n    sm.getMpdPlugin().ignoreUpdate(false);\n\n    /**\n     * There is no graceful handling of switching from one music service plugin to another\n     * in Volumio. Statemachine calls volatile callbacks in unsetVolatile(), but does not\n     * wait for them to complete. That means there is no chance to actually clean things up before\n     * moving to another music service.\n     * When we call stop() here, we should ideally be able to return a promise that resolves when\n     * the output device is closed by Squeezelite, with statemachine then proceeding to the next\n     * music service. But since there is no such mechanism, and if Squeezelite is in the middle of playing\n     * something, then you will most likely get an \"Alsa device busy\" error when the next music service\n     * tries to access the output device.\n     * No solution I can think of, or am I doing this the wrong way?\n     */\n    this.stop();\n  }\n\n  #pushEmptyState() {\n    if (this.#playbackTimer) {\n      this.#playbackTimer.stop();\n    }\n    sm.getLogger().info('[squeezelite_mc] Pushing empty state...');\n    // Need to first push empty state with pause status first so the empty volatileState gets registered\n    // By statemachine.\n    this.#commandRouter.servicePushState(Object.assign(EMPTY_STATE, { status: 'pause' }), this.#serviceName);\n    // Then push empty state with stop status. Note that the actual state will remain as 'pause', but trying to\n    // Work with the logic of the state machine, or lack thereof, is just too much to bear...\n    this.#commandRouter.servicePushState(EMPTY_STATE, this.#serviceName);\n  }\n\n  #getCurrentService() {\n    const currentstate = this.#commandRouter.volumioGetState();\n    return (currentstate !== undefined && currentstate.service !== undefined) ? currentstate.service : null;\n  }\n\n  #isCurrentService() {\n    return this.#getCurrentService() === this.#serviceName;\n  }\n\n  #requestPlayerStatusUpdate() {\n    if (this.#isCurrentService() && this.#playerStatusMonitor) {\n      this.#playerStatusMonitor.requestUpdate();\n    }\n  }\n\n  #getPlayerConfig(): PlayerConfig {\n    const playerConfigType = sm.getConfigValue('playerConfigType');\n    const playerConfig = playerConfigType === 'basic' ?\n      sm.getConfigValue('basicPlayerConfig') : sm.getConfigValue('manualPlayerConfig');\n    const defaultPlayerConfig = playerConfigType === 'basic' ?\n      sm.getConfigValue('basicPlayerConfig', true) : sm.getConfigValue('manualPlayerConfig', true);\n    return {\n      ...defaultPlayerConfig,\n      ...playerConfig\n    };\n  }\n\n  async #getPlayerStartupParams(getDefault: true): Promise<BasicPlayerStartupParams>;\n  async #getPlayerStartupParams(getDefault?: boolean): Promise<PlayerStartupParams>;\n  async #getPlayerStartupParams(getDefault = false): Promise<PlayerStartupParams> {\n    const playerConfigType = sm.getConfigValue('playerConfigType');\n    if (playerConfigType === 'basic' || getDefault) {\n      const config = sm.getConfigValue('basicPlayerConfig', getDefault);\n      // Player name\n      let playerName: string;\n      if (config.playerNameType === 'custom' && config.playerName) {\n        playerName = config.playerName;\n      }\n      else {\n        // Default - use device hostname. Don't rely on Squeezelite to set this, since it sometimes sets its\n        // Name to \"SqueezeLite\", which is not what we want).\n        playerName = os.hostname();\n      }\n\n      // Alsa\n      const device: string = this.#commandRouter.executeOnPlugin('audio_interface', 'alsa_controller', 'getConfigParam', 'outputdevice');\n      const card = device.indexOf(',') >= 0 ? device.charAt(0) : device;\n      const mixerType = this.#commandRouter.executeOnPlugin('audio_interface', 'alsa_controller', 'getConfigParam', 'mixer_type'); // Software / Hardware\n      // `mixer` is for squeezelite -V option:\n      // - null for 'None' mixer type (use Squeezelite software volume control)\n      // - Otherwise, set to same as Volumio (e.g. 'SoftMaster' for 'Software' mixer type)\n      const mixer = mixerType !== 'None' ? (() => {\n        const mixerDev: string = this.#commandRouter.executeOnPlugin('audio_interface', 'alsa_controller', 'getConfigParam', 'mixer');\n        if (mixerDev.indexOf(',') >= 0) {\n          const mixerArr = mixerDev.split(',');\n          return `${mixerArr[0]},${mixerArr[1]}`;\n        }\n\n        return mixerDev;\n\n      })() : null;\n\n      // DSD format\n      const dsdPlayback = config.dsdPlayback;\n      let dsdFormatPromise: Promise<string | null>,\n        getBestSupportedDSDFormatCalled = false;\n      if (mixerType === 'Software' || dsdPlayback === 'pcm') {\n        dsdFormatPromise = Promise.resolve(null);\n      }\n      else if (dsdPlayback === 'dop') {\n        dsdFormatPromise = Promise.resolve('dop');\n      }\n      else if (DSD_FORMATS.includes(dsdPlayback)) {\n        dsdFormatPromise = Promise.resolve(dsdPlayback);\n      }\n      else { // Auto based on Volumio's \"DSD Playback Mode\" setting\n        const dop = !!this.#commandRouter.executeOnPlugin('music_service', 'mpd', 'getConfigParam', 'dop');\n        if (dop) {\n          dsdFormatPromise = Promise.resolve('dop');\n        }\n        else {\n          dsdFormatPromise = this.#getBestSupportedDSDFormat(card);\n          getBestSupportedDSDFormatCalled = true;\n        }\n      }\n      const dsdFormat = await dsdFormatPromise;\n\n      if (!getBestSupportedDSDFormatCalled) {\n        /**\n         * #getBestSupportedDSDFormat() might not always be able to obtain ALSA formats (such as when device is busy).\n         * We call it whenever we have the chance so that, if the call is successful, the ALSA formats can be kept\n         * in cache until we actually need them.\n         */\n        await this.#getBestSupportedDSDFormat(card, true);\n      }\n\n      return {\n        type: 'basic',\n        playerName,\n        card,\n        mixerType,\n        mixer,\n        dsdFormat\n      };\n    }\n\n    // Manual playerConfigType\n    const config = sm.getConfigValue('manualPlayerConfig');\n    return {\n      type: 'manual',\n      startupOptions: config.startupOptions\n    };\n  }\n\n  async #getBestSupportedDSDFormat(card: string, noErr = false) {\n    const cachedAlsaFormats = sm.get<Record<string, string[]>>('alsaFormats', {});\n    const alsaFormatsPromise = cachedAlsaFormats[card] ? Promise.resolve(cachedAlsaFormats[card]) : getAlsaFormats(card);\n    try {\n      const alsaFormats = await alsaFormatsPromise;\n      if (alsaFormats.length === 0) {\n        sm.getLogger().warn(`[squeezelite_mc] No ALSA formats returned for card ${card}`);\n        return null;\n      }\n\n      cachedAlsaFormats[card] = alsaFormats;\n      sm.set('alsaFormats', cachedAlsaFormats);\n\n      for (let i = DSD_FORMATS.length - 1; i >= 0; i--) {\n        const dsdFormat = DSD_FORMATS[i];\n        if (alsaFormats.includes(dsdFormat)) {\n          return dsdFormat;\n        }\n      }\n      return null;\n\n    }\n    catch (error) {\n      if (noErr) {\n        return null;\n      }\n\n      throw error;\n\n    }\n  }\n\n  async #getVolumioVolume() {\n    try {\n      const volumeData = await kewToJSPromise(this.#commandRouter.volumioretrievevolume());\n      return volumeData.vol;\n    }\n    catch (error) {\n      return 0;\n    }\n  }\n\n  async #revalidatePlayerConfig(options?: { force?: boolean }) {\n    let startupParams;\n    let startupParamsChanged;\n    try {\n      sm.toast('info', sm.getI18n('SQUEEZELITE_MC_REVALIDATING'));\n      startupParams = await this.#getPlayerStartupParams();\n    }\n    catch (error) {\n      if (error instanceof SystemError && error.code === SystemErrorCode.DeviceBusy) {\n        sm.toast('error', sm.getI18n('SQUEEZELITE_MC_ERR_REVALIDATE_DEV_BUSY'));\n      }\n      else {\n        sm.toast('error', sm.getErrorMessage(sm.getI18n('SQUEEZELITE_MC_ERR_REVALIDATE'), error, false));\n      }\n      this.#playerStartupParams = null;\n      this.#playerRunState = PlayerRunState.ConfigRequireRevalidate;\n      sm.refreshUIConfig();\n\n      return;\n    }\n\n    if (startupParams.type === 'basic') {\n      startupParamsChanged = options?.force ||\n        !this.#playerStartupParams ||\n        this.#playerStartupParams.type !== 'basic' ||\n        (this.#playerStartupParams.playerName !== startupParams.playerName ||\n          this.#playerStartupParams.card !== startupParams.card ||\n          this.#playerStartupParams.mixerType !== startupParams.mixerType ||\n          this.#playerStartupParams.mixer !== startupParams.mixer ||\n          this.#playerStartupParams.dsdFormat !== startupParams.dsdFormat);\n    }\n    else { // `manual` startupParams type\n      startupParamsChanged = options?.force ||\n        !this.#playerStartupParams ||\n        this.#playerStartupParams.type !== 'manual' ||\n        this.#playerStartupParams.startupOptions !== startupParams.startupOptions;\n    }\n\n    if (startupParamsChanged) {\n      this.#playerStartupParams = startupParams;\n      sm.getLogger().info(`[squeezelite_mc] Restarting Squeezelite service with params: ${JSON.stringify(startupParams)}`);\n\n      try {\n        await initSqueezeliteService(startupParams);\n        sm.toast('success', sm.getI18n('SQUEEZELITE_MC_RESTARTED_CONFIG'));\n        this.#playerRunState = PlayerRunState.Normal;\n        sm.refreshUIConfig();\n      }\n      catch (error) {\n        if (error instanceof SystemError && error.code === SystemErrorCode.DeviceBusy) {\n          sm.toast('error', sm.getI18n('SQUEEZELITE_MC_ERR_RESTART_DEV_BUSY'));\n        }\n        else {\n          sm.toast('error', sm.getErrorMessage(sm.getI18n('SQUEEZELITE_MC_ERR_RESTART'), error, false));\n        }\n        this.#playerStartupParams = null;\n        this.#playerRunState = PlayerRunState.ConfigRequireRestart;\n        sm.refreshUIConfig();\n      }\n    }\n  }\n\n  async #handlePlayerConfigChange() {\n    // Volumio can emit multiple change notifications within a short interval.\n    // We set a delay timer to avoid calling initSqueezeliteService() multiple times.\n    if (this.#playerConfigChangeDelayTimer) {\n      clearTimeout(this.#playerConfigChangeDelayTimer);\n      this.#playerConfigChangeDelayTimer = null;\n    }\n    this.#playerConfigChangeDelayTimer = setTimeout(async () => {\n      this.#revalidatePlayerConfig();\n    }, 1500);\n  }\n\n  #resolveOnStatusMode(mode: string, timeout = 2000) {\n    if (!this.#playerStatusMonitor) {\n      return libQ.resolve(true);\n    }\n    const monitor = this.#playerStatusMonitor;\n    const defer = libQ.defer();\n    const updateHandler = (data: any) => {\n      if (data.status.mode === mode) {\n        monitor.off('update', updateHandler);\n        clearTimeout(updateTimeout);\n        defer.resolve();\n      }\n    };\n    const updateTimeout = setTimeout(() => {\n      monitor.off('update', updateHandler);\n      defer.resolve();\n    }, timeout);\n\n    monitor.on('update', updateHandler);\n\n    return defer.promise;\n  }\n\n  /**\n   * Config functions\n   */\n\n  configStartSqueezelite(data: { force?: boolean }) {\n    this.#revalidatePlayerConfig(data);\n  }\n\n  configSaveServerCredentials(data: Record<string, string> = {}) {\n    const credentials: ServerCredentials = {};\n    for (const [ fieldName, value ] of Object.entries(data)) {\n      let fieldType: string | undefined,\n        serverName: string | undefined;\n      if (fieldName.endsWith('_username')) {\n        fieldType = 'username';\n        serverName = fieldName.substring(0, fieldName.length - 9);\n      }\n      else if (fieldName.endsWith('_password')) {\n        fieldType = 'password';\n        serverName = fieldName.substring(0, fieldName.length - 9);\n      }\n      if (fieldType && serverName) {\n        if (!credentials[serverName]) {\n          credentials[serverName] = {\n            username: '',\n            password: ''\n          };\n        }\n        if (fieldType === 'username') {\n          credentials[serverName].username = value.trim();\n        }\n        else if (fieldType === 'password') {\n          credentials[serverName].password = value.trim();\n        }\n      }\n    }\n    Object.keys(credentials).forEach((serverName) => {\n      if (credentials[serverName].username === '') {\n        delete credentials[serverName];\n      }\n    });\n\n    const oldCredentials = sm.getConfigValue('serverCredentials');\n    sm.setConfigValue('serverCredentials', credentials);\n    if (equal(credentials, oldCredentials)) {\n      sm.toast('success', sm.getI18n('SQUEEZELITE_MC_SETTINGS_SAVED'));\n    }\n    else {\n      // Restart components that rely on serverCredentials\n      sm.toast('success', sm.getI18n('SQUEEZELITE_MC_APPLY_CONFIG_CHANGE'));\n      sm.refreshUIConfig().then(() => {\n        if (this.#proxy) {\n          this.#proxy.setServerCredentials(credentials);\n        }\n        this.#clearPlayerStatusMonitor()\n          .then(() => this.#clearPlayerFinder())\n          .then(() => this.#initAndStartPlayerFinder());\n      });\n    }\n  }\n\n  configSwitchToBasicSqueezeliteSettings() {\n    sm.setConfigValue('playerConfigType', 'basic');\n    this.#revalidatePlayerConfig({ force: true });\n  }\n\n  configSwitchToManualSqueezeliteSettings() {\n    sm.setConfigValue('playerConfigType', 'manual');\n    this.#revalidatePlayerConfig({ force: true });\n  }\n\n  async configSaveBasicSqueezeliteSettings(data: any) {\n    const playerNameType = data.playerNameType.value;\n    const playerName = data.playerName.trim();\n    const dsdPlayback = data.dsdPlayback.value;\n    if (playerNameType === 'custom' && playerName === '') {\n      sm.toast('error', sm.getI18n('SQUEEZELITE_MC_ERR_PLAYER_NAME'));\n      return;\n    }\n\n    const oldConfig = sm.getConfigValue('basicPlayerConfig');\n    const revalidate =\n      oldConfig.playerNameType !== playerNameType ||\n      oldConfig.playerName !== playerName ||\n      oldConfig.dsdPlayback !== dsdPlayback;\n\n    const newConfig: BasicPlayerConfig = {\n      type: 'basic',\n      playerNameType,\n      playerName,\n      dsdPlayback,\n      fadeOnPauseResume: data.fadeOnPauseResume\n    };\n    sm.setConfigValue('basicPlayerConfig', newConfig);\n\n    await this.#applyFadeOnPauseResume();\n\n    if (!revalidate) {\n      sm.toast('success', sm.getI18n('SQUEEZELITE_MC_SETTINGS_SAVED'));\n    }\n    else {\n      this.#revalidatePlayerConfig();\n    }\n  }\n\n  async configSaveManualSqueezeliteSettings(data: any) {\n    const startupOptions = data.startupOptions.trim();\n    const { startupOptions: oldStartupOptions } = sm.getConfigValue('manualPlayerConfig');\n\n    const newConfig: ManualPlayerConfig = {\n      type: 'manual',\n      fadeOnPauseResume: data.fadeOnPauseResume,\n      startupOptions\n    };\n    sm.setConfigValue('manualPlayerConfig', newConfig);\n\n    await this.#applyFadeOnPauseResume();\n\n    if (startupOptions === oldStartupOptions) {\n      sm.toast('success', sm.getI18n('SQUEEZELITE_MC_SETTINGS_SAVED'));\n    }\n    else {\n      this.#revalidatePlayerConfig();\n    }\n  }\n\n  /**\n   * Volumio playback control functions\n   */\n\n  stop() {\n    if (this.#commandDispatcher) {\n      this.#commandDispatcher.sendStop();\n      return this.#resolveOnStatusMode('stop');\n    }\n    return libQ.resolve(true);\n  }\n\n  play() {\n    if (this.#commandDispatcher) {\n      this.#commandDispatcher.sendPlay();\n      return this.#resolveOnStatusMode('play');\n    }\n    return libQ.resolve(true);\n  }\n\n  pause() {\n    if (this.#commandDispatcher) {\n      this.#commandDispatcher.sendPause();\n      return this.#resolveOnStatusMode('pause');\n    }\n    return libQ.resolve(true);\n  }\n\n  resume() {\n    if (this.#commandDispatcher) {\n      this.#commandDispatcher.sendPlay();\n      return this.#resolveOnStatusMode('play');\n    }\n    return libQ.resolve(true);\n  }\n\n  seek(position: number) {\n    if (this.#commandDispatcher) {\n      return jsPromiseToKew(this.#commandDispatcher.sendSeek(position));\n    }\n    return libQ.resolve(true);\n  }\n\n  next() {\n    if (this.#commandDispatcher) {\n      return jsPromiseToKew(this.#commandDispatcher.sendNext());\n    }\n    return libQ.resolve(true);\n  }\n\n  previous() {\n    if (this.#commandDispatcher) {\n      if (this.#previousDoubleClickTimeout) {\n        this.#previousDoubleClickTimeout = null;\n        return jsPromiseToKew(this.#commandDispatcher.sendPrevious());\n      }\n\n      this.#previousDoubleClickTimeout = setTimeout(() => {\n        this.#previousDoubleClickTimeout = null;\n      }, 3000);\n      return this.seek(0);\n\n    }\n    return libQ.resolve(true);\n  }\n\n  repeat(value: boolean, repeatSingle: boolean) {\n    if (this.#commandDispatcher) {\n      this.#commandDispatcher.sendRepeat(value ? (repeatSingle ? LMS_REPEAT_CURRENT_SONG : LMS_REPEAT_PLAYLIST) : LMS_REPEAT_OFF);\n    }\n    return libQ.resolve(true);\n  }\n\n  random(value: boolean) {\n    if (this.#commandDispatcher) {\n      this.#commandDispatcher.sendShuffle(value ? LMS_SHUFFLE_BY_SONG : LMS_SHUFFLE_OFF);\n    }\n    return libQ.resolve(true);\n  }\n}\n\nexport = ControllerSqueezeliteMC;\n"]}