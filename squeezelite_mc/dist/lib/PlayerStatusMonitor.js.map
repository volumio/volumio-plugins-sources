{"version":3,"file":"PlayerStatusMonitor.js","sourceRoot":"","sources":["../../src/lib/PlayerStatusMonitor.ts"],"names":[],"mappings":"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","sourcesContent":["import EventEmitter from 'events';\nimport sm from './SqueezeliteMCContext';\nimport { Notification, NotificationListener } from 'lms-cli-notifications';\nimport Player, { PlayerStatus } from './types/Player';\nimport { ServerCredentials } from './types/Server';\nimport { getServerConnectParams } from './Util';\nimport { sendRpcRequest } from './RPC';\nimport { AbortController } from 'node-abort-controller';\n\nexport default class PlayerStatusMonitor extends EventEmitter {\n  #player: Player;\n  #serverCredentials: ServerCredentials;\n  #notificationListener: NotificationListener | null;\n  #statusRequestTimer: NodeJS.Timeout | null;\n  #statusRequestController: AbortController | null;\n  #syncMaster: string | null;\n\n  constructor(player: Player, serverCredentials: ServerCredentials) {\n    super();\n    this.#player = player;\n    this.#serverCredentials = serverCredentials;\n    this.#notificationListener = null;\n    this.#statusRequestTimer = null;\n    this.#statusRequestController = null;\n    this.#syncMaster = null;\n  }\n\n  async start() {\n    this.#notificationListener = await this.#createAndStartNotificationListener();\n    this.#syncMaster = (await this.#getPlayerSyncMaster()).syncMaster;\n    if (this.#syncMaster) {\n      sm.getLogger().info(`[squeezelite_mc] Squeezelite in sync group with sync master ${this.#syncMaster}.`);\n    }\n    await this.#getStatusAndEmit();\n  }\n\n  async stop() {\n    if (this.#notificationListener) {\n      await this.#notificationListener.stop();\n    }\n  }\n\n  getPlayer() {\n    return this.#player;\n  }\n\n  requestUpdate() {\n    this.#getStatusAndEmit();\n  }\n\n  #handleDisconnect() {\n    if (!this.#notificationListener) {\n      return;\n    }\n    this.#notificationListener.removeAllListeners('notification');\n    this.#notificationListener.removeAllListeners('disconnect');\n    this.#notificationListener = null;\n    this.#abortCurrentAndPendingStatusRequest();\n\n    this.emit('disconnect', this.#player);\n  }\n\n  #handleNotification(data: Notification) {\n    let preRequestStatus = Promise.resolve();\n    if (data.notification === 'sync') {\n      if (data.params[0] === '-') {\n        if (data.playerId === this.#player.id) { // Unsynced\n          sm.getLogger().info('[squeezelite_mc] Squeezelite removed from sync group.');\n          this.#syncMaster = null;\n        }\n        else if (data.playerId === this.#syncMaster) { // Sync master itself unsynced\n          sm.getLogger().info(`[squeezelite_mc] Squeezelite's sync master (${this.#syncMaster}) removed from sync group.`);\n          // Need to get updated sync master, if any.\n          preRequestStatus = this.#getPlayerSyncMaster().then((result) => {\n            if (result.syncMaster) {\n              sm.getLogger().info(`[squeezelite_mc] Squeezelite is now in sync group with sync master ${result.syncMaster}.`);\n            }\n            else if (!result.error) {\n              sm.getLogger().info('[squeezelite_mc] Squeezelite is now unsynced or in a sync group with itself as the sync master.');\n            }\n            this.#syncMaster = result.syncMaster;\n          });\n        }\n      }\n      else if (data.playerId && data.params[0] === this.#player.id) { // Synced\n        this.#syncMaster = data.playerId;\n        sm.getLogger().info(`[squeezelite_mc] Squeezelite joined sync group with sync master ${this.#syncMaster}.`);\n      }\n    }\n    if (data.playerId === this.#player.id || data.notification === 'sync' ||\n      (this.#syncMaster && data.playerId === this.#syncMaster)) {\n      this.#abortCurrentAndPendingStatusRequest();\n      preRequestStatus.finally(() => {\n        this.#abortCurrentAndPendingStatusRequest();\n        this.#statusRequestTimer = setTimeout(this.#getStatusAndEmit.bind(this), 200);\n      });\n    }\n  }\n\n  async #getStatusAndEmit() {\n    this.#abortCurrentAndPendingStatusRequest();\n    this.#statusRequestController = new AbortController();\n\n    const playerStatus = await this.#requestPlayerStatus(this.#statusRequestController);\n    if (playerStatus._requestAborted !== undefined && playerStatus._requestAborted) {\n      return;\n    }\n    this.emit('update', {\n      player: this.#player,\n      status: this.#parsePlayerStatusResult(playerStatus.result)\n    });\n  }\n\n  #abortCurrentAndPendingStatusRequest() {\n    if (this.#statusRequestTimer) {\n      clearTimeout(this.#statusRequestTimer);\n      this.#statusRequestTimer = null;\n    }\n    if (this.#statusRequestController) {\n      this.#statusRequestController.abort();\n      this.#statusRequestController = null;\n    }\n  }\n\n  async #createAndStartNotificationListener() {\n    const notificationListener = new NotificationListener({\n      server: getServerConnectParams(this.#player.server, this.#serverCredentials, 'cli'),\n      subscribe: [ 'play', 'stop', 'pause', 'playlist', 'mixer', 'sync' ]\n    });\n    notificationListener.on('notification', this.#handleNotification.bind(this));\n    notificationListener.on('disconnect', this.#handleDisconnect.bind(this));\n    await notificationListener.start();\n    return notificationListener;\n  }\n\n  async #requestPlayerStatus(abortController: AbortController) {\n    const connectParams = getServerConnectParams(this.#player.server, this.#serverCredentials, 'rpc');\n    return sendRpcRequest(connectParams, [\n      this.#player.id,\n      [\n        'status',\n        '-',\n        1,\n        'tags:cgAABbehldiqtyrTISSuoKLNJj'\n      ]\n    ], abortController);\n  }\n\n  // If player is in a sync group, then get the master player of the group.\n  // Returns null if player is not in a sync group or it is the master player itself.\n  async #getPlayerSyncMaster() {\n    const connectParams = getServerConnectParams(this.#player.server, this.#serverCredentials, 'rpc');\n    try {\n      const status = await sendRpcRequest(connectParams, [\n        this.#player.id,\n        [\n          'status'\n        ]\n      ]);\n      return {\n        syncMaster: status.result.sync_master !== this.#player.id ? status.result.sync_master : null\n      };\n    }\n    catch (error) {\n      sm.getLogger().error(sm.getErrorMessage('[squeezelite_mc] Error in getting Squeezelite\\'s sync master: ', error));\n      return {\n        error: error\n      };\n    }\n  }\n\n  #parsePlayerStatusResult(data: any) {\n    const result: PlayerStatus = {\n      mode: data.mode,\n      time: data.time,\n      volume: data['mixer volume'],\n      repeatMode: data['playlist repeat'],\n      shuffleMode: data['playlist shuffle'],\n      canSeek: data['can_seek']\n    };\n\n    const track = data.playlist_loop[0];\n    if (track) {\n      result.currentTrack = {\n        type: track.type,\n        title: track.title,\n        artist: track.artist,\n        trackArtist: track.trackartist,\n        albumArtist: track.albumartist,\n        album: track.album,\n        remoteTitle: track.remote_title,\n        artworkUrl: track.artwork_url,\n        coverArt: track.coverart,\n        duration: track.duration,\n        sampleRate: track.samplerate,\n        sampleSize: track.samplesize,\n        bitrate: track.bitrate\n      };\n    }\n\n    return result;\n  }\n\n  on(event: 'update', listener: (data: {player: Player; status: PlayerStatus}) => void): this;\n  on(event: 'disconnect', listener: (player: Player) => void): this;\n  on(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.on(event, listener);\n  }\n}\n"]}