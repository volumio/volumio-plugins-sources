{"version":3,"file":"RPC.js","sourceRoot":"","sources":["../../src/lib/RPC.ts"],"names":[],"mappings":";;;;;;AAAA,4DAAgD;AAChD,iCAA2D;AAG3D,MAAM,iBAAiB,GAAG;IACxB,IAAI,EAAE,CAAC;IACP,QAAQ,EAAE,cAAc;CACzB,CAAC;AAEF,MAAM,YAAY,GAAG;IACnB,cAAc,EAAE,kBAAkB;CACnC,CAAC;AAEK,KAAK,UAAU,cAAc,CAAC,aAAkC,EAAE,MAAW,EAAE,eAAwC;IAC5H,MAAM,IAAI,GAAG;QACX,GAAG,iBAAiB;QACpB,MAAM;KACP,CAAC;IACF,MAAM,GAAG,GAAG,GAAG,aAAa,CAAC,IAAI,IAAI,aAAa,CAAC,IAAI,aAAa,CAAC;IACrE,MAAM,OAAO,GAAgB,EAAE,GAAG,YAAY,EAAE,CAAC;IACjD,IAAI,aAAa,CAAC,QAAQ,EAAE;QAC1B,OAAO,CAAC,aAAa,GAAG,SAAS,IAAA,mBAAY,EAAC,GAAG,aAAa,CAAC,QAAQ,IAAI,aAAa,CAAC,QAAQ,IAAI,EAAE,EAAE,CAAC,EAAE,CAAC;KAC9G;IAED,IAAI;QACF,MAAM,QAAQ,GAAG,MAAM,IAAA,oBAAK,EAAC,GAAG,EAAE;YAChC,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAC1B,OAAO;YACP,MAAM,EAAE,eAAe,CAAC,CAAC,CAAC,eAAe,CAAC,MAAa,CAAC,CAAC,CAAC,SAAS;SACpE,CAAC,CAAC;QAEH,IAAI,QAAQ,CAAC,EAAE,EAAE;YACf,OAAO,QAAQ,CAAC,IAAI,EAAE,CAAC;SACxB;QAED,MAAM,IAAI,KAAK,CAAC,GAAG,QAAQ,CAAC,MAAM,MAAM,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;KAEhE;IACD,OAAO,KAAK,EAAE;QACZ,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,YAAY,EAAE;YACzD,OAAO,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC;SAClC;QAED,MAAM,KAAK,CAAC;KAEb;AACH,CAAC;AAlCD,wCAkCC;AAED,MAAM,CAAC,OAAO,GAAG;IACf,cAAc;CACf,CAAC","sourcesContent":["import fetch, { HeadersInit } from 'node-fetch';\nimport { ServerConnectParams, encodeBase64 } from './Util';\nimport { AbortController } from 'node-abort-controller';\n\nconst BASE_REQUEST_BODY = {\n  'id': 1,\n  'method': 'slim.request'\n};\n\nconst BASE_HEADERS = {\n  'Content-Type': 'application/json'\n};\n\nexport async function sendRpcRequest(connectParams: ServerConnectParams, params: any, abortController?: AbortController | null) {\n  const body = {\n    ...BASE_REQUEST_BODY,\n    params\n  };\n  const url = `${connectParams.host}:${connectParams.port}/jsonrpc.js`;\n  const headers: HeadersInit = { ...BASE_HEADERS };\n  if (connectParams.username) {\n    headers.Authorization = `Basic ${encodeBase64(`${connectParams.username}:${connectParams.password || ''}`)}`;\n  }\n\n  try {\n    const response = await fetch(url, {\n      method: 'post',\n      body: JSON.stringify(body),\n      headers,\n      signal: abortController ? abortController.signal as any : undefined\n    });\n\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error(`${response.status} - ${response.statusText}`);\n\n  }\n  catch (error) {\n    if (error instanceof Error && error.name === 'AbortError') {\n      return { _requestAborted: true };\n    }\n\n    throw error;\n\n  }\n}\n\nmodule.exports = {\n  sendRpcRequest\n};\n"]}