{"version":3,"file":"UIConfigSchema.js","sourceRoot":"","sources":["../../../src/lib/config/UIConfigSchema.ts"],"names":[],"mappings":";AAAA,0CAA0C","sourcesContent":["// Auto-generated from ./src/UIConfig.json\n\nimport { UIConfigButton, UIConfigInput, UIConfigSelect, UIConfigSwitch } from \"./UIConfig\";\nexport type UIConfigSectionKey = \n              'section_daemon' | \n              'section_localization' | \n              'section_metadata_service' | \n              'section_weather_service' | \n              'section_startup_options' | \n              'section_content_region' | \n              'section_layouts' | \n              'section_text_styles' | \n              'section_widget_styles' | \n              'section_album_art_style' | \n              'section_background_style' | \n              'section_action_panel' | \n              'section_docked_menu' | \n              'section_docked_action_panel_trigger' | \n              'section_docked_volume_indicator' | \n              'section_docked_clock' | \n              'section_docked_weather' | \n              'section_docked_media_format' | \n              'section_idle_view' | \n              'section_extra_screens' | \n              'section_kiosk' | \n              'section_performance' | \n              'section_backup_config' | \n              'section_other';\n\nexport type UIConfigSectionContentKeyOf<K extends UIConfigSectionKey> =\n  K extends 'section_daemon' ?\n    'port' | \n    'url' | \n    'previewUrl' | \n    'openPreview' :\n\n  K extends 'section_localization' ?\n    'geoCoordinates' | \n    'geoCoordinatesGuide' | \n    'locale' | \n    'timezone' | \n    'unitSystem' :\n\n  K extends 'section_metadata_service' ?\n    'geniusAccessToken' | \n    'accessTokenGuide' | \n    'excludeParenthesized' | \n    'parenthesisType' | \n    'clearMetadataCache' | \n    'queryMusicServices' | \n    'enableSyncedLyrics' :\n\n  K extends 'section_weather_service' ?\n    'clearWeatherCache' :\n\n  K extends 'section_startup_options' ?\n    'activeScreen' | \n    'activateIdleScreen' :\n\n  K extends 'section_content_region' ?\n    'padding' | \n    'npBasicViewPadding' | \n    'npBasicViewPaddingPortrait' | \n    'npInfoViewPadding' | \n    'npInfoViewPaddingPortrait' :\n\n  K extends 'section_layouts' ?\n    'npInfoViewLayoutType' | \n    'npInfoViewLayoutPreferBiggerAlbumArt' | \n    'npInfoViewLayout' :\n\n  K extends 'section_text_styles' ?\n    'trackInfoVisibility' | \n    'titleVisibility' | \n    'artistVisibility' | \n    'albumVisibility' | \n    'mediaInfoVisibility' | \n    'fontStyles' | \n    'titleFontStyle' | \n    'artistFontStyle' | \n    'albumFontStyle' | \n    'mediaInfoFontStyle' | \n    'seekTimeFontStyle' | \n    'metadataFontStyle' | \n    'fontSizes' | \n    'titleFontSize' | \n    'artistFontSize' | \n    'albumFontSize' | \n    'mediaInfoFontSize' | \n    'seekTimeFontSize' | \n    'metadataFontSize' | \n    'syncedLyricsCurrentLineFontSize' | \n    'fontColors' | \n    'titleFontColor' | \n    'artistFontColor' | \n    'albumFontColor' | \n    'mediaInfoFontColor' | \n    'seekTimeFontColor' | \n    'metadataFontColor' | \n    'syncedLyricsColor' | \n    'syncedLyricsCurrentLineColor' | \n    'textMargins' | \n    'titleMargin' | \n    'artistMargin' | \n    'albumMargin' | \n    'mediaInfoMargin' | \n    'textAlignmentH' | \n    'textAlignmentV' | \n    'textAlignmentLyrics' | \n    'maxLines' | \n    'maxTitleLines' | \n    'maxArtistLines' | \n    'maxAlbumLines' | \n    'trackInfoOrder' | \n    'trackInfoTitleOrder' | \n    'trackInfoArtistOrder' | \n    'trackInfoAlbumOrder' | \n    'trackInfoMediaInfoOrder' | \n    'trackInfoMarqueeTitle' :\n\n  K extends 'section_widget_styles' ?\n    'widgetColors' | \n    'widgetPrimaryColor' | \n    'widgetHighlightColor' | \n    'widgetVisibility' | \n    'playbackButtonsVisibility' | \n    'seekbarVisibility' | \n    'playbackButtonSizeType' | \n    'playbackButtonSize' | \n    'seekbarStyling' | \n    'seekbarThickness' | \n    'seekbarBorderRadius' | \n    'seekbarShowThumb' | \n    'seekbarThumbSize' | \n    'widgetMargins' | \n    'playbackButtonsMargin' | \n    'seekbarMargin' :\n\n  K extends 'section_album_art_style' ?\n    'albumartVisibility' | \n    'albumartSize' | \n    'albumartWidth' | \n    'albumartHeight' | \n    'albumartFit' | \n    'albumartBorder' | \n    'albumartBorderRadius' | \n    'albumartMargin' :\n\n  K extends 'section_background_style' ?\n    'backgroundType' | \n    'backgroundColor' | \n    'albumartBackgroundFit' | \n    'albumartBackgroundPosition' | \n    'albumartBackgroundBlur' | \n    'albumartBackgroundScale' | \n    'volumioBackgroundImage' | \n    'volumioBackgroundFit' | \n    'volumioBackgroundPosition' | \n    'volumioBackgroundBlur' | \n    'volumioBackgroundScale' | \n    'myBackgroundImage' | \n    'myBackgroundRandomRefreshInterval' | \n    'myBackgroundRandomRefreshOnTrackChange' | \n    'myBackgroundFit' | \n    'myBackgroundPosition' | \n    'myBackgroundBlur' | \n    'myBackgroundScale' | \n    'backgroundOverlay' | \n    'backgroundOverlayColor' | \n    'backgroundOverlayColorOpacity' | \n    'backgroundOverlayGradient' | \n    'backgroundOverlayGradientOpacity' :\n\n  K extends 'section_action_panel' ?\n    'showVolumeSlider' :\n\n  K extends 'section_docked_menu' ?\n    'enabled' | \n    'iconSettings' | \n    'iconStyle' | \n    'iconSize' | \n    'margin' :\n\n  K extends 'section_docked_action_panel_trigger' ?\n    'enabled' | \n    'iconSettings' | \n    'iconStyle' | \n    'iconSize' | \n    'iconColor' | \n    'opacity' | \n    'margin' :\n\n  K extends 'section_docked_volume_indicator' ?\n    'enabled' | \n    'placement' | \n    'displayOrder' | \n    'fontSettings' | \n    'fontSize' | \n    'fontSizePercentSymbol' | \n    'fontColor' | \n    'iconSettings' | \n    'iconSize' | \n    'iconColor' | \n    'margin' | \n    'showVolumeBarOnClick' | \n    'volumeBarPosition' | \n    'volumeBarOrientation' :\n\n  K extends 'section_docked_clock' ?\n    'enabled' | \n    'placement' | \n    'displayOrder' | \n    'showInfo' | \n    'fontSettings' | \n    'fontSize' | \n    'dateColor' | \n    'timeColor' | \n    'dateFormat' | \n    'yearFormat' | \n    'monthFormat' | \n    'dayFormat' | \n    'dayOfWeekFormat' | \n    'timeFormat' | \n    'hourFormat' | \n    'hour24' | \n    'showSeconds' | \n    'margin' :\n\n  K extends 'section_docked_weather' ?\n    'enabled' | \n    'placement' | \n    'displayOrder' | \n    'showHumidity' | \n    'showWindSpeed' | \n    'fontSettings' | \n    'fontSize' | \n    'fontColor' | \n    'iconSettings' | \n    'iconStyle' | \n    'iconSize' | \n    'iconMonoColor' | \n    'iconAnimate' | \n    'margin' :\n\n  K extends 'section_docked_media_format' ?\n    'enabled' | \n    'placement' | \n    'displayOrder' | \n    'fontSettings' | \n    'fontSize' | \n    'fontColor' | \n    'margin' :\n\n  K extends 'section_idle_view' ?\n    'enabled' | \n    'waitTime' | \n    'showLocation' | \n    'showWeather' | \n    'mainAlignment' | \n    'mainAlignmentCycleInterval' | \n    'timeFormat' | \n    'hour24' | \n    'showSeconds' | \n    'fontSizes' | \n    'timeFontSize' | \n    'dateFontSize' | \n    'locationFontSize' | \n    'weatherCurrentBaseFontSize' | \n    'weatherForecastBaseFontSize' | \n    'fontColors' | \n    'timeColor' | \n    'dateColor' | \n    'locationColor' | \n    'weatherCurrentColor' | \n    'weatherForecastColor' | \n    'weatherIconSettings' | \n    'weatherIconStyle' | \n    'weatherCurrentIconSize' | \n    'weatherForecastIconSize' | \n    'weatherCurrentIconMonoColor' | \n    'weatherForecastIconMonoColor' | \n    'weatherCurrentIconAnimate' | \n    'backgroundType' | \n    'backgroundColor' | \n    'volumioBackgroundImage' | \n    'volumioBackgroundFit' | \n    'volumioBackgroundPosition' | \n    'volumioBackgroundBlur' | \n    'volumioBackgroundScale' | \n    'myBackgroundImage' | \n    'myBackgroundRandomRefreshInterval' | \n    'myBackgroundFit' | \n    'myBackgroundPosition' | \n    'myBackgroundBlur' | \n    'myBackgroundScale' | \n    'unsplashKeywords' | \n    'unsplashKeywordsAppendDayPeriod' | \n    'unsplashMatchScreenSize' | \n    'unsplashRefreshInterval' | \n    'unsplashBackgroundBlur' | \n    'backgroundOverlay' | \n    'backgroundOverlayColor' | \n    'backgroundOverlayColorOpacity' | \n    'backgroundOverlayGradient' | \n    'backgroundOverlayGradientOpacity' | \n    'weatherBackground' | \n    'weatherBackgroundColor' | \n    'weatherBackgroundColorOpacity' | \n    'weatherBackgroundGradient' | \n    'weatherBackgroundGradientOpacity' | \n    'weatherAreaHeightType' | \n    'weatherAreaHeight' :\n\n  K extends 'section_extra_screens' ?\n    'theme' :\n\n  K extends 'section_performance' ?\n    'transitionEffectsKiosk' | \n    'transitionEffectsOtherDevices' | \n    'unmountScreensOnExit' | \n    'unmountNowPlayingScreenOnExit' | \n    'unmountBrowseScreenOnExit' | \n    'unmountQueueScreenOnExit' | \n    'unmountVolumioScreenOnExit' | \n    'syncedLyricsDelay' :\n\n  K extends 'section_backup_config' ?\n    'backupName' :\n\n  K extends 'section_other' ?\n    'broadcastRefresh' | \n    'viewReadme' :\n\n  never;\n\nexport type UIConfigElementOf<K extends UIConfigSectionKey, C extends UIConfigSectionContentKeyOf<K>> =\n  K extends 'section_daemon' ? (\n    C extends 'port' ? UIConfigInput<K, 'number'> :\n    C extends 'url' ? UIConfigInput<K, 'text'> :\n    C extends 'previewUrl' ? UIConfigInput<K, 'text'> :\n    C extends 'openPreview' ? UIConfigButton<K> :\n    never\n  ) : \n\n  K extends 'section_localization' ? (\n    C extends 'geoCoordinates' ? UIConfigInput<K, 'text'> :\n    C extends 'geoCoordinatesGuide' ? UIConfigButton<K> :\n    C extends 'locale' ? UIConfigSelect<K> :\n    C extends 'timezone' ? UIConfigSelect<K> :\n    C extends 'unitSystem' ? UIConfigSelect<K> :\n    never\n  ) : \n\n  K extends 'section_metadata_service' ? (\n    C extends 'geniusAccessToken' ? UIConfigInput<K, 'text'> :\n    C extends 'accessTokenGuide' ? UIConfigButton<K> :\n    C extends 'excludeParenthesized' ? UIConfigSwitch<K> :\n    C extends 'parenthesisType' ? UIConfigSelect<K> :\n    C extends 'clearMetadataCache' ? UIConfigButton<K> :\n    C extends 'queryMusicServices' ? UIConfigSwitch<K> :\n    C extends 'enableSyncedLyrics' ? UIConfigSwitch<K> :\n    never\n  ) : \n\n  K extends 'section_weather_service' ? (\n    C extends 'clearWeatherCache' ? UIConfigButton<K> :\n    never\n  ) : \n\n  K extends 'section_startup_options' ? (\n    C extends 'activeScreen' ? UIConfigSelect<K> :\n    C extends 'activateIdleScreen' ? UIConfigSwitch<K> :\n    never\n  ) : \n\n  K extends 'section_content_region' ? (\n    C extends 'padding' ? UIConfigSelect<K> :\n    C extends 'npBasicViewPadding' ? UIConfigInput<K, 'text'> :\n    C extends 'npBasicViewPaddingPortrait' ? UIConfigInput<K, 'text'> :\n    C extends 'npInfoViewPadding' ? UIConfigInput<K, 'text'> :\n    C extends 'npInfoViewPaddingPortrait' ? UIConfigInput<K, 'text'> :\n    never\n  ) : \n\n  K extends 'section_layouts' ? (\n    C extends 'npInfoViewLayoutType' ? UIConfigSelect<K> :\n    C extends 'npInfoViewLayoutPreferBiggerAlbumArt' ? UIConfigSwitch<K> :\n    C extends 'npInfoViewLayout' ? UIConfigSelect<K> :\n    never\n  ) : \n\n  K extends 'section_text_styles' ? (\n    C extends 'trackInfoVisibility' ? UIConfigSelect<K> :\n    C extends 'titleVisibility' ? UIConfigSwitch<K> :\n    C extends 'artistVisibility' ? UIConfigSwitch<K> :\n    C extends 'albumVisibility' ? UIConfigSwitch<K> :\n    C extends 'mediaInfoVisibility' ? UIConfigSwitch<K> :\n    C extends 'fontStyles' ? UIConfigSelect<K> :\n    C extends 'titleFontStyle' ? UIConfigSelect<K> :\n    C extends 'artistFontStyle' ? UIConfigSelect<K> :\n    C extends 'albumFontStyle' ? UIConfigSelect<K> :\n    C extends 'mediaInfoFontStyle' ? UIConfigSelect<K> :\n    C extends 'seekTimeFontStyle' ? UIConfigSelect<K> :\n    C extends 'metadataFontStyle' ? UIConfigSelect<K> :\n    C extends 'fontSizes' ? UIConfigSelect<K> :\n    C extends 'titleFontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'artistFontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'albumFontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'mediaInfoFontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'seekTimeFontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'metadataFontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'syncedLyricsCurrentLineFontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'fontColors' ? UIConfigSelect<K> :\n    C extends 'titleFontColor' ? UIConfigInput<K, 'color'> :\n    C extends 'artistFontColor' ? UIConfigInput<K, 'color'> :\n    C extends 'albumFontColor' ? UIConfigInput<K, 'color'> :\n    C extends 'mediaInfoFontColor' ? UIConfigInput<K, 'color'> :\n    C extends 'seekTimeFontColor' ? UIConfigInput<K, 'color'> :\n    C extends 'metadataFontColor' ? UIConfigInput<K, 'color'> :\n    C extends 'syncedLyricsColor' ? UIConfigInput<K, 'color'> :\n    C extends 'syncedLyricsCurrentLineColor' ? UIConfigInput<K, 'color'> :\n    C extends 'textMargins' ? UIConfigSelect<K> :\n    C extends 'titleMargin' ? UIConfigInput<K, 'text'> :\n    C extends 'artistMargin' ? UIConfigInput<K, 'text'> :\n    C extends 'albumMargin' ? UIConfigInput<K, 'text'> :\n    C extends 'mediaInfoMargin' ? UIConfigInput<K, 'text'> :\n    C extends 'textAlignmentH' ? UIConfigSelect<K> :\n    C extends 'textAlignmentV' ? UIConfigSelect<K> :\n    C extends 'textAlignmentLyrics' ? UIConfigSelect<K> :\n    C extends 'maxLines' ? UIConfigSelect<K> :\n    C extends 'maxTitleLines' ? UIConfigInput<K, 'number'> :\n    C extends 'maxArtistLines' ? UIConfigInput<K, 'number'> :\n    C extends 'maxAlbumLines' ? UIConfigInput<K, 'number'> :\n    C extends 'trackInfoOrder' ? UIConfigSelect<K> :\n    C extends 'trackInfoTitleOrder' ? UIConfigInput<K, 'number'> :\n    C extends 'trackInfoArtistOrder' ? UIConfigInput<K, 'number'> :\n    C extends 'trackInfoAlbumOrder' ? UIConfigInput<K, 'number'> :\n    C extends 'trackInfoMediaInfoOrder' ? UIConfigInput<K, 'number'> :\n    C extends 'trackInfoMarqueeTitle' ? UIConfigSwitch<K> :\n    never\n  ) : \n\n  K extends 'section_widget_styles' ? (\n    C extends 'widgetColors' ? UIConfigSelect<K> :\n    C extends 'widgetPrimaryColor' ? UIConfigInput<K, 'color'> :\n    C extends 'widgetHighlightColor' ? UIConfigInput<K, 'color'> :\n    C extends 'widgetVisibility' ? UIConfigSelect<K> :\n    C extends 'playbackButtonsVisibility' ? UIConfigSwitch<K> :\n    C extends 'seekbarVisibility' ? UIConfigSwitch<K> :\n    C extends 'playbackButtonSizeType' ? UIConfigSelect<K> :\n    C extends 'playbackButtonSize' ? UIConfigInput<K, 'text'> :\n    C extends 'seekbarStyling' ? UIConfigSelect<K> :\n    C extends 'seekbarThickness' ? UIConfigInput<K, 'text'> :\n    C extends 'seekbarBorderRadius' ? UIConfigInput<K, 'text'> :\n    C extends 'seekbarShowThumb' ? UIConfigSwitch<K> :\n    C extends 'seekbarThumbSize' ? UIConfigInput<K, 'text'> :\n    C extends 'widgetMargins' ? UIConfigSelect<K> :\n    C extends 'playbackButtonsMargin' ? UIConfigInput<K, 'text'> :\n    C extends 'seekbarMargin' ? UIConfigInput<K, 'text'> :\n    never\n  ) : \n\n  K extends 'section_album_art_style' ? (\n    C extends 'albumartVisibility' ? UIConfigSwitch<K> :\n    C extends 'albumartSize' ? UIConfigSelect<K> :\n    C extends 'albumartWidth' ? UIConfigInput<K, 'text'> :\n    C extends 'albumartHeight' ? UIConfigInput<K, 'text'> :\n    C extends 'albumartFit' ? UIConfigSelect<K> :\n    C extends 'albumartBorder' ? UIConfigInput<K, 'text'> :\n    C extends 'albumartBorderRadius' ? UIConfigInput<K, 'text'> :\n    C extends 'albumartMargin' ? UIConfigInput<K, 'text'> :\n    never\n  ) : \n\n  K extends 'section_background_style' ? (\n    C extends 'backgroundType' ? UIConfigSelect<K> :\n    C extends 'backgroundColor' ? UIConfigInput<K, 'color'> :\n    C extends 'albumartBackgroundFit' ? UIConfigSelect<K> :\n    C extends 'albumartBackgroundPosition' ? UIConfigSelect<K> :\n    C extends 'albumartBackgroundBlur' ? UIConfigInput<K, 'text'> :\n    C extends 'albumartBackgroundScale' ? UIConfigInput<K, 'text'> :\n    C extends 'volumioBackgroundImage' ? UIConfigSelect<K> :\n    C extends 'volumioBackgroundFit' ? UIConfigSelect<K> :\n    C extends 'volumioBackgroundPosition' ? UIConfigSelect<K> :\n    C extends 'volumioBackgroundBlur' ? UIConfigInput<K, 'text'> :\n    C extends 'volumioBackgroundScale' ? UIConfigInput<K, 'text'> :\n    C extends 'myBackgroundImage' ? UIConfigSelect<K> :\n    C extends 'myBackgroundRandomRefreshInterval' ? UIConfigInput<K, 'number'> :\n    C extends 'myBackgroundRandomRefreshOnTrackChange' ? UIConfigSwitch<K> :\n    C extends 'myBackgroundFit' ? UIConfigSelect<K> :\n    C extends 'myBackgroundPosition' ? UIConfigSelect<K> :\n    C extends 'myBackgroundBlur' ? UIConfigInput<K, 'text'> :\n    C extends 'myBackgroundScale' ? UIConfigInput<K, 'text'> :\n    C extends 'backgroundOverlay' ? UIConfigSelect<K> :\n    C extends 'backgroundOverlayColor' ? UIConfigInput<K, 'color'> :\n    C extends 'backgroundOverlayColorOpacity' ? UIConfigInput<K, 'text'> :\n    C extends 'backgroundOverlayGradient' ? UIConfigInput<K, 'text'> :\n    C extends 'backgroundOverlayGradientOpacity' ? UIConfigInput<K, 'text'> :\n    never\n  ) : \n\n  K extends 'section_action_panel' ? (\n    C extends 'showVolumeSlider' ? UIConfigSwitch<K> :\n    never\n  ) : \n\n  K extends 'section_docked_menu' ? (\n    C extends 'enabled' ? UIConfigSwitch<K> :\n    C extends 'iconSettings' ? UIConfigSelect<K> :\n    C extends 'iconStyle' ? UIConfigSelect<K> :\n    C extends 'iconSize' ? UIConfigInput<K, 'text'> :\n    C extends 'margin' ? UIConfigInput<K, 'text'> :\n    never\n  ) : \n\n  K extends 'section_docked_action_panel_trigger' ? (\n    C extends 'enabled' ? UIConfigSwitch<K> :\n    C extends 'iconSettings' ? UIConfigSelect<K> :\n    C extends 'iconStyle' ? UIConfigSelect<K> :\n    C extends 'iconSize' ? UIConfigInput<K, 'text'> :\n    C extends 'iconColor' ? UIConfigInput<K, 'color'> :\n    C extends 'opacity' ? UIConfigInput<K, 'text'> :\n    C extends 'margin' ? UIConfigInput<K, 'text'> :\n    never\n  ) : \n\n  K extends 'section_docked_volume_indicator' ? (\n    C extends 'enabled' ? UIConfigSwitch<K> :\n    C extends 'placement' ? UIConfigSelect<K> :\n    C extends 'displayOrder' ? UIConfigInput<K, 'number'> :\n    C extends 'fontSettings' ? UIConfigSelect<K> :\n    C extends 'fontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'fontSizePercentSymbol' ? UIConfigInput<K, 'text'> :\n    C extends 'fontColor' ? UIConfigInput<K, 'color'> :\n    C extends 'iconSettings' ? UIConfigSelect<K> :\n    C extends 'iconSize' ? UIConfigInput<K, 'text'> :\n    C extends 'iconColor' ? UIConfigInput<K, 'color'> :\n    C extends 'margin' ? UIConfigInput<K, 'text'> :\n    C extends 'showVolumeBarOnClick' ? UIConfigSwitch<K> :\n    C extends 'volumeBarPosition' ? UIConfigSelect<K> :\n    C extends 'volumeBarOrientation' ? UIConfigSelect<K> :\n    never\n  ) : \n\n  K extends 'section_docked_clock' ? (\n    C extends 'enabled' ? UIConfigSwitch<K> :\n    C extends 'placement' ? UIConfigSelect<K> :\n    C extends 'displayOrder' ? UIConfigInput<K, 'number'> :\n    C extends 'showInfo' ? UIConfigSelect<K> :\n    C extends 'fontSettings' ? UIConfigSelect<K> :\n    C extends 'fontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'dateColor' ? UIConfigInput<K, 'color'> :\n    C extends 'timeColor' ? UIConfigInput<K, 'color'> :\n    C extends 'dateFormat' ? UIConfigSelect<K> :\n    C extends 'yearFormat' ? UIConfigSelect<K> :\n    C extends 'monthFormat' ? UIConfigSelect<K> :\n    C extends 'dayFormat' ? UIConfigSelect<K> :\n    C extends 'dayOfWeekFormat' ? UIConfigSelect<K> :\n    C extends 'timeFormat' ? UIConfigSelect<K> :\n    C extends 'hourFormat' ? UIConfigSelect<K> :\n    C extends 'hour24' ? UIConfigSwitch<K> :\n    C extends 'showSeconds' ? UIConfigSwitch<K> :\n    C extends 'margin' ? UIConfigInput<K, 'text'> :\n    never\n  ) : \n\n  K extends 'section_docked_weather' ? (\n    C extends 'enabled' ? UIConfigSwitch<K> :\n    C extends 'placement' ? UIConfigSelect<K> :\n    C extends 'displayOrder' ? UIConfigInput<K, 'number'> :\n    C extends 'showHumidity' ? UIConfigSwitch<K> :\n    C extends 'showWindSpeed' ? UIConfigSwitch<K> :\n    C extends 'fontSettings' ? UIConfigSelect<K> :\n    C extends 'fontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'fontColor' ? UIConfigInput<K, 'color'> :\n    C extends 'iconSettings' ? UIConfigSelect<K> :\n    C extends 'iconStyle' ? UIConfigSelect<K> :\n    C extends 'iconSize' ? UIConfigInput<K, 'text'> :\n    C extends 'iconMonoColor' ? UIConfigInput<K, 'color'> :\n    C extends 'iconAnimate' ? UIConfigSwitch<K> :\n    C extends 'margin' ? UIConfigInput<K, 'text'> :\n    never\n  ) : \n\n  K extends 'section_docked_media_format' ? (\n    C extends 'enabled' ? UIConfigSwitch<K> :\n    C extends 'placement' ? UIConfigSelect<K> :\n    C extends 'displayOrder' ? UIConfigInput<K, 'number'> :\n    C extends 'fontSettings' ? UIConfigSelect<K> :\n    C extends 'fontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'fontColor' ? UIConfigInput<K, 'color'> :\n    C extends 'margin' ? UIConfigInput<K, 'text'> :\n    never\n  ) : \n\n  K extends 'section_idle_view' ? (\n    C extends 'enabled' ? UIConfigSelect<K> :\n    C extends 'waitTime' ? UIConfigInput<K, 'number'> :\n    C extends 'showLocation' ? UIConfigSwitch<K> :\n    C extends 'showWeather' ? UIConfigSwitch<K> :\n    C extends 'mainAlignment' ? UIConfigSelect<K> :\n    C extends 'mainAlignmentCycleInterval' ? UIConfigInput<K, 'number'> :\n    C extends 'timeFormat' ? UIConfigSelect<K> :\n    C extends 'hour24' ? UIConfigSwitch<K> :\n    C extends 'showSeconds' ? UIConfigSwitch<K> :\n    C extends 'fontSizes' ? UIConfigSelect<K> :\n    C extends 'timeFontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'dateFontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'locationFontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'weatherCurrentBaseFontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'weatherForecastBaseFontSize' ? UIConfigInput<K, 'text'> :\n    C extends 'fontColors' ? UIConfigSelect<K> :\n    C extends 'timeColor' ? UIConfigInput<K, 'color'> :\n    C extends 'dateColor' ? UIConfigInput<K, 'color'> :\n    C extends 'locationColor' ? UIConfigInput<K, 'color'> :\n    C extends 'weatherCurrentColor' ? UIConfigInput<K, 'color'> :\n    C extends 'weatherForecastColor' ? UIConfigInput<K, 'color'> :\n    C extends 'weatherIconSettings' ? UIConfigSelect<K> :\n    C extends 'weatherIconStyle' ? UIConfigSelect<K> :\n    C extends 'weatherCurrentIconSize' ? UIConfigInput<K, 'text'> :\n    C extends 'weatherForecastIconSize' ? UIConfigInput<K, 'text'> :\n    C extends 'weatherCurrentIconMonoColor' ? UIConfigInput<K, 'color'> :\n    C extends 'weatherForecastIconMonoColor' ? UIConfigInput<K, 'color'> :\n    C extends 'weatherCurrentIconAnimate' ? UIConfigSwitch<K> :\n    C extends 'backgroundType' ? UIConfigSelect<K> :\n    C extends 'backgroundColor' ? UIConfigInput<K, 'color'> :\n    C extends 'volumioBackgroundImage' ? UIConfigSelect<K> :\n    C extends 'volumioBackgroundFit' ? UIConfigSelect<K> :\n    C extends 'volumioBackgroundPosition' ? UIConfigSelect<K> :\n    C extends 'volumioBackgroundBlur' ? UIConfigInput<K, 'text'> :\n    C extends 'volumioBackgroundScale' ? UIConfigInput<K, 'text'> :\n    C extends 'myBackgroundImage' ? UIConfigSelect<K> :\n    C extends 'myBackgroundRandomRefreshInterval' ? UIConfigInput<K, 'number'> :\n    C extends 'myBackgroundFit' ? UIConfigSelect<K> :\n    C extends 'myBackgroundPosition' ? UIConfigSelect<K> :\n    C extends 'myBackgroundBlur' ? UIConfigInput<K, 'text'> :\n    C extends 'myBackgroundScale' ? UIConfigInput<K, 'text'> :\n    C extends 'unsplashKeywords' ? UIConfigInput<K, 'text'> :\n    C extends 'unsplashKeywordsAppendDayPeriod' ? UIConfigSwitch<K> :\n    C extends 'unsplashMatchScreenSize' ? UIConfigSwitch<K> :\n    C extends 'unsplashRefreshInterval' ? UIConfigInput<K, 'number'> :\n    C extends 'unsplashBackgroundBlur' ? UIConfigInput<K, 'text'> :\n    C extends 'backgroundOverlay' ? UIConfigSelect<K> :\n    C extends 'backgroundOverlayColor' ? UIConfigInput<K, 'color'> :\n    C extends 'backgroundOverlayColorOpacity' ? UIConfigInput<K, 'text'> :\n    C extends 'backgroundOverlayGradient' ? UIConfigInput<K, 'text'> :\n    C extends 'backgroundOverlayGradientOpacity' ? UIConfigInput<K, 'text'> :\n    C extends 'weatherBackground' ? UIConfigSelect<K> :\n    C extends 'weatherBackgroundColor' ? UIConfigInput<K, 'color'> :\n    C extends 'weatherBackgroundColorOpacity' ? UIConfigInput<K, 'text'> :\n    C extends 'weatherBackgroundGradient' ? UIConfigInput<K, 'text'> :\n    C extends 'weatherBackgroundGradientOpacity' ? UIConfigInput<K, 'text'> :\n    C extends 'weatherAreaHeightType' ? UIConfigSelect<K> :\n    C extends 'weatherAreaHeight' ? UIConfigInput<K, 'text'> :\n    never\n  ) : \n\n  K extends 'section_extra_screens' ? (\n    C extends 'theme' ? UIConfigSelect<K> :\n    never\n  ) : \n\n  K extends 'section_performance' ? (\n    C extends 'transitionEffectsKiosk' ? UIConfigSwitch<K> :\n    C extends 'transitionEffectsOtherDevices' ? UIConfigSwitch<K> :\n    C extends 'unmountScreensOnExit' ? UIConfigSelect<K> :\n    C extends 'unmountNowPlayingScreenOnExit' ? UIConfigSwitch<K> :\n    C extends 'unmountBrowseScreenOnExit' ? UIConfigSwitch<K> :\n    C extends 'unmountQueueScreenOnExit' ? UIConfigSwitch<K> :\n    C extends 'unmountVolumioScreenOnExit' ? UIConfigSwitch<K> :\n    C extends 'syncedLyricsDelay' ? UIConfigInput<K, 'number'> :\n    never\n  ) : \n\n  K extends 'section_backup_config' ? (\n    C extends 'backupName' ? UIConfigInput<K, 'text'> :\n    never\n  ) : \n\n  K extends 'section_other' ? (\n    C extends 'broadcastRefresh' ? UIConfigButton<K> :\n    C extends 'viewReadme' ? UIConfigButton<K> :\n    never\n  ) : \n\n  never;\n\n"]}