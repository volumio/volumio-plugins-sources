{"version":3,"file":"PluginConfig.js","sourceRoot":"","sources":["../../../src/lib/config/PluginConfig.ts"],"names":[],"mappings":";;;;;;AAAA,oDAA4B;AAC5B,2DAAuX;AACvX,gGAA2H;AAC3H,kFAAsG;AAqCzF,QAAA,6BAA6B,GAA2B;IACnE,iBAAiB,EAAE,EAAE;IACrB,oBAAoB,EAAE,KAAK;IAC3B,eAAe,EAAE,OAAO;IACxB,kBAAkB,EAAE,IAAI;IACxB,kBAAkB,EAAE,IAAI;CACzB,CAAC;AAkBW,QAAA,oBAAoB,GAAuB;IACtD,IAAI,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;IACzC,OAAO,EAAE,EAAE,YAAY,EAAE,gBAAM,CAAC,SAAS,CAAC,sCAAqB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;IAC9E,eAAe,EAAE,EAAE,YAAY,EAAE,gBAAM,CAAC,SAAS,CAAC,qCAA6B,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;IAC9F,aAAa,EAAE,EAAE,YAAY,EAAE,gBAAM,CAAC,SAAS,CAAC,oDAA4B,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;IAC3F,mBAAmB,EAAE,EAAE,YAAY,EAAE,gBAAM,CAAC,SAAS,CAAC,oDAA+B,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;IACpG,UAAU,EAAE,EAAE,YAAY,EAAE,gBAAM,CAAC,SAAS,CAAC,8CAAyB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;IACrF,WAAW,EAAE,EAAE,YAAY,EAAE,gBAAM,CAAC,SAAS,CAAC,+CAA0B,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;IACvF,aAAa,EAAE,EAAE,YAAY,EAAE,gBAAM,CAAC,SAAS,CAAC,8CAAyB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;IACxF,KAAK,EAAE,EAAE,YAAY,EAAE,gBAAM,CAAC,SAAS,CAAC,yCAAoB,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;IAC3E,WAAW,EAAE,EAAE,YAAY,EAAE,gBAAM,CAAC,SAAS,CAAC,+CAA0B,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;IACvF,YAAY,EAAE,EAAE,YAAY,EAAE,gBAAM,CAAC,SAAS,CAAC,gDAA2B,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE;IACzF,YAAY,EAAE,EAAE,YAAY,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE;IACtD,aAAa,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;CACnD,CAAC","sourcesContent":["import lodash from 'lodash';\nimport { ActionPanelSettings, BackgroundSettings, DefaultActionPanelSettings, DefaultBackgroundSettings, DefaultIdleScreenSettings, DefaultLocalizationSettings, DefaultNowPlayingScreenSettings, DefaultPerformanceSettings, DefaultThemeSettings, IdleScreenSettings, LocalizationSettings, NowPlayingScreenSettings, PerformanceSettings, ThemeSettings } from 'now-playing-common';\nimport { ContentRegionSettings, DefaultContentRegionSettings } from 'now-playing-common/dist/config/ContentRegionSettings';\nimport { DefaultStartupOptions, StartupOptions } from 'now-playing-common/dist/config/StartupOptions';\n\nexport type PluginConfigKey = keyof PluginConfigSchema;\nexport type PluginConfigValue<T extends PluginConfigKey> = PluginConfigSchema[T]['defaultValue'];\n\nexport interface PluginConfigSchemaEntry<T, U = false> {\n  defaultValue: T;\n  json: U;\n}\n\nexport interface PluginConfigSchema {\n  port: PluginConfigSchemaEntry<number>;\n  startup: PluginConfigSchemaEntry<StartupOptions, true>;\n  metadataService: PluginConfigSchemaEntry<MetadataServiceOptions, true>;\n  contentRegion: PluginConfigSchemaEntry<ContentRegionSettings, true>;\n  ['screen.nowPlaying']: PluginConfigSchemaEntry<NowPlayingScreenSettings, true>;\n  background: PluginConfigSchemaEntry<BackgroundSettings, true>;\n  actionPanel: PluginConfigSchemaEntry<ActionPanelSettings, true>;\n  ['screen.idle']: PluginConfigSchemaEntry<IdleScreenSettings, true>;\n  theme: PluginConfigSchemaEntry<ThemeSettings, true>;\n  performance: PluginConfigSchemaEntry<PerformanceSettings, true>;\n  localization: PluginConfigSchemaEntry<LocalizationSettings, true>;\n  // What is being displayed on the kiosk screen (i.e. the one attached to Volumio device)?\n  // - 'default' - Default Volumio interface\n  // - 'nowPlaying' - Now Playing page served by the plugin\n  kioskDisplay: PluginConfigSchemaEntry<'default' | 'nowPlaying'>;\n  configVersion: PluginConfigSchemaEntry<string | null>;\n}\n\nexport interface MetadataServiceOptions {\n  geniusAccessToken: string;\n  excludeParenthesized: boolean;\n  parenthesisType: 'round' | 'square' | 'round+square';\n  queryMusicServices: boolean;\n  enableSyncedLyrics: boolean;\n}\n\nexport const DefaultMetadataServiceOptions: MetadataServiceOptions = {\n  geniusAccessToken: '',\n  excludeParenthesized: false,\n  parenthesisType: 'round',\n  queryMusicServices: true,\n  enableSyncedLyrics: true\n};\n\nexport interface I18nOptions {\n  language: {\n    label: string;\n    optionValues: I18nOptionValue[];\n  };\n  region: {\n    label: string;\n    optionValues: I18nOptionValue[];\n  }\n}\n\nexport interface I18nOptionValue {\n  label: string;\n  value: string;\n}\n\nexport const PLUGIN_CONFIG_SCHEMA: PluginConfigSchema = {\n  port: { defaultValue: 4004, json: false },\n  startup: { defaultValue: lodash.cloneDeep(DefaultStartupOptions), json: true },\n  metadataService: { defaultValue: lodash.cloneDeep(DefaultMetadataServiceOptions), json: true },\n  contentRegion: { defaultValue: lodash.cloneDeep(DefaultContentRegionSettings), json: true },\n  'screen.nowPlaying': { defaultValue: lodash.cloneDeep(DefaultNowPlayingScreenSettings), json: true },\n  background: { defaultValue: lodash.cloneDeep(DefaultBackgroundSettings), json: true },\n  actionPanel: { defaultValue: lodash.cloneDeep(DefaultActionPanelSettings), json: true },\n  'screen.idle': { defaultValue: lodash.cloneDeep(DefaultIdleScreenSettings), json: true },\n  theme: { defaultValue: lodash.cloneDeep(DefaultThemeSettings), json: true },\n  performance: { defaultValue: lodash.cloneDeep(DefaultPerformanceSettings), json: true },\n  localization: { defaultValue: lodash.cloneDeep(DefaultLocalizationSettings), json: true },\n  kioskDisplay: { defaultValue: 'default', json: false },\n  configVersion: { defaultValue: null, json: false }\n};\n"]}